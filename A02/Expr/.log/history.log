--[ 2023.02.26.12.25.17.088.0 ]--
NewLogger: Expr
Version: 1.4
--[ 2023.02.26.12.25.17.119.0 ]--
InitTree:
/.log/history.log

--[ 2023.02.26.12.27.45.395.0 ]--
UpdateTree (AD): 5 0
+ /.idea/misc.xml
+ /.idea/modules.xml
+ /.idea/workspace.xml
+ /Expr.g4
+ /Expr.iml

--[ 2023.02.26.12.27.45.431.0 ]--
InitFile: /Expr.g4


--[ 2023.02.26.12.27.45.431.1 ]--
InitFile: /Expr.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
  </component>
</module>

--[ 2023.02.26.12.28.10.834.0 ]--
:/Expr.g4
r 1 grammar Expr;
--[ 2023.02.26.12.28.11.939.0 ]--
+ 2 
+ 3 prog: stat+
--[ 2023.02.26.12.28.12.113.0 ]--
+ 4 
+ 5 stat: expr N
--[ 2023.02.26.12.28.12.458.0 ]--
r 5 stat: expr NE
--[ 2023.02.26.12.28.13.606.0 ]--
r 5 stat: expr NEWLINE
--[ 2023.02.26.12.28.16.277.0 ]--
+ 6     | 
--[ 2023.02.26.12.28.16.417.0 ]--
r 6     | I
--[ 2023.02.26.12.28.16.565.0 ]--
r 6     | ID
--[ 2023.02.26.12.28.17.814.0 ]--
r 6     | ID '='
--[ 2023.02.26.12.28.18.019.0 ]--
r 6     | ID '=' 
--[ 2023.02.26.12.28.18.608.0 ]--
r 6     | ID '=' e
--[ 2023.02.26.12.28.18.703.0 ]--
r 6     | ID '=' ex
--[ 2023.02.26.12.28.18.941.0 ]--
r 6     | ID '=' exp
--[ 2023.02.26.12.28.19.132.0 ]--
r 6     | ID '=' expr
--[ 2023.02.26.12.28.19.358.0 ]--
r 6     | ID '=' expr 
--[ 2023.02.26.12.28.19.702.0 ]--
r 6     | ID '=' expr N
--[ 2023.02.26.12.28.19.772.0 ]--
r 6     | ID '=' expr NE
--[ 2023.02.26.12.28.19.914.0 ]--
r 6     | ID '=' expr NEW
--[ 2023.02.26.12.28.20.145.0 ]--
r 6     | ID '=' expr NEWL
--[ 2023.02.26.12.28.20.184.0 ]--
r 6     | ID '=' expr NEWLI
--[ 2023.02.26.12.28.20.269.0 ]--
r 6     | ID '=' expr NEWLIN
--[ 2023.02.26.12.28.20.315.0 ]--
r 6     | ID '=' expr NEWLINE
--[ 2023.02.26.12.28.21.208.0 ]--
+ 7     
--[ 2023.02.26.12.28.22.108.0 ]--
r 7     |
--[ 2023.02.26.12.28.22.287.0 ]--
r 7     | 
--[ 2023.02.26.12.28.22.596.0 ]--
r 7     | N
--[ 2023.02.26.12.28.22.691.0 ]--
r 7     | NE
--[ 2023.02.26.12.28.22.807.0 ]--
r 7     | NEW
--[ 2023.02.26.12.28.22.978.0 ]--
r 7     | NEWL
--[ 2023.02.26.12.28.23.053.0 ]--
r 7     | NEWLI
--[ 2023.02.26.12.28.23.651.0 ]--
r 7     | NEWLINE
--[ 2023.02.26.12.28.24.247.0 ]--
+ 8     
--[ 2023.02.26.12.28.24.275.0 ]--
r 8     ;
--[ 2023.02.26.12.28.24.998.0 ]--
+ 9     
--[ 2023.02.26.12.28.25.086.0 ]--
+ 9     
--[ 2023.02.26.12.28.26.395.0 ]--
r 10    
--[ 2023.02.26.12.28.26.401.0 ]--
r 10   
--[ 2023.02.26.12.28.27.273.0 ]--
r 10  
--[ 2023.02.26.12.28.27.546.0 ]--
- 10
--[ 2023.02.26.12.28.27.988.0 ]--
r 9    
--[ 2023.02.26.12.28.28.202.0 ]--
r 9   
--[ 2023.02.26.12.28.28.365.0 ]--
r 9  
--[ 2023.02.26.12.28.28.714.0 ]--
- 9
--[ 2023.02.26.12.28.29.450.0 ]--
+ 9 
+ 10 e
--[ 2023.02.26.12.28.29.479.0 ]--
r 10 ex
--[ 2023.02.26.12.28.29.733.0 ]--
r 10 exp
--[ 2023.02.26.12.28.29.855.0 ]--
r 10 expr
--[ 2023.02.26.12.28.32.251.0 ]--
r 10 expr    
--[ 2023.02.26.12.28.32.703.0 ]--
r 10 expr    :
--[ 2023.02.26.12.28.32.951.0 ]--
r 10 expr    : 
--[ 2023.02.26.12.28.34.137.0 ]--
r 10 expr    : m
--[ 2023.02.26.12.28.34.172.0 ]--
r 10 expr    : mu
--[ 2023.02.26.12.28.34.311.0 ]--
r 10 expr    : mul
--[ 2023.02.26.12.28.34.356.0 ]--
r 10 expr    : mult
--[ 2023.02.26.12.28.34.819.0 ]--
r 10 expr    : multE
--[ 2023.02.26.12.28.34.958.0 ]--
r 10 expr    : multEx
--[ 2023.02.26.12.28.35.190.0 ]--
r 10 expr    : multExp
--[ 2023.02.26.12.28.35.262.0 ]--
r 10 expr    : multExpr
--[ 2023.02.26.12.28.35.879.0 ]--
r 10 expr    : multExpr 
--[ 2023.02.26.12.28.36.123.0 ]--
r 10 expr    : multExpr ()
--[ 2023.02.26.12.28.36.908.0 ]--
r 10 expr    : multExpr (())
--[ 2023.02.26.12.28.36.921.0 ]--
r 10 expr    : multExpr (('))
--[ 2023.02.26.12.28.37.059.0 ]--
r 10 expr    : multExpr (('+))
--[ 2023.02.26.12.28.37.725.0 ]--
r 10 expr    : multExpr (('+'))
--[ 2023.02.26.12.28.37.963.0 ]--
r 10 expr    : multExpr (('+' ))
--[ 2023.02.26.12.28.38.289.0 ]--
r 10 expr    : multExpr (('+' |))
--[ 2023.02.26.12.28.38.368.0 ]--
r 10 expr    : multExpr (('+' | ))
--[ 2023.02.26.12.28.38.792.0 ]--
r 10 expr    : multExpr (('+' | '))
--[ 2023.02.26.12.28.38.858.0 ]--
r 10 expr    : multExpr (('+' | '-))
--[ 2023.02.26.12.28.39.312.0 ]--
r 10 expr    : multExpr (('+' | '-'))
--[ 2023.02.26.12.28.41.316.0 ]--
r 10 expr    : multExpr (('+' | '-') )
--[ 2023.02.26.12.28.41.747.0 ]--
r 10 expr    : multExpr (('+' | '-') m)
--[ 2023.02.26.12.28.41.769.0 ]--
r 10 expr    : multExpr (('+' | '-') mu)
--[ 2023.02.26.12.28.41.888.0 ]--
r 10 expr    : multExpr (('+' | '-') mul)
--[ 2023.02.26.12.28.41.960.0 ]--
r 10 expr    : multExpr (('+' | '-') mult)
--[ 2023.02.26.12.28.42.383.0 ]--
r 10 expr    : multExpr (('+' | '-') multE)
--[ 2023.02.26.12.28.42.503.0 ]--
r 10 expr    : multExpr (('+' | '-') multEx)
--[ 2023.02.26.12.28.42.668.0 ]--
r 10 expr    : multExpr (('+' | '-') multExp)
--[ 2023.02.26.12.28.42.808.0 ]--
r 10 expr    : multExpr (('+' | '-') multExpr)
--[ 2023.02.26.12.28.43.381.0 ]--
r 10 expr    : multExpr (('+' | '-') multExpr)*
--[ 2023.02.26.12.28.44.678.0 ]--
r 10 expr    : multExpr (('+' | '-') multExpr)*;
--[ 2023.02.26.12.28.46.074.0 ]--
r 10 expr    : multExpr (('+' | '-') multExpr)* ;
--[ 2023.02.26.12.28.48.718.0 ]--
r 5 stat    : expr NEWLINE
--[ 2023.02.26.12.28.49.911.0 ]--
r 6         | ID '=' expr NEWLINE
--[ 2023.02.26.12.28.50.683.0 ]--
r 7         | NEWLINE
--[ 2023.02.26.12.28.51.314.0 ]--
r 8         ;
--[ 2023.02.26.12.29.01.351.0 ]--
r 3 prog    : stat+
--[ 2023.02.26.12.29.04.126.0 ]--
+ 11 m
--[ 2023.02.26.12.29.04.256.0 ]--
r 11 mu
--[ 2023.02.26.12.29.04.325.0 ]--
r 11 mul
--[ 2023.02.26.12.29.04.365.0 ]--
r 11 mult
--[ 2023.02.26.12.29.04.979.0 ]--
r 11 multE
--[ 2023.02.26.12.29.05.210.0 ]--
r 11 multEx
--[ 2023.02.26.12.29.05.438.0 ]--
r 11 multExp
--[ 2023.02.26.12.29.05.568.0 ]--
r 11 multExpr
--[ 2023.02.26.12.29.06.248.0 ]--
r 11 multExpr    
--[ 2023.02.26.12.29.06.632.0 ]--
r 11 multExpr    :
--[ 2023.02.26.12.29.07.376.0 ]--
r 11 multExpr    : 
--[ 2023.02.26.12.29.07.562.0 ]--
r 11 multExpr    : a
--[ 2023.02.26.12.29.07.669.0 ]--
r 11 multExpr    : at
--[ 2023.02.26.12.29.07.783.0 ]--
r 11 multExpr    : ato
--[ 2023.02.26.12.29.07.870.0 ]--
r 11 multExpr    : atom
--[ 2023.02.26.12.29.08.365.0 ]--
r 11 multExpr    : atom 
--[ 2023.02.26.12.29.08.594.0 ]--
r 11 multExpr    : atom ()
--[ 2023.02.26.12.29.08.825.0 ]--
r 11 multExpr    : atom (')
--[ 2023.02.26.12.29.09.269.0 ]--
r 11 multExpr    : atom ('*)
--[ 2023.02.26.12.29.10.096.0 ]--
r 11 multExpr    : atom ('*')
--[ 2023.02.26.12.29.10.464.0 ]--
r 11 multExpr    : atom ('*' )
--[ 2023.02.26.12.29.10.533.0 ]--
r 11 multExpr    : atom ('*' a)
--[ 2023.02.26.12.29.10.628.0 ]--
r 11 multExpr    : atom ('*' at)
--[ 2023.02.26.12.29.10.733.0 ]--
r 11 multExpr    : atom ('*' ato)
--[ 2023.02.26.12.29.10.850.0 ]--
r 11 multExpr    : atom ('*' atom)
--[ 2023.02.26.12.29.11.489.0 ]--
r 11 multExpr    : atom ('*' atom)*
--[ 2023.02.26.12.29.12.613.0 ]--
r 11 multExpr    : atom ('*' atom)* 
--[ 2023.02.26.12.29.12.664.0 ]--
r 11 multExpr    : atom ('*' atom)* ;
--[ 2023.02.26.12.29.13.702.0 ]--
+ 12 a
--[ 2023.02.26.12.29.13.853.0 ]--
r 12 at
--[ 2023.02.26.12.29.13.985.0 ]--
r 12 ato
--[ 2023.02.26.12.29.14.105.0 ]--
r 12 atom
--[ 2023.02.26.12.29.14.532.0 ]--
r 12 atom    
--[ 2023.02.26.12.29.15.014.0 ]--
r 12 atom    :
--[ 2023.02.26.12.29.16.763.0 ]--
r 12 atom    : 
--[ 2023.02.26.12.29.17.017.0 ]--
r 12 atom    : I
--[ 2023.02.26.12.29.17.175.0 ]--
r 12 atom    : IN
--[ 2023.02.26.12.29.17.218.0 ]--
r 12 atom    : INT
--[ 2023.02.26.12.29.18.367.0 ]--
+ 13 |
--[ 2023.02.26.12.29.18.919.0 ]--
- 13
--[ 2023.02.26.12.29.19.123.0 ]--
+ 13     
--[ 2023.02.26.12.29.19.603.0 ]--
r 13         
--[ 2023.02.26.12.29.19.857.0 ]--
r 13         |
--[ 2023.02.26.12.29.20.055.0 ]--
r 13         | 
--[ 2023.02.26.12.29.20.569.0 ]--
r 13         | I
--[ 2023.02.26.12.29.20.692.0 ]--
r 13         | ID
--[ 2023.02.26.12.29.21.374.0 ]--
+ 14         
--[ 2023.02.26.12.29.22.044.0 ]--
r 14         |
--[ 2023.02.26.12.29.22.203.0 ]--
r 14         | 
--[ 2023.02.26.12.29.22.868.0 ]--
r 14         | '
--[ 2023.02.26.12.29.23.088.0 ]--
r 14         | '(
--[ 2023.02.26.12.29.23.257.0 ]--
r 14         | '('
--[ 2023.02.26.12.29.24.037.0 ]--
r 14         | '(' 
--[ 2023.02.26.12.29.24.258.0 ]--
r 14         | '(' e
--[ 2023.02.26.12.29.24.452.0 ]--
r 14         | '(' ex
--[ 2023.02.26.12.29.25.117.0 ]--
r 14         | '(' expr
--[ 2023.02.26.12.29.25.126.0 ]--
r 14         | '(' expr 
--[ 2023.02.26.12.29.25.332.0 ]--
r 14         | '(' expr '
--[ 2023.02.26.12.29.25.724.0 ]--
r 14         | '(' expr ')
--[ 2023.02.26.12.29.25.928.0 ]--
r 14         | '(' expr ')'
--[ 2023.02.26.12.29.26.993.0 ]--
+ 15         
--[ 2023.02.26.12.29.27.126.0 ]--
r 15         ;
--[ 2023.02.26.12.29.27.580.0 ]--
+ 16         
--[ 2023.02.26.12.29.27.989.0 ]--
r 16        
--[ 2023.02.26.12.29.28.145.0 ]--
r 16       
--[ 2023.02.26.12.29.28.277.0 ]--
r 16      
--[ 2023.02.26.12.29.28.426.0 ]--
r 16     
--[ 2023.02.26.12.29.28.547.0 ]--
r 16    
--[ 2023.02.26.12.29.28.680.0 ]--
r 16   
--[ 2023.02.26.12.29.28.824.0 ]--
r 16  
--[ 2023.02.26.12.29.29.220.0 ]--
- 16
--[ 2023.02.26.12.29.30.882.0 ]--
+ 16 
+ 17 I
--[ 2023.02.26.12.29.30.985.0 ]--
r 17 ID
--[ 2023.02.26.12.29.31.052.0 ]--
r 17 ID 
--[ 2023.02.26.12.29.31.768.0 ]--
r 17 ID
--[ 2023.02.26.12.29.31.933.0 ]--
r 17 ID  
--[ 2023.02.26.12.29.32.383.0 ]--
r 17 ID  :
--[ 2023.02.26.12.29.33.100.0 ]--
r 17 ID  : 
--[ 2023.02.26.12.29.33.273.0 ]--
r 17 ID  : [
--[ 2023.02.26.12.29.33.585.0 ]--
r 17 ID  : [a
--[ 2023.02.26.12.29.33.694.0 ]--
r 17 ID  : [a-
--[ 2023.02.26.12.29.33.909.0 ]--
r 17 ID  : [a-z
--[ 2023.02.26.12.29.34.305.0 ]--
r 17 ID  : [a-zA
--[ 2023.02.26.12.29.34.549.0 ]--
r 17 ID  : [a-zA-
--[ 2023.02.26.12.29.34.699.0 ]--
r 17 ID  : [a-zA-z
--[ 2023.02.26.12.29.35.114.0 ]--
r 17 ID  : [a-zA-
--[ 2023.02.26.12.29.35.331.0 ]--
r 17 ID  : [a-zA-Z
--[ 2023.02.26.12.29.35.751.0 ]--
r 17 ID  : [a-zA-Z=
--[ 2023.02.26.12.29.36.403.0 ]--
r 17 ID  : [a-zA-Z
--[ 2023.02.26.12.29.36.640.0 ]--
r 17 ID  : [a-zA-Z]
--[ 2023.02.26.12.29.37.062.0 ]--
r 17 ID  : [a-zA-Z]}
--[ 2023.02.26.12.29.37.481.0 ]--
r 17 ID  : [a-zA-Z]
--[ 2023.02.26.12.29.37.732.0 ]--
r 17 ID  : [a-zA-Z]+
--[ 2023.02.26.12.29.38.034.0 ]--
r 17 ID  : [a-zA-Z]+;
--[ 2023.02.26.12.29.39.915.0 ]--
r 17 ID  : [a-zA-Z]+ ;
--[ 2023.02.26.12.29.40.932.0 ]--
+ 18 I
--[ 2023.02.26.12.29.40.989.0 ]--
r 18 IN
--[ 2023.02.26.12.29.41.025.0 ]--
r 18 INT
--[ 2023.02.26.12.29.41.981.0 ]--
r 18 INT 
--[ 2023.02.26.12.29.42.466.0 ]--
r 18 INT :
--[ 2023.02.26.12.29.42.689.0 ]--
r 18 INT : 
--[ 2023.02.26.12.29.42.855.0 ]--
r 18 INT : [
--[ 2023.02.26.12.29.43.125.0 ]--
r 18 INT : [0
--[ 2023.02.26.12.29.43.394.0 ]--
r 18 INT : [0-
--[ 2023.02.26.12.29.43.649.0 ]--
r 18 INT : [0-8
--[ 2023.02.26.12.29.44.095.0 ]--
r 18 INT : [0-
--[ 2023.02.26.12.29.44.515.0 ]--
r 18 INT : [0-9
--[ 2023.02.26.12.29.44.820.0 ]--
r 18 INT : [0-9]
--[ 2023.02.26.12.29.45.133.0 ]--
r 18 INT : [0-9]}
--[ 2023.02.26.12.29.45.764.0 ]--
r 18 INT : [0-9]
--[ 2023.02.26.12.29.46.010.0 ]--
r 18 INT : [0-9]+
--[ 2023.02.26.12.29.46.374.0 ]--
r 18 INT : [0-9]+;
--[ 2023.02.26.12.29.47.014.0 ]--
r 18 INT : [0-9]+ ;
--[ 2023.02.26.12.29.48.592.0 ]--
+ 19 N
--[ 2023.02.26.12.29.48.659.0 ]--
r 19 NE
--[ 2023.02.26.12.29.48.768.0 ]--
r 19 NEW
--[ 2023.02.26.12.29.48.919.0 ]--
r 19 NEWL
--[ 2023.02.26.12.29.49.020.0 ]--
r 19 NEWLI
--[ 2023.02.26.12.29.49.134.0 ]--
r 19 NEWLIN
--[ 2023.02.26.12.29.49.265.0 ]--
r 19 NEWLINE
--[ 2023.02.26.12.29.49.825.0 ]--
r 19 NEWLINE 
--[ 2023.02.26.12.29.49.997.0 ]--
r 19 NEWLINE :
--[ 2023.02.26.12.29.50.212.0 ]--
r 19 NEWLINE : 
--[ 2023.02.26.12.29.50.941.0 ]--
r 19 NEWLINE : '
--[ 2023.02.26.12.29.51.122.0 ]--
r 19 NEWLINE : '\
--[ 2023.02.26.12.29.51.422.0 ]--
r 19 NEWLINE : '\r
--[ 2023.02.26.12.29.51.671.0 ]--
r 19 NEWLINE : '\r'
--[ 2023.02.26.12.29.52.087.0 ]--
r 19 NEWLINE : '\r'?
--[ 2023.02.26.12.29.53.462.0 ]--
r 19 NEWLINE : '\r'? 
--[ 2023.02.26.12.29.53.666.0 ]--
r 19 NEWLINE : '\r'? '
--[ 2023.02.26.12.29.53.813.0 ]--
r 19 NEWLINE : '\r'? '\
--[ 2023.02.26.12.29.54.043.0 ]--
r 19 NEWLINE : '\r'? '\n
--[ 2023.02.26.12.29.54.489.0 ]--
r 19 NEWLINE : '\r'? '\n'
--[ 2023.02.26.12.29.54.815.0 ]--
r 19 NEWLINE : '\r'? '\n';
--[ 2023.02.26.12.29.55.721.0 ]--
r 19 NEWLINE : '\r'? '\n' ;
--[ 2023.02.26.12.29.56.887.0 ]--
+ 20 W
--[ 2023.02.26.12.29.56.965.0 ]--
r 20 WS
--[ 2023.02.26.12.29.57.553.0 ]--
r 20 WS  
--[ 2023.02.26.12.29.58.078.0 ]--
r 20 WS      
--[ 2023.02.26.12.29.58.427.0 ]--
r 20 WS      :
--[ 2023.02.26.12.29.58.619.0 ]--
r 20 WS      : 
--[ 2023.02.26.12.29.59.140.0 ]--
r 20 WS      : [
--[ 2023.02.26.12.29.59.586.0 ]--
r 20 WS      : [ 
--[ 2023.02.26.12.29.59.809.0 ]--
r 20 WS      : [ \
--[ 2023.02.26.12.29.59.991.0 ]--
r 20 WS      : [ \t
--[ 2023.02.26.12.30.00.492.0 ]--
r 20 WS      : [ \t]
--[ 2023.02.26.12.30.01.356.0 ]--
r 20 WS      : [ \t]+
--[ 2023.02.26.12.30.01.541.0 ]--
r 20 WS      : [ \t]+ 
--[ 2023.02.26.12.30.01.730.0 ]--
r 20 WS      : [ \t]+ -
--[ 2023.02.26.12.30.02.097.0 ]--
r 20 WS      : [ \t]+ ->
--[ 2023.02.26.12.30.02.431.0 ]--
r 20 WS      : [ \t]+ -> 
--[ 2023.02.26.12.30.02.591.0 ]--
r 20 WS      : [ \t]+ -> s
--[ 2023.02.26.12.30.02.660.0 ]--
r 20 WS      : [ \t]+ -> sk
--[ 2023.02.26.12.30.02.853.0 ]--
r 20 WS      : [ \t]+ -> ski
--[ 2023.02.26.12.30.03.007.0 ]--
r 20 WS      : [ \t]+ -> skip
--[ 2023.02.26.12.30.03.394.0 ]--
r 20 WS      : [ \t]+ -> skip 
--[ 2023.02.26.12.30.03.569.0 ]--
r 20 WS      : [ \t]+ -> skip ;
--[ 2023.02.26.12.30.18.346.0 ]--
r 5 stat   : expr NEWLINE
--[ 2023.02.26.12.30.18.656.0 ]--
r 5 stat  : expr NEWLINE
--[ 2023.02.26.12.30.18.783.0 ]--
r 5 stat : expr NEWLINE
--[ 2023.02.26.12.30.18.943.0 ]--
r 5 stat: expr NEWLINE
--[ 2023.02.26.12.30.19.308.0 ]--
r 5 stat    : expr NEWLINE
--[ 2023.02.26.12.30.26.694.0 ]--
r 3 prog    : stat+ 
--[ 2023.02.26.12.30.26.833.0 ]--
r 3 prog    : stat+ ;
--[ 2023.02.26.12.30.32.146.0 ]--
- 9
--[ 2023.02.26.12.30.33.186.0 ]--
- 4
--[ 2023.02.26.12.30.33.802.0 ]--
- 2
--[ 2023.02.26.12.30.35.018.0 ]--
- 13
--[ 2023.02.26.12.30.37.169.0 ]--
r 7 expr        : multExpr (('+' | '-') multExpr)* ;
--[ 2023.02.26.12.30.37.983.0 ]--
r 6             ;
--[ 2023.02.26.12.30.39.181.0 ]--
r 5             | NEWLINE
--[ 2023.02.26.12.30.40.162.0 ]--
r 4             | ID '=' expr NEWLINE
--[ 2023.02.26.12.30.40.955.0 ]--
r 3 stat        : expr NEWLINE
--[ 2023.02.26.12.30.41.926.0 ]--
r 2 prog        : stat+ ;
--[ 2023.02.26.12.30.43.861.0 ]--
r 9 atom     : INT
--[ 2023.02.26.12.30.44.605.0 ]--
r 9 atom        : INT
--[ 2023.02.26.12.30.45.590.0 ]--
r 10             | ID
--[ 2023.02.26.12.30.46.499.0 ]--
r 11             | '(' expr ')'
--[ 2023.02.26.12.30.47.584.0 ]--
r 12             ;
--[ 2023.02.26.12.30.49.359.0 ]--
+ 9 
--[ 2023.02.26.12.30.49.903.0 ]--
+ 8 
--[ 2023.02.26.12.30.50.411.0 ]--
+ 7 
--[ 2023.02.26.12.30.51.286.0 ]--
+ 3 
--[ 2023.02.26.12.30.51.995.0 ]--
+ 2 
--[ 2023.02.26.12.30.53.065.0 ]--
+ 18 
--[ 2023.02.26.12.30.54.274.0 ]--
r 19 ID      : [a-zA-Z]+ ;
--[ 2023.02.26.12.30.55.884.0 ]--
r 20 INT     : [0-9]+ ;
--[ 2023.02.26.13.33.56.033.0 ]--
:/Expr.iml
+ 7       <sourceFolder url="file://$MODULE_DIR$/gen" isTestSource="false" />
--[ 2023.02.26.13.33.56.038.0 ]--
UpdateTree (AD): 10 0
+ /gen/Expr.interp
+ /gen/Expr.tokens
+ /gen/ExprLexer.java
+ /gen/ExprParser.java
+ /gen/ExprLexer.interp
+ /gen/ExprLexer.tokens
+ /gen/ExprVisitor.java
+ /gen/ExprListener.java
+ /gen/ExprBaseVisitor.java
+ /gen/ExprBaseListener.java

--[ 2023.02.26.13.33.56.038.1 ]--
InitFile: /gen/Expr.interp
token literal names:
null
'='
'+'
'-'
'*'
'('
')'
null
null
null
null

token symbolic names:
null
null
null
null
null
null
null
ID
INT
NEWLINE
WS

rule names:
prog
stat
expr
multExpr
atom


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 12, 53, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 3, 2, 6, 2, 14, 10, 2, 13, 2, 14, 2, 15, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 27, 10, 3, 3, 4, 3, 4, 3, 4, 7, 4, 32, 10, 4, 12, 4, 14, 4, 35, 11, 4, 3, 5, 3, 5, 3, 5, 7, 5, 40, 10, 5, 12, 5, 14, 5, 43, 11, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 5, 6, 51, 10, 6, 3, 6, 2, 2, 7, 2, 4, 6, 8, 10, 2, 3, 3, 2, 4, 5, 2, 54, 2, 13, 3, 2, 2, 2, 4, 26, 3, 2, 2, 2, 6, 28, 3, 2, 2, 2, 8, 36, 3, 2, 2, 2, 10, 50, 3, 2, 2, 2, 12, 14, 5, 4, 3, 2, 13, 12, 3, 2, 2, 2, 14, 15, 3, 2, 2, 2, 15, 13, 3, 2, 2, 2, 15, 16, 3, 2, 2, 2, 16, 3, 3, 2, 2, 2, 17, 18, 5, 6, 4, 2, 18, 19, 7, 11, 2, 2, 19, 27, 3, 2, 2, 2, 20, 21, 7, 9, 2, 2, 21, 22, 7, 3, 2, 2, 22, 23, 5, 6, 4, 2, 23, 24, 7, 11, 2, 2, 24, 27, 3, 2, 2, 2, 25, 27, 7, 11, 2, 2, 26, 17, 3, 2, 2, 2, 26, 20, 3, 2, 2, 2, 26, 25, 3, 2, 2, 2, 27, 5, 3, 2, 2, 2, 28, 33, 5, 8, 5, 2, 29, 30, 9, 2, 2, 2, 30, 32, 5, 8, 5, 2, 31, 29, 3, 2, 2, 2, 32, 35, 3, 2, 2, 2, 33, 31, 3, 2, 2, 2, 33, 34, 3, 2, 2, 2, 34, 7, 3, 2, 2, 2, 35, 33, 3, 2, 2, 2, 36, 41, 5, 10, 6, 2, 37, 38, 7, 6, 2, 2, 38, 40, 5, 10, 6, 2, 39, 37, 3, 2, 2, 2, 40, 43, 3, 2, 2, 2, 41, 39, 3, 2, 2, 2, 41, 42, 3, 2, 2, 2, 42, 9, 3, 2, 2, 2, 43, 41, 3, 2, 2, 2, 44, 51, 7, 10, 2, 2, 45, 51, 7, 9, 2, 2, 46, 47, 7, 7, 2, 2, 47, 48, 5, 6, 4, 2, 48, 49, 7, 8, 2, 2, 49, 51, 3, 2, 2, 2, 50, 44, 3, 2, 2, 2, 50, 45, 3, 2, 2, 2, 50, 46, 3, 2, 2, 2, 51, 11, 3, 2, 2, 2, 7, 15, 26, 33, 41, 50]

--[ 2023.02.26.13.33.56.038.2 ]--
InitFile: /gen/Expr.tokens
T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
ID=7
INT=8
NEWLINE=9
WS=10
'='=1
'+'=2
'-'=3
'*'=4
'('=5
')'=6

--[ 2023.02.26.13.33.56.039.0 ]--
InitFile: /gen/ExprLexer.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ExprLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, ID=7, INT=8, NEWLINE=9, 
		WS=10;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "ID", "INT", "NEWLINE", 
			"WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "'+'", "'-'", "'*'", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, "ID", "INT", "NEWLINE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ExprLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Expr.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\f9\b\1\4\2\t\2\4"+
		"\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t"+
		"\13\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\6\b%\n\b\r\b\16"+
		"\b&\3\t\6\t*\n\t\r\t\16\t+\3\n\5\n/\n\n\3\n\3\n\3\13\6\13\64\n\13\r\13"+
		"\16\13\65\3\13\3\13\2\2\f\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25"+
		"\f\3\2\5\4\2C\\c|\3\2\62;\4\2\13\13\"\"\2<\2\3\3\2\2\2\2\5\3\2\2\2\2\7"+
		"\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2"+
		"\2\2\23\3\2\2\2\2\25\3\2\2\2\3\27\3\2\2\2\5\31\3\2\2\2\7\33\3\2\2\2\t"+
		"\35\3\2\2\2\13\37\3\2\2\2\r!\3\2\2\2\17$\3\2\2\2\21)\3\2\2\2\23.\3\2\2"+
		"\2\25\63\3\2\2\2\27\30\7?\2\2\30\4\3\2\2\2\31\32\7-\2\2\32\6\3\2\2\2\33"+
		"\34\7/\2\2\34\b\3\2\2\2\35\36\7,\2\2\36\n\3\2\2\2\37 \7*\2\2 \f\3\2\2"+
		"\2!\"\7+\2\2\"\16\3\2\2\2#%\t\2\2\2$#\3\2\2\2%&\3\2\2\2&$\3\2\2\2&\'\3"+
		"\2\2\2\'\20\3\2\2\2(*\t\3\2\2)(\3\2\2\2*+\3\2\2\2+)\3\2\2\2+,\3\2\2\2"+
		",\22\3\2\2\2-/\7\17\2\2.-\3\2\2\2./\3\2\2\2/\60\3\2\2\2\60\61\7\f\2\2"+
		"\61\24\3\2\2\2\62\64\t\4\2\2\63\62\3\2\2\2\64\65\3\2\2\2\65\63\3\2\2\2"+
		"\65\66\3\2\2\2\66\67\3\2\2\2\678\b\13\2\28\26\3\2\2\2\7\2&+.\65\3\b\2"+
		"\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}

--[ 2023.02.26.13.33.56.039.1 ]--
InitFile: /gen/ExprParser.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.misc.*;
import org.antlr.v4.runtime.tree.*;
import java.util.List;
import java.util.Iterator;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ExprParser extends Parser {
	static { RuntimeMetaData.checkVersion("4.9.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, ID=7, INT=8, NEWLINE=9, 
		WS=10;
	public static final int
		RULE_prog = 0, RULE_stat = 1, RULE_expr = 2, RULE_multExpr = 3, RULE_atom = 4;
	private static String[] makeRuleNames() {
		return new String[] {
			"prog", "stat", "expr", "multExpr", "atom"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "'+'", "'-'", "'*'", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, "ID", "INT", "NEWLINE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	@Override
	public String getGrammarFileName() { return "Expr.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public ATN getATN() { return _ATN; }

	public ExprParser(TokenStream input) {
		super(input);
		_interp = new ParserATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	public static class ProgContext extends ParserRuleContext {
		public List<StatContext> stat() {
			return getRuleContexts(StatContext.class);
		}
		public StatContext stat(int i) {
			return getRuleContext(StatContext.class,i);
		}
		public ProgContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prog; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterProg(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitProg(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitProg(this);
			else return visitor.visitChildren(this);
		}
	}

	public final ProgContext prog() throws RecognitionException {
		ProgContext _localctx = new ProgContext(_ctx, getState());
		enterRule(_localctx, 0, RULE_prog);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(11); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(10);
				stat();
				}
				}
				setState(13); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__4) | (1L << ID) | (1L << INT) | (1L << NEWLINE))) != 0) );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class StatContext extends ParserRuleContext {
		public ExprContext expr() {
			return getRuleContext(ExprContext.class,0);
		}
		public TerminalNode NEWLINE() { return getToken(ExprParser.NEWLINE, 0); }
		public TerminalNode ID() { return getToken(ExprParser.ID, 0); }
		public StatContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_stat; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterStat(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitStat(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitStat(this);
			else return visitor.visitChildren(this);
		}
	}

	public final StatContext stat() throws RecognitionException {
		StatContext _localctx = new StatContext(_ctx, getState());
		enterRule(_localctx, 2, RULE_stat);
		try {
			setState(24);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(15);
				expr();
				setState(16);
				match(NEWLINE);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(18);
				match(ID);
				setState(19);
				match(T__0);
				setState(20);
				expr();
				setState(21);
				match(NEWLINE);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(23);
				match(NEWLINE);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ExprContext extends ParserRuleContext {
		public List<MultExprContext> multExpr() {
			return getRuleContexts(MultExprContext.class);
		}
		public MultExprContext multExpr(int i) {
			return getRuleContext(MultExprContext.class,i);
		}
		public ExprContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_expr; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterExpr(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitExpr(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitExpr(this);
			else return visitor.visitChildren(this);
		}
	}

	public final ExprContext expr() throws RecognitionException {
		ExprContext _localctx = new ExprContext(_ctx, getState());
		enterRule(_localctx, 4, RULE_expr);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(26);
			multExpr();
			setState(31);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==T__1 || _la==T__2) {
				{
				{
				setState(27);
				_la = _input.LA(1);
				if ( !(_la==T__1 || _la==T__2) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(28);
				multExpr();
				}
				}
				setState(33);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class MultExprContext extends ParserRuleContext {
		public List<AtomContext> atom() {
			return getRuleContexts(AtomContext.class);
		}
		public AtomContext atom(int i) {
			return getRuleContext(AtomContext.class,i);
		}
		public MultExprContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multExpr; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterMultExpr(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitMultExpr(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitMultExpr(this);
			else return visitor.visitChildren(this);
		}
	}

	public final MultExprContext multExpr() throws RecognitionException {
		MultExprContext _localctx = new MultExprContext(_ctx, getState());
		enterRule(_localctx, 6, RULE_multExpr);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(34);
			atom();
			setState(39);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==T__3) {
				{
				{
				setState(35);
				match(T__3);
				setState(36);
				atom();
				}
				}
				setState(41);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AtomContext extends ParserRuleContext {
		public TerminalNode INT() { return getToken(ExprParser.INT, 0); }
		public TerminalNode ID() { return getToken(ExprParser.ID, 0); }
		public ExprContext expr() {
			return getRuleContext(ExprContext.class,0);
		}
		public AtomContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_atom; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterAtom(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitAtom(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitAtom(this);
			else return visitor.visitChildren(this);
		}
	}

	public final AtomContext atom() throws RecognitionException {
		AtomContext _localctx = new AtomContext(_ctx, getState());
		enterRule(_localctx, 8, RULE_atom);
		try {
			setState(48);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case INT:
				enterOuterAlt(_localctx, 1);
				{
				setState(42);
				match(INT);
				}
				break;
			case ID:
				enterOuterAlt(_localctx, 2);
				{
				setState(43);
				match(ID);
				}
				break;
			case T__4:
				enterOuterAlt(_localctx, 3);
				{
				setState(44);
				match(T__4);
				setState(45);
				expr();
				setState(46);
				match(T__5);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\3\f\65\4\2\t\2\4\3"+
		"\t\3\4\4\t\4\4\5\t\5\4\6\t\6\3\2\6\2\16\n\2\r\2\16\2\17\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\5\3\33\n\3\3\4\3\4\3\4\7\4 \n\4\f\4\16\4#\13\4"+
		"\3\5\3\5\3\5\7\5(\n\5\f\5\16\5+\13\5\3\6\3\6\3\6\3\6\3\6\3\6\5\6\63\n"+
		"\6\3\6\2\2\7\2\4\6\b\n\2\3\3\2\4\5\2\66\2\r\3\2\2\2\4\32\3\2\2\2\6\34"+
		"\3\2\2\2\b$\3\2\2\2\n\62\3\2\2\2\f\16\5\4\3\2\r\f\3\2\2\2\16\17\3\2\2"+
		"\2\17\r\3\2\2\2\17\20\3\2\2\2\20\3\3\2\2\2\21\22\5\6\4\2\22\23\7\13\2"+
		"\2\23\33\3\2\2\2\24\25\7\t\2\2\25\26\7\3\2\2\26\27\5\6\4\2\27\30\7\13"+
		"\2\2\30\33\3\2\2\2\31\33\7\13\2\2\32\21\3\2\2\2\32\24\3\2\2\2\32\31\3"+
		"\2\2\2\33\5\3\2\2\2\34!\5\b\5\2\35\36\t\2\2\2\36 \5\b\5\2\37\35\3\2\2"+
		"\2 #\3\2\2\2!\37\3\2\2\2!\"\3\2\2\2\"\7\3\2\2\2#!\3\2\2\2$)\5\n\6\2%&"+
		"\7\6\2\2&(\5\n\6\2\'%\3\2\2\2(+\3\2\2\2)\'\3\2\2\2)*\3\2\2\2*\t\3\2\2"+
		"\2+)\3\2\2\2,\63\7\n\2\2-\63\7\t\2\2./\7\7\2\2/\60\5\6\4\2\60\61\7\b\2"+
		"\2\61\63\3\2\2\2\62,\3\2\2\2\62-\3\2\2\2\62.\3\2\2\2\63\13\3\2\2\2\7\17"+
		"\32!)\62";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}

--[ 2023.02.26.13.33.56.039.2 ]--
InitFile: /gen/ExprLexer.interp
token literal names:
null
'='
'+'
'-'
'*'
'('
')'
null
null
null
null

token symbolic names:
null
null
null
null
null
null
null
ID
INT
NEWLINE
WS

rule names:
T__0
T__1
T__2
T__3
T__4
T__5
ID
INT
NEWLINE
WS

channel names:
DEFAULT_TOKEN_CHANNEL
HIDDEN

mode names:
DEFAULT_MODE

atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 12, 57, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 6, 8, 37, 10, 8, 13, 8, 14, 8, 38, 3, 9, 6, 9, 42, 10, 9, 13, 9, 14, 9, 43, 3, 10, 5, 10, 47, 10, 10, 3, 10, 3, 10, 3, 11, 6, 11, 52, 10, 11, 13, 11, 14, 11, 53, 3, 11, 3, 11, 2, 2, 12, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 3, 2, 5, 4, 2, 67, 92, 99, 124, 3, 2, 50, 59, 4, 2, 11, 11, 34, 34, 2, 60, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 3, 23, 3, 2, 2, 2, 5, 25, 3, 2, 2, 2, 7, 27, 3, 2, 2, 2, 9, 29, 3, 2, 2, 2, 11, 31, 3, 2, 2, 2, 13, 33, 3, 2, 2, 2, 15, 36, 3, 2, 2, 2, 17, 41, 3, 2, 2, 2, 19, 46, 3, 2, 2, 2, 21, 51, 3, 2, 2, 2, 23, 24, 7, 63, 2, 2, 24, 4, 3, 2, 2, 2, 25, 26, 7, 45, 2, 2, 26, 6, 3, 2, 2, 2, 27, 28, 7, 47, 2, 2, 28, 8, 3, 2, 2, 2, 29, 30, 7, 44, 2, 2, 30, 10, 3, 2, 2, 2, 31, 32, 7, 42, 2, 2, 32, 12, 3, 2, 2, 2, 33, 34, 7, 43, 2, 2, 34, 14, 3, 2, 2, 2, 35, 37, 9, 2, 2, 2, 36, 35, 3, 2, 2, 2, 37, 38, 3, 2, 2, 2, 38, 36, 3, 2, 2, 2, 38, 39, 3, 2, 2, 2, 39, 16, 3, 2, 2, 2, 40, 42, 9, 3, 2, 2, 41, 40, 3, 2, 2, 2, 42, 43, 3, 2, 2, 2, 43, 41, 3, 2, 2, 2, 43, 44, 3, 2, 2, 2, 44, 18, 3, 2, 2, 2, 45, 47, 7, 15, 2, 2, 46, 45, 3, 2, 2, 2, 46, 47, 3, 2, 2, 2, 47, 48, 3, 2, 2, 2, 48, 49, 7, 12, 2, 2, 49, 20, 3, 2, 2, 2, 50, 52, 9, 4, 2, 2, 51, 50, 3, 2, 2, 2, 52, 53, 3, 2, 2, 2, 53, 51, 3, 2, 2, 2, 53, 54, 3, 2, 2, 2, 54, 55, 3, 2, 2, 2, 55, 56, 8, 11, 2, 2, 56, 22, 3, 2, 2, 2, 7, 2, 38, 43, 46, 53, 3, 8, 2, 2]

--[ 2023.02.26.13.33.56.039.3 ]--
InitFile: /gen/ExprLexer.tokens
T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
ID=7
INT=8
NEWLINE=9
WS=10
'='=1
'+'=2
'-'=3
'*'=4
'('=5
')'=6

--[ 2023.02.26.13.33.56.040.0 ]--
InitFile: /gen/ExprVisitor.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.tree.ParseTreeVisitor;

/**
 * This interface defines a complete generic visitor for a parse tree produced
 * by {@link ExprParser}.
 *
 * @param <T> The return type of the visit operation. Use {@link Void} for
 * operations with no return type.
 */
public interface ExprVisitor<T> extends ParseTreeVisitor<T> {
	/**
	 * Visit a parse tree produced by {@link ExprParser#prog}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitProg(ExprParser.ProgContext ctx);
	/**
	 * Visit a parse tree produced by {@link ExprParser#stat}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitStat(ExprParser.StatContext ctx);
	/**
	 * Visit a parse tree produced by {@link ExprParser#expr}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitExpr(ExprParser.ExprContext ctx);
	/**
	 * Visit a parse tree produced by {@link ExprParser#multExpr}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitMultExpr(ExprParser.MultExprContext ctx);
	/**
	 * Visit a parse tree produced by {@link ExprParser#atom}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitAtom(ExprParser.AtomContext ctx);
}

--[ 2023.02.26.13.33.56.040.1 ]--
InitFile: /gen/ExprListener.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.tree.ParseTreeListener;

/**
 * This interface defines a complete listener for a parse tree produced by
 * {@link ExprParser}.
 */
public interface ExprListener extends ParseTreeListener {
	/**
	 * Enter a parse tree produced by {@link ExprParser#prog}.
	 * @param ctx the parse tree
	 */
	void enterProg(ExprParser.ProgContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#prog}.
	 * @param ctx the parse tree
	 */
	void exitProg(ExprParser.ProgContext ctx);
	/**
	 * Enter a parse tree produced by {@link ExprParser#stat}.
	 * @param ctx the parse tree
	 */
	void enterStat(ExprParser.StatContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#stat}.
	 * @param ctx the parse tree
	 */
	void exitStat(ExprParser.StatContext ctx);
	/**
	 * Enter a parse tree produced by {@link ExprParser#expr}.
	 * @param ctx the parse tree
	 */
	void enterExpr(ExprParser.ExprContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#expr}.
	 * @param ctx the parse tree
	 */
	void exitExpr(ExprParser.ExprContext ctx);
	/**
	 * Enter a parse tree produced by {@link ExprParser#multExpr}.
	 * @param ctx the parse tree
	 */
	void enterMultExpr(ExprParser.MultExprContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#multExpr}.
	 * @param ctx the parse tree
	 */
	void exitMultExpr(ExprParser.MultExprContext ctx);
	/**
	 * Enter a parse tree produced by {@link ExprParser#atom}.
	 * @param ctx the parse tree
	 */
	void enterAtom(ExprParser.AtomContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#atom}.
	 * @param ctx the parse tree
	 */
	void exitAtom(ExprParser.AtomContext ctx);
}

--[ 2023.02.26.13.33.56.040.2 ]--
InitFile: /gen/ExprBaseVisitor.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.tree.AbstractParseTreeVisitor;

/**
 * This class provides an empty implementation of {@link ExprVisitor},
 * which can be extended to create a visitor which only needs to handle a subset
 * of the available methods.
 *
 * @param <T> The return type of the visit operation. Use {@link Void} for
 * operations with no return type.
 */
public class ExprBaseVisitor<T> extends AbstractParseTreeVisitor<T> implements ExprVisitor<T> {
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitProg(ExprParser.ProgContext ctx) { return visitChildren(ctx); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitStat(ExprParser.StatContext ctx) { return visitChildren(ctx); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitExpr(ExprParser.ExprContext ctx) { return visitChildren(ctx); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitMultExpr(ExprParser.MultExprContext ctx) { return visitChildren(ctx); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitAtom(ExprParser.AtomContext ctx) { return visitChildren(ctx); }
}

--[ 2023.02.26.13.33.56.040.3 ]--
InitFile: /gen/ExprBaseListener.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1

import org.antlr.v4.runtime.ParserRuleContext;
import org.antlr.v4.runtime.tree.ErrorNode;
import org.antlr.v4.runtime.tree.TerminalNode;

/**
 * This class provides an empty implementation of {@link ExprListener},
 * which can be extended to create a listener which only needs to handle a subset
 * of the available methods.
 */
public class ExprBaseListener implements ExprListener {
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterProg(ExprParser.ProgContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitProg(ExprParser.ProgContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterStat(ExprParser.StatContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitStat(ExprParser.StatContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterExpr(ExprParser.ExprContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitExpr(ExprParser.ExprContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterMultExpr(ExprParser.MultExprContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitMultExpr(ExprParser.MultExprContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterAtom(ExprParser.AtomContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitAtom(ExprParser.AtomContext ctx) { }

	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterEveryRule(ParserRuleContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitEveryRule(ParserRuleContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void visitTerminal(TerminalNode node) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void visitErrorNode(ErrorNode node) { }
}

--[ 2023.02.26.13.35.03.926.0 ]--
UpdateTree (AD): 1 0
+ /antlr-runtime-4.9.1.jar

--[ 2023.02.26.13.35.04.076.0 ]--
UpdateTree (AD): 1 0
+ /.idea/libraries/antlr_runtime_4_9_1.xml

--[ 2023.02.26.13.35.04.418.0 ]--
+ 11     <orderEntry type="library" name="antlr-runtime-4.9.1" level="project" />
--[ 2023.02.26.13.35.17.574.0 ]--
+ 8       <sourceFolder url="file://$MODULE_DIR$/inputs" type="java-resource" />
--[ 2023.02.26.13.35.23.972.0 ]--
UpdateTree (AD): 1 0
+ /src/Main.java

--[ 2023.02.26.13.35.23.972.1 ]--
InitFile: /src/Main.java


--[ 2023.02.26.13.35.24.084.0 ]--
:/src/Main.java
+ 1 package PACKAGE_NAME;
+ 3 public class Main {
+ 4 }
--[ 2023.02.26.13.35.24.097.0 ]--
r 1 
--[ 2023.02.26.13.35.24.117.0 ]--
- 1
- 1
--[ 2023.02.26.13.35.25.203.0 ]--
+ 1 
--[ 2023.02.26.13.35.25.924.0 ]--
r 1 i
--[ 2023.02.26.13.35.27.642.0 ]--
r 1 im
--[ 2023.02.26.13.35.27.690.0 ]--
r 1 import
--[ 2023.02.26.13.35.27.717.0 ]--
r 1 import org.
--[ 2023.02.26.13.35.28.085.0 ]--
r 1 import org.ant
--[ 2023.02.26.13.35.28.097.0 ]--
r 1 import org.antl
--[ 2023.02.26.13.35.28.234.0 ]--
r 1 import org.antlr
--[ 2023.02.26.13.35.28.596.0 ]--
r 1 import org.antlr.
--[ 2023.02.26.13.35.29.334.0 ]--
r 1 import org.antlr.v
--[ 2023.02.26.13.35.29.383.0 ]--
r 1 import org.antlr.v4
--[ 2023.02.26.13.35.29.577.0 ]--
r 1 import org.antlr.v4.
--[ 2023.02.26.13.35.30.902.0 ]--
r 1 import org.antlr.v4.runtime
--[ 2023.02.26.13.35.30.911.0 ]--
r 1 import org.antlr.v4.runtime.
--[ 2023.02.26.13.35.31.767.0 ]--
r 1 import org.antlr.v4.runtime.*
--[ 2023.02.26.13.35.32.099.0 ]--
r 1 import org.antlr.v4.runtime.*;
--[ 2023.02.26.13.35.33.014.0 ]--
+ 2 
--[ 2023.02.26.13.35.33.732.0 ]--
+ 4     
--[ 2023.02.26.13.35.34.734.0 ]--
r 4     p
--[ 2023.02.26.13.35.34.925.0 ]--
r 4     pu
--[ 2023.02.26.13.35.34.963.0 ]--
r 4     pub
--[ 2023.02.26.13.35.35.017.0 ]--
r 4     publ
--[ 2023.02.26.13.35.35.117.0 ]--
r 4     publi
--[ 2023.02.26.13.35.35.214.0 ]--
r 4     public
--[ 2023.02.26.13.35.35.329.0 ]--
r 4     public 
--[ 2023.02.26.13.35.35.528.0 ]--
r 4     public s
--[ 2023.02.26.13.35.35.585.0 ]--
r 4     public st
--[ 2023.02.26.13.35.35.675.0 ]--
r 4     public sta
--[ 2023.02.26.13.35.35.776.0 ]--
r 4     public stat
--[ 2023.02.26.13.35.35.888.0 ]--
r 4     public stati
--[ 2023.02.26.13.35.36.032.0 ]--
r 4     public static
--[ 2023.02.26.13.35.36.129.0 ]--
r 4     public static 
--[ 2023.02.26.13.35.36.289.0 ]--
r 4     public static v
--[ 2023.02.26.13.35.36.353.0 ]--
r 4     public static vo
--[ 2023.02.26.13.35.36.426.0 ]--
r 4     public static voi
--[ 2023.02.26.13.35.36.513.0 ]--
r 4     public static void
--[ 2023.02.26.13.35.36.570.0 ]--
r 4     public static void 
--[ 2023.02.26.13.35.37.387.0 ]--
r 4     public static void m
--[ 2023.02.26.13.35.37.441.0 ]--
r 4     public static void ma
--[ 2023.02.26.13.35.37.498.0 ]--
r 4     public static void mai
--[ 2023.02.26.13.35.37.631.0 ]--
r 4     public static void main
--[ 2023.02.26.13.35.38.127.0 ]--
r 4     public static void main()
--[ 2023.02.26.13.35.38.525.0 ]--
r 4     public static void main(S)
--[ 2023.02.26.13.35.38.738.0 ]--
r 4     public static void main(St)
--[ 2023.02.26.13.35.38.816.0 ]--
r 4     public static void main(Str)
--[ 2023.02.26.13.35.38.967.0 ]--
r 4     public static void main(Stri)
--[ 2023.02.26.13.35.39.083.0 ]--
r 4     public static void main(Strin)
--[ 2023.02.26.13.35.39.132.0 ]--
r 4     public static void main(String)
--[ 2023.02.26.13.35.39.353.0 ]--
r 4     public static void main(String[])
--[ 2023.02.26.13.35.39.663.0 ]--
r 4     public static void main(String[] )
--[ 2023.02.26.13.35.39.792.0 ]--
r 4     public static void main(String[] a)
--[ 2023.02.26.13.35.39.824.0 ]--
r 4     public static void main(String[] ar)
--[ 2023.02.26.13.35.39.900.0 ]--
r 4     public static void main(String[] arg)
--[ 2023.02.26.13.35.39.997.0 ]--
r 4     public static void main(String[] args)
--[ 2023.02.26.13.35.40.540.0 ]--
r 4     public static void main(String[] args) 
--[ 2023.02.26.13.35.40.682.0 ]--
r 4     public static void main(String[] args) t
--[ 2023.02.26.13.35.40.723.0 ]--
r 4     public static void main(String[] args) th
--[ 2023.02.26.13.35.40.803.0 ]--
r 4     public static void main(String[] args) thr
--[ 2023.02.26.13.35.40.885.0 ]--
r 4     public static void main(String[] args) thro
--[ 2023.02.26.13.35.41.068.0 ]--
r 4     public static void main(String[] args) throw
--[ 2023.02.26.13.35.41.199.0 ]--
r 4     public static void main(String[] args) throws
--[ 2023.02.26.13.35.41.326.0 ]--
r 4     public static void main(String[] args) throws 
--[ 2023.02.26.13.35.41.588.0 ]--
r 4     public static void main(String[] args) throws E
--[ 2023.02.26.13.35.41.792.0 ]--
r 4     public static void main(String[] args) throws Ex
--[ 2023.02.26.13.35.41.940.0 ]--
r 4     public static void main(String[] args) throws Exc
--[ 2023.02.26.13.35.42.056.0 ]--
r 4     public static void main(String[] args) throws Exce
--[ 2023.02.26.13.35.42.116.0 ]--
r 4     public static void main(String[] args) throws Excep
--[ 2023.02.26.13.35.42.258.0 ]--
r 4     public static void main(String[] args) throws Except
--[ 2023.02.26.13.35.42.338.0 ]--
r 4     public static void main(String[] args) throws Excepti
--[ 2023.02.26.13.35.42.418.0 ]--
r 4     public static void main(String[] args) throws Exceptio
--[ 2023.02.26.13.35.42.459.0 ]--
r 4     public static void main(String[] args) throws Exception
--[ 2023.02.26.13.35.42.680.0 ]--
r 4     public static void main(String[] args) throws Exception 
--[ 2023.02.26.13.35.42.866.0 ]--
r 4     public static void main(String[] args) throws Exception {}
--[ 2023.02.26.13.35.43.010.0 ]--
+ 4     public static void main(String[] args) throws Exception {
r 5     }
--[ 2023.02.26.13.35.43.020.0 ]--
+ 5         
--[ 2023.02.26.13.36.03.984.0 ]--
+ 5         CharStream input = CharStreams.fromFileName("inputs/test.txt");
+ 6         ExprLexer lexer = new ExprLexer(input);
+ 7         CommonTokenStream tokens = new CommonTokenStream(lexer);
+ 8         ExprParser parser = new ExprParser(tokens);
+ 9  
+ 10         parser.prog(); // parse the input stream!
--[ 2023.02.26.13.36.04.011.0 ]--
r 9 
--[ 2023.02.26.13.36.05.244.0 ]--
- 11
--[ 2023.02.26.13.36.12.124.0 ]--
UpdateTree (AD): 1 0
+ /inputs/test.txt

--[ 2023.02.26.13.37.05.682.0 ]--
UpdateTree (AD): 17 0
+ /out/production/Expr/test.txt
+ /out/production/Expr/Main.class
+ /out/production/Expr/Expr.interp
+ /out/production/Expr/Expr.tokens
+ /out/production/Expr/ExprLexer.class
+ /out/production/Expr/ExprLexer.interp
+ /out/production/Expr/ExprLexer.tokens
+ /out/production/Expr/ExprParser.class
+ /out/production/Expr/ExprVisitor.class
+ /out/production/Expr/ExprListener.class
+ /out/production/Expr/ExprBaseVisitor.class
+ /out/production/Expr/ExprBaseListener.class
+ /out/production/Expr/ExprParser$AtomContext.class
+ /out/production/Expr/ExprParser$ExprContext.class
+ /out/production/Expr/ExprParser$ProgContext.class
+ /out/production/Expr/ExprParser$StatContext.class
+ /out/production/Expr/ExprParser$MultExprContext.class

--[ 2023.02.26.13.37.05.682.1 ]--
InitFile: /out/production/Expr/Expr.interp
token literal names:
null
'='
'+'
'-'
'*'
'('
')'
null
null
null
null

token symbolic names:
null
null
null
null
null
null
null
ID
INT
NEWLINE
WS

rule names:
prog
stat
expr
multExpr
atom


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 12, 53, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 3, 2, 6, 2, 14, 10, 2, 13, 2, 14, 2, 15, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 27, 10, 3, 3, 4, 3, 4, 3, 4, 7, 4, 32, 10, 4, 12, 4, 14, 4, 35, 11, 4, 3, 5, 3, 5, 3, 5, 7, 5, 40, 10, 5, 12, 5, 14, 5, 43, 11, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 5, 6, 51, 10, 6, 3, 6, 2, 2, 7, 2, 4, 6, 8, 10, 2, 3, 3, 2, 4, 5, 2, 54, 2, 13, 3, 2, 2, 2, 4, 26, 3, 2, 2, 2, 6, 28, 3, 2, 2, 2, 8, 36, 3, 2, 2, 2, 10, 50, 3, 2, 2, 2, 12, 14, 5, 4, 3, 2, 13, 12, 3, 2, 2, 2, 14, 15, 3, 2, 2, 2, 15, 13, 3, 2, 2, 2, 15, 16, 3, 2, 2, 2, 16, 3, 3, 2, 2, 2, 17, 18, 5, 6, 4, 2, 18, 19, 7, 11, 2, 2, 19, 27, 3, 2, 2, 2, 20, 21, 7, 9, 2, 2, 21, 22, 7, 3, 2, 2, 22, 23, 5, 6, 4, 2, 23, 24, 7, 11, 2, 2, 24, 27, 3, 2, 2, 2, 25, 27, 7, 11, 2, 2, 26, 17, 3, 2, 2, 2, 26, 20, 3, 2, 2, 2, 26, 25, 3, 2, 2, 2, 27, 5, 3, 2, 2, 2, 28, 33, 5, 8, 5, 2, 29, 30, 9, 2, 2, 2, 30, 32, 5, 8, 5, 2, 31, 29, 3, 2, 2, 2, 32, 35, 3, 2, 2, 2, 33, 31, 3, 2, 2, 2, 33, 34, 3, 2, 2, 2, 34, 7, 3, 2, 2, 2, 35, 33, 3, 2, 2, 2, 36, 41, 5, 10, 6, 2, 37, 38, 7, 6, 2, 2, 38, 40, 5, 10, 6, 2, 39, 37, 3, 2, 2, 2, 40, 43, 3, 2, 2, 2, 41, 39, 3, 2, 2, 2, 41, 42, 3, 2, 2, 2, 42, 9, 3, 2, 2, 2, 43, 41, 3, 2, 2, 2, 44, 51, 7, 10, 2, 2, 45, 51, 7, 9, 2, 2, 46, 47, 7, 7, 2, 2, 47, 48, 5, 6, 4, 2, 48, 49, 7, 8, 2, 2, 49, 51, 3, 2, 2, 2, 50, 44, 3, 2, 2, 2, 50, 45, 3, 2, 2, 2, 50, 46, 3, 2, 2, 2, 51, 11, 3, 2, 2, 2, 7, 15, 26, 33, 41, 50]

--[ 2023.02.26.13.37.05.682.2 ]--
InitFile: /out/production/Expr/Expr.tokens
T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
ID=7
INT=8
NEWLINE=9
WS=10
'='=1
'+'=2
'-'=3
'*'=4
'('=5
')'=6

--[ 2023.02.26.13.37.05.682.3 ]--
InitFile: /out/production/Expr/ExprLexer.interp
token literal names:
null
'='
'+'
'-'
'*'
'('
')'
null
null
null
null

token symbolic names:
null
null
null
null
null
null
null
ID
INT
NEWLINE
WS

rule names:
T__0
T__1
T__2
T__3
T__4
T__5
ID
INT
NEWLINE
WS

channel names:
DEFAULT_TOKEN_CHANNEL
HIDDEN

mode names:
DEFAULT_MODE

atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 12, 57, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 6, 8, 37, 10, 8, 13, 8, 14, 8, 38, 3, 9, 6, 9, 42, 10, 9, 13, 9, 14, 9, 43, 3, 10, 5, 10, 47, 10, 10, 3, 10, 3, 10, 3, 11, 6, 11, 52, 10, 11, 13, 11, 14, 11, 53, 3, 11, 3, 11, 2, 2, 12, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 3, 2, 5, 4, 2, 67, 92, 99, 124, 3, 2, 50, 59, 4, 2, 11, 11, 34, 34, 2, 60, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 3, 23, 3, 2, 2, 2, 5, 25, 3, 2, 2, 2, 7, 27, 3, 2, 2, 2, 9, 29, 3, 2, 2, 2, 11, 31, 3, 2, 2, 2, 13, 33, 3, 2, 2, 2, 15, 36, 3, 2, 2, 2, 17, 41, 3, 2, 2, 2, 19, 46, 3, 2, 2, 2, 21, 51, 3, 2, 2, 2, 23, 24, 7, 63, 2, 2, 24, 4, 3, 2, 2, 2, 25, 26, 7, 45, 2, 2, 26, 6, 3, 2, 2, 2, 27, 28, 7, 47, 2, 2, 28, 8, 3, 2, 2, 2, 29, 30, 7, 44, 2, 2, 30, 10, 3, 2, 2, 2, 31, 32, 7, 42, 2, 2, 32, 12, 3, 2, 2, 2, 33, 34, 7, 43, 2, 2, 34, 14, 3, 2, 2, 2, 35, 37, 9, 2, 2, 2, 36, 35, 3, 2, 2, 2, 37, 38, 3, 2, 2, 2, 38, 36, 3, 2, 2, 2, 38, 39, 3, 2, 2, 2, 39, 16, 3, 2, 2, 2, 40, 42, 9, 3, 2, 2, 41, 40, 3, 2, 2, 2, 42, 43, 3, 2, 2, 2, 43, 41, 3, 2, 2, 2, 43, 44, 3, 2, 2, 2, 44, 18, 3, 2, 2, 2, 45, 47, 7, 15, 2, 2, 46, 45, 3, 2, 2, 2, 46, 47, 3, 2, 2, 2, 47, 48, 3, 2, 2, 2, 48, 49, 7, 12, 2, 2, 49, 20, 3, 2, 2, 2, 50, 52, 9, 4, 2, 2, 51, 50, 3, 2, 2, 2, 52, 53, 3, 2, 2, 2, 53, 51, 3, 2, 2, 2, 53, 54, 3, 2, 2, 2, 54, 55, 3, 2, 2, 2, 55, 56, 8, 11, 2, 2, 56, 22, 3, 2, 2, 2, 7, 2, 38, 43, 46, 53, 3, 8, 2, 2]

--[ 2023.02.26.13.37.05.682.4 ]--
InitFile: /out/production/Expr/ExprLexer.tokens
T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
ID=7
INT=8
NEWLINE=9
WS=10
'='=1
'+'=2
'-'=3
'*'=4
'('=5
')'=6

--[ 2023.02.26.13.37.05.737.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.37.28.960.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.38.02.131.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.38.08.632.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.38.40.895.0 ]--
r 10         parser.prog();
--[ 2023.02.26.13.38.41.484.0 ]--
- 9
--[ 2023.02.26.13.38.54.642.0 ]--
UpdateTree (AD): 1 0
+ /src/LineByLine.java

--[ 2023.02.26.13.38.54.642.1 ]--
InitFile: /src/LineByLine.java


--[ 2023.02.26.13.38.54.687.0 ]--
:/src/LineByLine.java
+ 1 package PACKAGE_NAME;
+ 3 public class LineByLine {
+ 4 }
--[ 2023.02.26.13.38.54.689.0 ]--
r 1 
--[ 2023.02.26.13.38.54.692.0 ]--
- 1
- 1
--[ 2023.02.26.13.38.56.378.0 ]--
+ 1 import org.antlr.v4.runtime.*;
+ 2 
+ 3 public class Main {
+ 4     public static void main(String[] args) throws Exception {
+ 5         CharStream input = CharStreams.fromFileName("inputs/test.txt");
+ 6         ExprLexer lexer = new ExprLexer(input);
+ 7         CommonTokenStream tokens = new CommonTokenStream(lexer);
+ 8         ExprParser parser = new ExprParser(tokens);
+ 9         parser.prog();
r 10     }
--[ 2023.02.26.13.38.58.887.0 ]--
r 3 public class L {
--[ 2023.02.26.13.38.58.996.0 ]--
r 3 public class Li {
--[ 2023.02.26.13.38.59.105.0 ]--
r 3 public class Lin {
--[ 2023.02.26.13.38.59.172.0 ]--
r 3 public class Line {
--[ 2023.02.26.13.38.59.434.0 ]--
r 3 public class LineB {
--[ 2023.02.26.13.38.59.552.0 ]--
r 3 public class LineBy {
--[ 2023.02.26.13.38.59.786.0 ]--
r 3 public class LineByL {
--[ 2023.02.26.13.38.59.910.0 ]--
r 3 public class LineByLi {
--[ 2023.02.26.13.38.59.999.0 ]--
r 3 public class LineByLin {
--[ 2023.02.26.13.39.00.058.0 ]--
r 3 public class LineByLine {
--[ 2023.02.26.13.39.20.856.0 ]--
+ 5         
--[ 2023.02.26.13.39.22.669.0 ]--
r 5         F
--[ 2023.02.26.13.39.22.869.0 ]--
r 5         Fi
--[ 2023.02.26.13.39.22.995.0 ]--
r 5         Fil
--[ 2023.02.26.13.39.23.113.0 ]--
r 5         File
--[ 2023.02.26.13.39.23.639.0 ]--
r 5         File 
--[ 2023.02.26.13.39.23.774.0 ]--
r 5         File f
--[ 2023.02.26.13.39.23.854.0 ]--
r 5         File fi
--[ 2023.02.26.13.39.23.955.0 ]--
r 5         File fil
--[ 2023.02.26.13.39.24.056.0 ]--
r 5         File file
--[ 2023.02.26.13.39.24.136.0 ]--
r 5         File file 
--[ 2023.02.26.13.39.24.359.0 ]--
r 5         File file =
--[ 2023.02.26.13.39.24.491.0 ]--
r 5         File file = 
--[ 2023.02.26.13.39.25.010.0 ]--
r 5         File file = F
--[ 2023.02.26.13.39.27.317.0 ]--
r 5         File file = Fi
--[ 2023.02.26.13.39.27.405.0 ]--
r 5         File file = Fil
--[ 2023.02.26.13.39.27.464.0 ]--
r 5         File file = File
--[ 2023.02.26.13.39.30.596.0 ]--
r 5         File file = File()
--[ 2023.02.26.13.39.55.542.0 ]--
+ 2 
--[ 2023.02.26.13.39.55.784.0 ]--
r 2 i
--[ 2023.02.26.13.39.55.932.0 ]--
r 2 im
--[ 2023.02.26.13.39.55.981.0 ]--
r 2 imp
--[ 2023.02.26.13.39.56.110.0 ]--
r 2 impo
--[ 2023.02.26.13.39.56.212.0 ]--
r 2 impor
--[ 2023.02.26.13.39.56.233.0 ]--
r 2 import
--[ 2023.02.26.13.39.56.312.0 ]--
r 2 import 
--[ 2023.02.26.13.39.56.838.0 ]--
r 2 import j
--[ 2023.02.26.13.39.56.917.0 ]--
r 2 import ja
--[ 2023.02.26.13.39.57.091.0 ]--
r 2 import jav
--[ 2023.02.26.13.39.57.124.0 ]--
r 2 import java
--[ 2023.02.26.13.39.57.266.0 ]--
r 2 import java.
--[ 2023.02.26.13.39.57.523.0 ]--
r 2 import java.i
--[ 2023.02.26.13.39.57.836.0 ]--
r 2 import java.io
--[ 2023.02.26.13.39.58.029.0 ]--
r 2 import java.io.
--[ 2023.02.26.13.39.58.403.0 ]--
r 2 import java.io.B
--[ 2023.02.26.13.39.58.513.0 ]--
r 2 import java.io.Bu
--[ 2023.02.26.13.39.58.615.0 ]--
r 2 import java.io.Buf
--[ 2023.02.26.13.39.58.752.0 ]--
r 2 import java.io.Buff
--[ 2023.02.26.13.40.00.619.0 ]--
r 2 import java.io.BufferedReader
--[ 2023.02.26.13.40.01.362.0 ]--
r 2 import java.io.BufferedReader;
--[ 2023.02.26.13.40.01.569.0 ]--
+ 3 
--[ 2023.02.26.13.40.01.829.0 ]--
r 3 i
--[ 2023.02.26.13.40.01.959.0 ]--
r 3 im
--[ 2023.02.26.13.40.02.022.0 ]--
r 3 imp
--[ 2023.02.26.13.40.02.084.0 ]--
r 3 impo
--[ 2023.02.26.13.40.02.158.0 ]--
r 3 impor
--[ 2023.02.26.13.40.02.216.0 ]--
r 3 import
--[ 2023.02.26.13.40.02.275.0 ]--
r 3 import 
--[ 2023.02.26.13.40.02.923.0 ]--
r 3 import j
--[ 2023.02.26.13.40.03.013.0 ]--
r 3 import ja
--[ 2023.02.26.13.40.03.142.0 ]--
r 3 import jav
--[ 2023.02.26.13.40.03.203.0 ]--
r 3 import java
--[ 2023.02.26.13.40.03.430.0 ]--
r 3 import java.
--[ 2023.02.26.13.40.03.690.0 ]--
r 3 import java.i
--[ 2023.02.26.13.40.03.839.0 ]--
r 3 import java.io
--[ 2023.02.26.13.40.04.040.0 ]--
r 3 import java.io.
--[ 2023.02.26.13.40.04.952.0 ]--
r 3 import java.io.I
--[ 2023.02.26.13.40.05.270.0 ]--
r 3 import java.io.
--[ 2023.02.26.13.40.05.473.0 ]--
r 3 import java.io.F
--[ 2023.02.26.13.40.05.663.0 ]--
r 3 import java.io.Fi
--[ 2023.02.26.13.40.05.725.0 ]--
r 3 import java.io.Fil
--[ 2023.02.26.13.40.05.862.0 ]--
r 3 import java.io.File
--[ 2023.02.26.13.40.06.175.0 ]--
r 3 import java.io.FileR
--[ 2023.02.26.13.40.06.265.0 ]--
r 3 import java.io.FileRe
--[ 2023.02.26.13.40.06.426.0 ]--
r 3 import java.io.FileRea
--[ 2023.02.26.13.40.06.716.0 ]--
r 3 import java.io.FileReader
--[ 2023.02.26.13.40.07.092.0 ]--
r 3 import java.io.FileReader;
--[ 2023.02.26.13.40.07.359.0 ]--
+ 4 
--[ 2023.02.26.13.40.08.293.0 ]--
r 4 i
--[ 2023.02.26.13.40.08.436.0 ]--
r 4 im
--[ 2023.02.26.13.40.08.472.0 ]--
r 4 imp
--[ 2023.02.26.13.40.08.595.0 ]--
r 4 impo
--[ 2023.02.26.13.40.08.631.0 ]--
r 4 impor
--[ 2023.02.26.13.40.08.646.0 ]--
r 4 import
--[ 2023.02.26.13.40.08.743.0 ]--
r 4 import 
--[ 2023.02.26.13.40.08.939.0 ]--
r 4 import j
--[ 2023.02.26.13.40.09.004.0 ]--
r 4 import ja
--[ 2023.02.26.13.40.09.161.0 ]--
r 4 import jav
--[ 2023.02.26.13.40.09.221.0 ]--
r 4 import java
--[ 2023.02.26.13.40.09.421.0 ]--
r 4 import java.
--[ 2023.02.26.13.40.09.655.0 ]--
r 4 import java.i
--[ 2023.02.26.13.40.09.758.0 ]--
r 4 import java.io
--[ 2023.02.26.13.40.10.111.0 ]--
r 4 import java.io.
--[ 2023.02.26.13.40.10.672.0 ]--
r 4 import java.io.I
--[ 2023.02.26.13.40.10.804.0 ]--
r 4 import java.io.IO
--[ 2023.02.26.13.40.11.355.0 ]--
r 4 import java.io.IOE
--[ 2023.02.26.13.40.15.149.0 ]--
- 4
--[ 2023.02.26.13.40.19.039.0 ]--
r 7         B
--[ 2023.02.26.13.40.19.141.0 ]--
r 7         Bu
--[ 2023.02.26.13.40.19.264.0 ]--
r 7         Buf
--[ 2023.02.26.13.40.19.393.0 ]--
r 7         Buff
--[ 2023.02.26.13.40.19.489.0 ]--
r 7         Buffe
--[ 2023.02.26.13.40.19.545.0 ]--
r 7         Buffer
--[ 2023.02.26.13.40.19.721.0 ]--
r 7         Buffere
--[ 2023.02.26.13.40.19.800.0 ]--
r 7         Buffered
--[ 2023.02.26.13.40.20.204.0 ]--
r 7         BufferedR
--[ 2023.02.26.13.40.20.328.0 ]--
r 7         BufferedRe
--[ 2023.02.26.13.40.20.413.0 ]--
r 7         BufferedRea
--[ 2023.02.26.13.40.20.550.0 ]--
r 7         BufferedRead
--[ 2023.02.26.13.40.20.666.0 ]--
r 7         BufferedReade
--[ 2023.02.26.13.40.20.831.0 ]--
r 7         BufferedReader
--[ 2023.02.26.13.40.20.999.0 ]--
r 7         BufferedReader 
--[ 2023.02.26.13.40.21.321.0 ]--
r 7         BufferedReader r
--[ 2023.02.26.13.40.21.387.0 ]--
r 7         BufferedReader re
--[ 2023.02.26.13.40.21.439.0 ]--
r 7         BufferedReader rea
--[ 2023.02.26.13.40.21.581.0 ]--
r 7         BufferedReader read
--[ 2023.02.26.13.40.21.650.0 ]--
r 7         BufferedReader reade
--[ 2023.02.26.13.40.21.799.0 ]--
r 7         BufferedReader reader
--[ 2023.02.26.13.40.21.846.0 ]--
r 7         BufferedReader reader 
--[ 2023.02.26.13.40.21.980.0 ]--
r 7         BufferedReader reader =
--[ 2023.02.26.13.40.22.080.0 ]--
r 7         BufferedReader reader = 
--[ 2023.02.26.13.40.22.708.0 ]--
r 7         BufferedReader reader = n
--[ 2023.02.26.13.40.22.836.0 ]--
r 7         BufferedReader reader = ne
--[ 2023.02.26.13.40.22.954.0 ]--
r 7         BufferedReader reader = new
--[ 2023.02.26.13.40.22.998.0 ]--
r 7         BufferedReader reader = new 
--[ 2023.02.26.13.40.23.189.0 ]--
r 7         BufferedReader reader = new B
--[ 2023.02.26.13.40.23.316.0 ]--
r 7         BufferedReader reader = new Bu
--[ 2023.02.26.13.40.23.438.0 ]--
r 7         BufferedReader reader = new Buf
--[ 2023.02.26.13.40.24.169.0 ]--
r 7         BufferedReader reader = new BufferedReader
--[ 2023.02.26.13.40.24.184.0 ]--
r 7         BufferedReader reader = new BufferedReader()
--[ 2023.02.26.13.40.25.780.0 ]--
r 7         BufferedReader reader = new BufferedReader(n)
--[ 2023.02.26.13.40.25.877.0 ]--
r 7         BufferedReader reader = new BufferedReader(ne)
--[ 2023.02.26.13.40.25.992.0 ]--
r 7         BufferedReader reader = new BufferedReader(new)
--[ 2023.02.26.13.40.26.245.0 ]--
r 7         BufferedReader reader = new BufferedReader(new )
--[ 2023.02.26.13.40.26.476.0 ]--
r 7         BufferedReader reader = new BufferedReader(new F)
--[ 2023.02.26.13.40.26.555.0 ]--
r 7         BufferedReader reader = new BufferedReader(new Fi)
--[ 2023.02.26.13.40.26.615.0 ]--
r 7         BufferedReader reader = new BufferedReader(new Fil)
--[ 2023.02.26.13.40.26.701.0 ]--
r 7         BufferedReader reader = new BufferedReader(new File)
--[ 2023.02.26.13.40.26.954.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileR)
--[ 2023.02.26.13.40.27.982.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader)
--[ 2023.02.26.13.40.28.003.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader())
--[ 2023.02.26.13.40.29.073.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader(''))
--[ 2023.02.26.13.40.29.474.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader('i'))
--[ 2023.02.26.13.40.29.613.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader('in'))
--[ 2023.02.26.13.40.29.693.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader('inp'))
--[ 2023.02.26.13.40.29.859.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader('inpu'))
--[ 2023.02.26.13.40.29.974.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader('input'))
--[ 2023.02.26.13.40.30.540.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader('inpu'))
--[ 2023.02.26.13.40.30.704.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader('inp'))
--[ 2023.02.26.13.40.30.725.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader('in'))
--[ 2023.02.26.13.40.30.744.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader('i'))
--[ 2023.02.26.13.40.30.764.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader(''))
--[ 2023.02.26.13.40.30.885.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader())
--[ 2023.02.26.13.40.31.215.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader(""))
--[ 2023.02.26.13.40.31.503.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("i"))
--[ 2023.02.26.13.40.31.695.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("in"))
--[ 2023.02.26.13.40.31.813.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inp"))
--[ 2023.02.26.13.40.31.993.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inpu"))
--[ 2023.02.26.13.40.32.159.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs"))
--[ 2023.02.26.13.40.32.379.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/"))
--[ 2023.02.26.13.40.32.739.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/t"))
--[ 2023.02.26.13.40.32.861.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/te"))
--[ 2023.02.26.13.40.32.941.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/tes"))
--[ 2023.02.26.13.40.32.981.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/test"))
--[ 2023.02.26.13.40.33.081.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/test."))
--[ 2023.02.26.13.40.33.223.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/test.t"))
--[ 2023.02.26.13.40.33.374.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/test.tx"))
--[ 2023.02.26.13.40.33.466.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/test.txt"))
--[ 2023.02.26.13.40.34.667.0 ]--
r 7         BufferedReader reader = new BufferedReader(new FileReader("inputs/test.txt"));
--[ 2023.02.26.13.40.36.750.0 ]--
+ 8         
--[ 2023.02.26.13.40.37.255.0 ]--
r 8         S
--[ 2023.02.26.13.40.37.418.0 ]--
r 8         St
--[ 2023.02.26.13.40.37.805.0 ]--
r 8         S
--[ 2023.02.26.13.40.37.922.0 ]--
r 8         
--[ 2023.02.26.13.40.41.717.0 ]--
r 8         S
--[ 2023.02.26.13.40.41.871.0 ]--
r 8         St
--[ 2023.02.26.13.40.41.971.0 ]--
r 8         Str
--[ 2023.02.26.13.40.42.153.0 ]--
r 8         Stri
--[ 2023.02.26.13.40.42.325.0 ]--
r 8         Strin
--[ 2023.02.26.13.40.42.361.0 ]--
r 8         String
--[ 2023.02.26.13.40.42.477.0 ]--
r 8         String 
--[ 2023.02.26.13.40.42.980.0 ]--
r 8         String l
--[ 2023.02.26.13.40.43.088.0 ]--
r 8         String li
--[ 2023.02.26.13.40.43.157.0 ]--
r 8         String lin
--[ 2023.02.26.13.40.43.306.0 ]--
r 8         String line
--[ 2023.02.26.13.40.43.355.0 ]--
r 8         String line 
--[ 2023.02.26.13.40.43.582.0 ]--
r 8         String line =
--[ 2023.02.26.13.40.43.659.0 ]--
r 8         String line = 
--[ 2023.02.26.13.40.43.815.0 ]--
r 8         String line = r
--[ 2023.02.26.13.40.43.862.0 ]--
r 8         String line = re
--[ 2023.02.26.13.40.43.944.0 ]--
r 8         String line = rea
--[ 2023.02.26.13.40.44.063.0 ]--
r 8         String line = read
--[ 2023.02.26.13.40.44.419.0 ]--
r 8         String line = reade
--[ 2023.02.26.13.40.44.548.0 ]--
r 8         String line = reader
--[ 2023.02.26.13.40.44.810.0 ]--
r 8         String line = reader.
--[ 2023.02.26.13.40.45.034.0 ]--
r 8         String line = reader.r
--[ 2023.02.26.13.40.45.096.0 ]--
r 8         String line = reader.re
--[ 2023.02.26.13.40.45.206.0 ]--
r 8         String line = reader.rea
--[ 2023.02.26.13.40.45.381.0 ]--
r 8         String line = reader.read
--[ 2023.02.26.13.40.45.768.0 ]--
r 8         String line = reader.readl
--[ 2023.02.26.13.40.45.850.0 ]--
r 8         String line = reader.readli
--[ 2023.02.26.13.40.45.979.0 ]--
r 8         String line = reader.readlin
--[ 2023.02.26.13.40.46.039.0 ]--
r 8         String line = reader.readline
--[ 2023.02.26.13.40.46.417.0 ]--
r 8         String line = reader.readline()
--[ 2023.02.26.13.40.47.065.0 ]--
r 8         String line = reader.readline();
--[ 2023.02.26.13.40.47.227.0 ]--
+ 9         
--[ 2023.02.26.13.40.47.562.0 ]--
r 9         w
--[ 2023.02.26.13.40.47.644.0 ]--
r 9         wh
--[ 2023.02.26.13.40.47.730.0 ]--
r 9         whi
--[ 2023.02.26.13.40.47.849.0 ]--
r 9         whil
--[ 2023.02.26.13.40.47.933.0 ]--
r 9         while
--[ 2023.02.26.13.40.48.333.0 ]--
r 9         while()
--[ 2023.02.26.13.40.48.567.0 ]--
r 9         while(l)
--[ 2023.02.26.13.40.48.638.0 ]--
r 9         while(li)
--[ 2023.02.26.13.40.48.779.0 ]--
r 9         while(lin)
--[ 2023.02.26.13.40.48.823.0 ]--
r 9         while(line)
--[ 2023.02.26.13.40.48.918.0 ]--
r 9         while(line )
--[ 2023.02.26.13.40.49.154.0 ]--
r 9         while(line !)
--[ 2023.02.26.13.40.49.293.0 ]--
r 9         while(line !=)
--[ 2023.02.26.13.40.49.435.0 ]--
r 9         while(line != )
--[ 2023.02.26.13.40.49.606.0 ]--
r 9         while(line != n)
--[ 2023.02.26.13.40.49.688.0 ]--
r 9         while(line != nu)
--[ 2023.02.26.13.40.49.787.0 ]--
r 9         while(line != nul)
--[ 2023.02.26.13.40.50.673.0 ]--
r 9         while(line != null)
--[ 2023.02.26.13.40.51.133.0 ]--
r 9         while(line != null) 
--[ 2023.02.26.13.40.51.316.0 ]--
r 9         while(line != null) {
--[ 2023.02.26.13.40.51.571.0 ]--
+ 10 
+ 11 }
--[ 2023.02.26.13.40.51.587.0 ]--
r 11         }
--[ 2023.02.26.13.40.51.601.0 ]--
r 10             
--[ 2023.02.26.13.40.56.144.0 ]--
r 10             C
--[ 2023.02.26.13.40.56.316.0 ]--
r 10             Ch
--[ 2023.02.26.13.40.56.456.0 ]--
r 10             Cha
--[ 2023.02.26.13.40.56.538.0 ]--
r 10             Char
--[ 2023.02.26.13.40.56.866.0 ]--
r 10             CharS
--[ 2023.02.26.13.40.57.032.0 ]--
r 10             CharSt
--[ 2023.02.26.13.40.57.419.0 ]--
r 10             CharStreams
--[ 2023.02.26.13.40.58.220.0 ]--
r 10             CharStream
--[ 2023.02.26.13.40.58.420.0 ]--
r 10             CharStream 
--[ 2023.02.26.13.40.58.669.0 ]--
r 10             CharStream i
--[ 2023.02.26.13.40.58.770.0 ]--
r 10             CharStream in
--[ 2023.02.26.13.40.58.851.0 ]--
r 10             CharStream inp
--[ 2023.02.26.13.40.58.981.0 ]--
r 10             CharStream inpu
--[ 2023.02.26.13.40.59.012.0 ]--
r 10             CharStream input
--[ 2023.02.26.13.40.59.093.0 ]--
r 10             CharStream input 
--[ 2023.02.26.13.40.59.201.0 ]--
r 10             CharStream input =
--[ 2023.02.26.13.40.59.316.0 ]--
r 10             CharStream input = 
--[ 2023.02.26.13.40.59.610.0 ]--
r 10             CharStream input = C
--[ 2023.02.26.13.40.59.810.0 ]--
r 10             CharStream input = Ch
--[ 2023.02.26.13.40.59.926.0 ]--
r 10             CharStream input = Cha
--[ 2023.02.26.13.41.00.022.0 ]--
r 10             CharStream input = Char
--[ 2023.02.26.13.41.00.622.0 ]--
r 10             CharStream input = CharStreams
--[ 2023.02.26.13.41.00.905.0 ]--
r 10             CharStream input = CharStreams.
--[ 2023.02.26.13.41.01.360.0 ]--
r 10             CharStream input = CharStreams.f
--[ 2023.02.26.13.41.01.407.0 ]--
r 10             CharStream input = CharStreams.fr
--[ 2023.02.26.13.41.01.463.0 ]--
r 10             CharStream input = CharStreams.fro
--[ 2023.02.26.13.41.01.603.0 ]--
r 10             CharStream input = CharStreams.from
--[ 2023.02.26.13.41.02.014.0 ]--
r 10             CharStream input = CharStreams.fromS
--[ 2023.02.26.13.41.02.159.0 ]--
r 10             CharStream input = CharStreams.fromSt
--[ 2023.02.26.13.41.02.286.0 ]--
r 10             CharStream input = CharStreams.fromStr
--[ 2023.02.26.13.41.03.480.0 ]--
r 10             CharStream input = CharStreams.fromString
--[ 2023.02.26.13.41.03.491.0 ]--
r 10             CharStream input = CharStreams.fromString()
--[ 2023.02.26.13.41.04.205.0 ]--
r 10             CharStream input = CharStreams.fromString(l)
--[ 2023.02.26.13.41.04.265.0 ]--
r 10             CharStream input = CharStreams.fromString(li)
--[ 2023.02.26.13.41.04.362.0 ]--
r 10             CharStream input = CharStreams.fromString(lin)
--[ 2023.02.26.13.41.04.433.0 ]--
r 10             CharStream input = CharStreams.fromString(line)
--[ 2023.02.26.13.41.05.834.0 ]--
r 10             CharStream input = CharStreams.fromString(line);
--[ 2023.02.26.13.41.08.558.0 ]--
- 13
- 13
- 13
- 13
--[ 2023.02.26.13.41.09.778.0 ]--
+ 11         ExprLexer lexer = new ExprLexer(input);
+ 12         CommonTokenStream tokens = new CommonTokenStream(lexer);
+ 13         ExprParser parser = new ExprParser(tokens);
+ 14         parser.prog();
--[ 2023.02.26.13.41.09.812.0 ]--
r 11             ExprLexer lexer = new ExprLexer(input);
r 12             CommonTokenStream tokens = new CommonTokenStream(lexer);
r 13             ExprParser parser = new ExprParser(tokens);
r 14             parser.prog();
--[ 2023.02.26.13.41.15.333.0 ]--
+ 10             
--[ 2023.02.26.13.41.15.755.0 ]--
r 10             S
--[ 2023.02.26.13.41.15.910.0 ]--
r 10             Sy
--[ 2023.02.26.13.41.15.979.0 ]--
r 10             Sys
--[ 2023.02.26.13.41.16.076.0 ]--
r 10             Syst
--[ 2023.02.26.13.41.16.213.0 ]--
r 10             Syste
--[ 2023.02.26.13.41.16.347.0 ]--
r 10             System
--[ 2023.02.26.13.41.16.421.0 ]--
r 10             System.
--[ 2023.02.26.13.41.18.445.0 ]--
r 10             System.o
--[ 2023.02.26.13.41.18.520.0 ]--
r 10             System.ou
--[ 2023.02.26.13.41.18.585.0 ]--
r 10             System.out
--[ 2023.02.26.13.41.18.877.0 ]--
r 10             System.out.
--[ 2023.02.26.13.41.19.021.0 ]--
r 10             System.out.p
--[ 2023.02.26.13.41.19.122.0 ]--
r 10             System.out.pr
--[ 2023.02.26.13.41.19.248.0 ]--
r 10             System.out.pri
--[ 2023.02.26.13.41.19.325.0 ]--
r 10             System.out.prin
--[ 2023.02.26.13.41.19.385.0 ]--
r 10             System.out.print
--[ 2023.02.26.13.41.19.613.0 ]--
r 10             System.out.printl
--[ 2023.02.26.13.41.19.769.0 ]--
r 10             System.out.println
--[ 2023.02.26.13.41.19.942.0 ]--
r 10             System.out.println()
--[ 2023.02.26.13.41.20.250.0 ]--
r 10             System.out.println("")
--[ 2023.02.26.13.41.20.670.0 ]--
r 10             System.out.println("P")
--[ 2023.02.26.13.41.20.831.0 ]--
r 10             System.out.println("Pr")
--[ 2023.02.26.13.41.21.020.0 ]--
r 10             System.out.println("Pro")
--[ 2023.02.26.13.41.21.074.0 ]--
r 10             System.out.println("Proc")
--[ 2023.02.26.13.41.21.206.0 ]--
r 10             System.out.println("Proce")
--[ 2023.02.26.13.41.21.313.0 ]--
r 10             System.out.println("Proces")
--[ 2023.02.26.13.41.21.436.0 ]--
r 10             System.out.println("Process")
--[ 2023.02.26.13.41.21.495.0 ]--
r 10             System.out.println("Processi")
--[ 2023.02.26.13.41.21.630.0 ]--
r 10             System.out.println("Processin")
--[ 2023.02.26.13.41.21.661.0 ]--
r 10             System.out.println("Processing")
--[ 2023.02.26.13.41.24.282.0 ]--
r 10             System.out.println("Processing:")
--[ 2023.02.26.13.41.24.657.0 ]--
r 10             System.out.println("Processing: ")
--[ 2023.02.26.13.41.25.275.0 ]--
r 10             System.out.println("Processing: " )
--[ 2023.02.26.13.41.25.860.0 ]--
r 10             System.out.println("Processing: " +)
--[ 2023.02.26.13.41.26.040.0 ]--
r 10             System.out.println("Processing: " + )
--[ 2023.02.26.13.41.26.151.0 ]--
r 10             System.out.println("Processing: " + i)
--[ 2023.02.26.13.41.26.191.0 ]--
r 10             System.out.println("Processing: " + il)
--[ 2023.02.26.13.41.26.601.0 ]--
r 10             System.out.println("Processing: " + i)
--[ 2023.02.26.13.41.26.730.0 ]--
r 10             System.out.println("Processing: " + )
--[ 2023.02.26.13.41.26.908.0 ]--
r 10             System.out.println("Processing: " + l)
--[ 2023.02.26.13.41.26.985.0 ]--
r 10             System.out.println("Processing: " + li)
--[ 2023.02.26.13.41.27.079.0 ]--
r 10             System.out.println("Processing: " + lin)
--[ 2023.02.26.13.41.27.165.0 ]--
r 10             System.out.println("Processing: " + line)
--[ 2023.02.26.13.41.28.985.0 ]--
r 10             System.out.println("Processing: " + line);
--[ 2023.02.26.13.41.30.258.0 ]--
- 17
--[ 2023.02.26.13.41.36.683.0 ]--
r 8         String line = reader.readine();
--[ 2023.02.26.13.41.36.984.0 ]--
r 8         String line = reader.readLine();
--[ 2023.02.26.13.41.43.763.0 ]--
+ 16             
--[ 2023.02.26.13.41.44.371.0 ]--
r 16             line = reader.readLine()
--[ 2023.02.26.13.41.45.077.0 ]--
r 16             line = reader.readLine();
--[ 2023.02.26.13.41.54.019.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.42.03.679.0 ]--
:/Expr.g4
r 3 prog        : stat+ E;
--[ 2023.02.26.13.42.03.680.0 ]--
UpdateTree (AD): 1 0
+ /out/production/Expr/LineByLine.class

--[ 2023.02.26.13.42.03.868.0 ]--
r 3 prog        : stat+ EO;
--[ 2023.02.26.13.42.04.046.0 ]--
r 3 prog        : stat+ EOF;
--[ 2023.02.26.13.42.13.549.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.42.27.541.0 ]--
UpdateTree (AD): 0 1
- /gen/Expr.interp

--[ 2023.02.26.13.42.27.545.0 ]--
UpdateTree (AD): 0 1
- /gen/Expr.tokens

--[ 2023.02.26.13.42.27.548.0 ]--
UpdateTree (AD): 0 1
- /gen/ExprBaseListener.java

--[ 2023.02.26.13.42.27.550.0 ]--
UpdateTree (AD): 0 1
- /gen/ExprBaseVisitor.java

--[ 2023.02.26.13.42.27.551.0 ]--
UpdateTree (AD): 0 1
- /gen/ExprLexer.java

--[ 2023.02.26.13.42.27.553.0 ]--
UpdateTree (AD): 0 1
- /gen/ExprLexer.interp

--[ 2023.02.26.13.42.27.555.0 ]--
UpdateTree (AD): 0 1
- /gen/ExprLexer.tokens

--[ 2023.02.26.13.42.27.556.0 ]--
UpdateTree (AD): 0 1
- /gen/ExprListener.java

--[ 2023.02.26.13.42.27.570.0 ]--
UpdateTree (AD): 0 1
- /gen/ExprParser.java

--[ 2023.02.26.13.42.27.572.0 ]--
UpdateTree (AD): 0 1
- /gen/ExprVisitor.java

--[ 2023.02.26.13.42.39.734.0 ]--
UpdateTree (AD): 10 0
+ /gen/Expr.interp
+ /gen/Expr.tokens
+ /gen/ExprLexer.java
+ /gen/ExprParser.java
+ /gen/ExprLexer.interp
+ /gen/ExprLexer.tokens
+ /gen/ExprVisitor.java
+ /gen/ExprListener.java
+ /gen/ExprBaseVisitor.java
+ /gen/ExprBaseListener.java

--[ 2023.02.26.13.42.39.734.1 ]--
InitFile: /gen/Expr.interp
token literal names:
null
'='
'+'
'-'
'*'
'('
')'
null
null
null
null

token symbolic names:
null
null
null
null
null
null
null
ID
INT
NEWLINE
WS

rule names:
prog
stat
expr
multExpr
atom


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 12, 55, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 3, 2, 6, 2, 14, 10, 2, 13, 2, 14, 2, 15, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 29, 10, 3, 3, 4, 3, 4, 3, 4, 7, 4, 34, 10, 4, 12, 4, 14, 4, 37, 11, 4, 3, 5, 3, 5, 3, 5, 7, 5, 42, 10, 5, 12, 5, 14, 5, 45, 11, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 5, 6, 53, 10, 6, 3, 6, 2, 2, 7, 2, 4, 6, 8, 10, 2, 3, 3, 2, 4, 5, 2, 56, 2, 13, 3, 2, 2, 2, 4, 28, 3, 2, 2, 2, 6, 30, 3, 2, 2, 2, 8, 38, 3, 2, 2, 2, 10, 52, 3, 2, 2, 2, 12, 14, 5, 4, 3, 2, 13, 12, 3, 2, 2, 2, 14, 15, 3, 2, 2, 2, 15, 13, 3, 2, 2, 2, 15, 16, 3, 2, 2, 2, 16, 17, 3, 2, 2, 2, 17, 18, 7, 2, 2, 3, 18, 3, 3, 2, 2, 2, 19, 20, 5, 6, 4, 2, 20, 21, 7, 11, 2, 2, 21, 29, 3, 2, 2, 2, 22, 23, 7, 9, 2, 2, 23, 24, 7, 3, 2, 2, 24, 25, 5, 6, 4, 2, 25, 26, 7, 11, 2, 2, 26, 29, 3, 2, 2, 2, 27, 29, 7, 11, 2, 2, 28, 19, 3, 2, 2, 2, 28, 22, 3, 2, 2, 2, 28, 27, 3, 2, 2, 2, 29, 5, 3, 2, 2, 2, 30, 35, 5, 8, 5, 2, 31, 32, 9, 2, 2, 2, 32, 34, 5, 8, 5, 2, 33, 31, 3, 2, 2, 2, 34, 37, 3, 2, 2, 2, 35, 33, 3, 2, 2, 2, 35, 36, 3, 2, 2, 2, 36, 7, 3, 2, 2, 2, 37, 35, 3, 2, 2, 2, 38, 43, 5, 10, 6, 2, 39, 40, 7, 6, 2, 2, 40, 42, 5, 10, 6, 2, 41, 39, 3, 2, 2, 2, 42, 45, 3, 2, 2, 2, 43, 41, 3, 2, 2, 2, 43, 44, 3, 2, 2, 2, 44, 9, 3, 2, 2, 2, 45, 43, 3, 2, 2, 2, 46, 53, 7, 10, 2, 2, 47, 53, 7, 9, 2, 2, 48, 49, 7, 7, 2, 2, 49, 50, 5, 6, 4, 2, 50, 51, 7, 8, 2, 2, 51, 53, 3, 2, 2, 2, 52, 46, 3, 2, 2, 2, 52, 47, 3, 2, 2, 2, 52, 48, 3, 2, 2, 2, 53, 11, 3, 2, 2, 2, 7, 15, 28, 35, 43, 52]

--[ 2023.02.26.13.42.39.734.2 ]--
InitFile: /gen/Expr.tokens
T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
ID=7
INT=8
NEWLINE=9
WS=10
'='=1
'+'=2
'-'=3
'*'=4
'('=5
')'=6

--[ 2023.02.26.13.42.39.734.3 ]--
InitFile: /gen/ExprLexer.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ExprLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, ID=7, INT=8, NEWLINE=9, 
		WS=10;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "ID", "INT", "NEWLINE", 
			"WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "'+'", "'-'", "'*'", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, "ID", "INT", "NEWLINE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ExprLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Expr.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\f9\b\1\4\2\t\2\4"+
		"\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t"+
		"\13\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\6\b%\n\b\r\b\16"+
		"\b&\3\t\6\t*\n\t\r\t\16\t+\3\n\5\n/\n\n\3\n\3\n\3\13\6\13\64\n\13\r\13"+
		"\16\13\65\3\13\3\13\2\2\f\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25"+
		"\f\3\2\5\4\2C\\c|\3\2\62;\4\2\13\13\"\"\2<\2\3\3\2\2\2\2\5\3\2\2\2\2\7"+
		"\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2"+
		"\2\2\23\3\2\2\2\2\25\3\2\2\2\3\27\3\2\2\2\5\31\3\2\2\2\7\33\3\2\2\2\t"+
		"\35\3\2\2\2\13\37\3\2\2\2\r!\3\2\2\2\17$\3\2\2\2\21)\3\2\2\2\23.\3\2\2"+
		"\2\25\63\3\2\2\2\27\30\7?\2\2\30\4\3\2\2\2\31\32\7-\2\2\32\6\3\2\2\2\33"+
		"\34\7/\2\2\34\b\3\2\2\2\35\36\7,\2\2\36\n\3\2\2\2\37 \7*\2\2 \f\3\2\2"+
		"\2!\"\7+\2\2\"\16\3\2\2\2#%\t\2\2\2$#\3\2\2\2%&\3\2\2\2&$\3\2\2\2&\'\3"+
		"\2\2\2\'\20\3\2\2\2(*\t\3\2\2)(\3\2\2\2*+\3\2\2\2+)\3\2\2\2+,\3\2\2\2"+
		",\22\3\2\2\2-/\7\17\2\2.-\3\2\2\2./\3\2\2\2/\60\3\2\2\2\60\61\7\f\2\2"+
		"\61\24\3\2\2\2\62\64\t\4\2\2\63\62\3\2\2\2\64\65\3\2\2\2\65\63\3\2\2\2"+
		"\65\66\3\2\2\2\66\67\3\2\2\2\678\b\13\2\28\26\3\2\2\2\7\2&+.\65\3\b\2"+
		"\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}

--[ 2023.02.26.13.42.39.734.4 ]--
InitFile: /gen/ExprParser.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.misc.*;
import org.antlr.v4.runtime.tree.*;
import java.util.List;
import java.util.Iterator;
import java.util.ArrayList;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ExprParser extends Parser {
	static { RuntimeMetaData.checkVersion("4.9.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, ID=7, INT=8, NEWLINE=9, 
		WS=10;
	public static final int
		RULE_prog = 0, RULE_stat = 1, RULE_expr = 2, RULE_multExpr = 3, RULE_atom = 4;
	private static String[] makeRuleNames() {
		return new String[] {
			"prog", "stat", "expr", "multExpr", "atom"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "'+'", "'-'", "'*'", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, "ID", "INT", "NEWLINE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	@Override
	public String getGrammarFileName() { return "Expr.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public ATN getATN() { return _ATN; }

	public ExprParser(TokenStream input) {
		super(input);
		_interp = new ParserATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	public static class ProgContext extends ParserRuleContext {
		public TerminalNode EOF() { return getToken(ExprParser.EOF, 0); }
		public List<StatContext> stat() {
			return getRuleContexts(StatContext.class);
		}
		public StatContext stat(int i) {
			return getRuleContext(StatContext.class,i);
		}
		public ProgContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_prog; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterProg(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitProg(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitProg(this);
			else return visitor.visitChildren(this);
		}
	}

	public final ProgContext prog() throws RecognitionException {
		ProgContext _localctx = new ProgContext(_ctx, getState());
		enterRule(_localctx, 0, RULE_prog);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(11); 
			_errHandler.sync(this);
			_la = _input.LA(1);
			do {
				{
				{
				setState(10);
				stat();
				}
				}
				setState(13); 
				_errHandler.sync(this);
				_la = _input.LA(1);
			} while ( (((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__4) | (1L << ID) | (1L << INT) | (1L << NEWLINE))) != 0) );
			setState(15);
			match(EOF);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class StatContext extends ParserRuleContext {
		public ExprContext expr() {
			return getRuleContext(ExprContext.class,0);
		}
		public TerminalNode NEWLINE() { return getToken(ExprParser.NEWLINE, 0); }
		public TerminalNode ID() { return getToken(ExprParser.ID, 0); }
		public StatContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_stat; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterStat(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitStat(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitStat(this);
			else return visitor.visitChildren(this);
		}
	}

	public final StatContext stat() throws RecognitionException {
		StatContext _localctx = new StatContext(_ctx, getState());
		enterRule(_localctx, 2, RULE_stat);
		try {
			setState(26);
			_errHandler.sync(this);
			switch ( getInterpreter().adaptivePredict(_input,1,_ctx) ) {
			case 1:
				enterOuterAlt(_localctx, 1);
				{
				setState(17);
				expr();
				setState(18);
				match(NEWLINE);
				}
				break;
			case 2:
				enterOuterAlt(_localctx, 2);
				{
				setState(20);
				match(ID);
				setState(21);
				match(T__0);
				setState(22);
				expr();
				setState(23);
				match(NEWLINE);
				}
				break;
			case 3:
				enterOuterAlt(_localctx, 3);
				{
				setState(25);
				match(NEWLINE);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class ExprContext extends ParserRuleContext {
		public List<MultExprContext> multExpr() {
			return getRuleContexts(MultExprContext.class);
		}
		public MultExprContext multExpr(int i) {
			return getRuleContext(MultExprContext.class,i);
		}
		public ExprContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_expr; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterExpr(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitExpr(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitExpr(this);
			else return visitor.visitChildren(this);
		}
	}

	public final ExprContext expr() throws RecognitionException {
		ExprContext _localctx = new ExprContext(_ctx, getState());
		enterRule(_localctx, 4, RULE_expr);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(28);
			multExpr();
			setState(33);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==T__1 || _la==T__2) {
				{
				{
				setState(29);
				_la = _input.LA(1);
				if ( !(_la==T__1 || _la==T__2) ) {
				_errHandler.recoverInline(this);
				}
				else {
					if ( _input.LA(1)==Token.EOF ) matchedEOF = true;
					_errHandler.reportMatch(this);
					consume();
				}
				setState(30);
				multExpr();
				}
				}
				setState(35);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class MultExprContext extends ParserRuleContext {
		public List<AtomContext> atom() {
			return getRuleContexts(AtomContext.class);
		}
		public AtomContext atom(int i) {
			return getRuleContext(AtomContext.class,i);
		}
		public MultExprContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_multExpr; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterMultExpr(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitMultExpr(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitMultExpr(this);
			else return visitor.visitChildren(this);
		}
	}

	public final MultExprContext multExpr() throws RecognitionException {
		MultExprContext _localctx = new MultExprContext(_ctx, getState());
		enterRule(_localctx, 6, RULE_multExpr);
		int _la;
		try {
			enterOuterAlt(_localctx, 1);
			{
			setState(36);
			atom();
			setState(41);
			_errHandler.sync(this);
			_la = _input.LA(1);
			while (_la==T__3) {
				{
				{
				setState(37);
				match(T__3);
				setState(38);
				atom();
				}
				}
				setState(43);
				_errHandler.sync(this);
				_la = _input.LA(1);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static class AtomContext extends ParserRuleContext {
		public TerminalNode INT() { return getToken(ExprParser.INT, 0); }
		public TerminalNode ID() { return getToken(ExprParser.ID, 0); }
		public ExprContext expr() {
			return getRuleContext(ExprContext.class,0);
		}
		public AtomContext(ParserRuleContext parent, int invokingState) {
			super(parent, invokingState);
		}
		@Override public int getRuleIndex() { return RULE_atom; }
		@Override
		public void enterRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).enterAtom(this);
		}
		@Override
		public void exitRule(ParseTreeListener listener) {
			if ( listener instanceof ExprListener ) ((ExprListener)listener).exitAtom(this);
		}
		@Override
		public <T> T accept(ParseTreeVisitor<? extends T> visitor) {
			if ( visitor instanceof ExprVisitor ) return ((ExprVisitor<? extends T>)visitor).visitAtom(this);
			else return visitor.visitChildren(this);
		}
	}

	public final AtomContext atom() throws RecognitionException {
		AtomContext _localctx = new AtomContext(_ctx, getState());
		enterRule(_localctx, 8, RULE_atom);
		try {
			setState(50);
			_errHandler.sync(this);
			switch (_input.LA(1)) {
			case INT:
				enterOuterAlt(_localctx, 1);
				{
				setState(44);
				match(INT);
				}
				break;
			case ID:
				enterOuterAlt(_localctx, 2);
				{
				setState(45);
				match(ID);
				}
				break;
			case T__4:
				enterOuterAlt(_localctx, 3);
				{
				setState(46);
				match(T__4);
				setState(47);
				expr();
				setState(48);
				match(T__5);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.reportError(this, re);
			_errHandler.recover(this, re);
		}
		finally {
			exitRule();
		}
		return _localctx;
	}

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\3\f\67\4\2\t\2\4\3"+
		"\t\3\4\4\t\4\4\5\t\5\4\6\t\6\3\2\6\2\16\n\2\r\2\16\2\17\3\2\3\2\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\5\3\35\n\3\3\4\3\4\3\4\7\4\"\n\4\f\4\16"+
		"\4%\13\4\3\5\3\5\3\5\7\5*\n\5\f\5\16\5-\13\5\3\6\3\6\3\6\3\6\3\6\3\6\5"+
		"\6\65\n\6\3\6\2\2\7\2\4\6\b\n\2\3\3\2\4\5\28\2\r\3\2\2\2\4\34\3\2\2\2"+
		"\6\36\3\2\2\2\b&\3\2\2\2\n\64\3\2\2\2\f\16\5\4\3\2\r\f\3\2\2\2\16\17\3"+
		"\2\2\2\17\r\3\2\2\2\17\20\3\2\2\2\20\21\3\2\2\2\21\22\7\2\2\3\22\3\3\2"+
		"\2\2\23\24\5\6\4\2\24\25\7\13\2\2\25\35\3\2\2\2\26\27\7\t\2\2\27\30\7"+
		"\3\2\2\30\31\5\6\4\2\31\32\7\13\2\2\32\35\3\2\2\2\33\35\7\13\2\2\34\23"+
		"\3\2\2\2\34\26\3\2\2\2\34\33\3\2\2\2\35\5\3\2\2\2\36#\5\b\5\2\37 \t\2"+
		"\2\2 \"\5\b\5\2!\37\3\2\2\2\"%\3\2\2\2#!\3\2\2\2#$\3\2\2\2$\7\3\2\2\2"+
		"%#\3\2\2\2&+\5\n\6\2\'(\7\6\2\2(*\5\n\6\2)\'\3\2\2\2*-\3\2\2\2+)\3\2\2"+
		"\2+,\3\2\2\2,\t\3\2\2\2-+\3\2\2\2.\65\7\n\2\2/\65\7\t\2\2\60\61\7\7\2"+
		"\2\61\62\5\6\4\2\62\63\7\b\2\2\63\65\3\2\2\2\64.\3\2\2\2\64/\3\2\2\2\64"+
		"\60\3\2\2\2\65\13\3\2\2\2\7\17\34#+\64";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}

--[ 2023.02.26.13.42.39.734.5 ]--
InitFile: /gen/ExprLexer.interp
token literal names:
null
'='
'+'
'-'
'*'
'('
')'
null
null
null
null

token symbolic names:
null
null
null
null
null
null
null
ID
INT
NEWLINE
WS

rule names:
T__0
T__1
T__2
T__3
T__4
T__5
ID
INT
NEWLINE
WS

channel names:
DEFAULT_TOKEN_CHANNEL
HIDDEN

mode names:
DEFAULT_MODE

atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 12, 57, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 6, 8, 37, 10, 8, 13, 8, 14, 8, 38, 3, 9, 6, 9, 42, 10, 9, 13, 9, 14, 9, 43, 3, 10, 5, 10, 47, 10, 10, 3, 10, 3, 10, 3, 11, 6, 11, 52, 10, 11, 13, 11, 14, 11, 53, 3, 11, 3, 11, 2, 2, 12, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 3, 2, 5, 4, 2, 67, 92, 99, 124, 3, 2, 50, 59, 4, 2, 11, 11, 34, 34, 2, 60, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 3, 23, 3, 2, 2, 2, 5, 25, 3, 2, 2, 2, 7, 27, 3, 2, 2, 2, 9, 29, 3, 2, 2, 2, 11, 31, 3, 2, 2, 2, 13, 33, 3, 2, 2, 2, 15, 36, 3, 2, 2, 2, 17, 41, 3, 2, 2, 2, 19, 46, 3, 2, 2, 2, 21, 51, 3, 2, 2, 2, 23, 24, 7, 63, 2, 2, 24, 4, 3, 2, 2, 2, 25, 26, 7, 45, 2, 2, 26, 6, 3, 2, 2, 2, 27, 28, 7, 47, 2, 2, 28, 8, 3, 2, 2, 2, 29, 30, 7, 44, 2, 2, 30, 10, 3, 2, 2, 2, 31, 32, 7, 42, 2, 2, 32, 12, 3, 2, 2, 2, 33, 34, 7, 43, 2, 2, 34, 14, 3, 2, 2, 2, 35, 37, 9, 2, 2, 2, 36, 35, 3, 2, 2, 2, 37, 38, 3, 2, 2, 2, 38, 36, 3, 2, 2, 2, 38, 39, 3, 2, 2, 2, 39, 16, 3, 2, 2, 2, 40, 42, 9, 3, 2, 2, 41, 40, 3, 2, 2, 2, 42, 43, 3, 2, 2, 2, 43, 41, 3, 2, 2, 2, 43, 44, 3, 2, 2, 2, 44, 18, 3, 2, 2, 2, 45, 47, 7, 15, 2, 2, 46, 45, 3, 2, 2, 2, 46, 47, 3, 2, 2, 2, 47, 48, 3, 2, 2, 2, 48, 49, 7, 12, 2, 2, 49, 20, 3, 2, 2, 2, 50, 52, 9, 4, 2, 2, 51, 50, 3, 2, 2, 2, 52, 53, 3, 2, 2, 2, 53, 51, 3, 2, 2, 2, 53, 54, 3, 2, 2, 2, 54, 55, 3, 2, 2, 2, 55, 56, 8, 11, 2, 2, 56, 22, 3, 2, 2, 2, 7, 2, 38, 43, 46, 53, 3, 8, 2, 2]

--[ 2023.02.26.13.42.39.734.6 ]--
InitFile: /gen/ExprLexer.tokens
T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
ID=7
INT=8
NEWLINE=9
WS=10
'='=1
'+'=2
'-'=3
'*'=4
'('=5
')'=6

--[ 2023.02.26.13.42.39.734.7 ]--
InitFile: /gen/ExprVisitor.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.tree.ParseTreeVisitor;

/**
 * This interface defines a complete generic visitor for a parse tree produced
 * by {@link ExprParser}.
 *
 * @param <T> The return type of the visit operation. Use {@link Void} for
 * operations with no return type.
 */
public interface ExprVisitor<T> extends ParseTreeVisitor<T> {
	/**
	 * Visit a parse tree produced by {@link ExprParser#prog}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitProg(ExprParser.ProgContext ctx);
	/**
	 * Visit a parse tree produced by {@link ExprParser#stat}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitStat(ExprParser.StatContext ctx);
	/**
	 * Visit a parse tree produced by {@link ExprParser#expr}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitExpr(ExprParser.ExprContext ctx);
	/**
	 * Visit a parse tree produced by {@link ExprParser#multExpr}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitMultExpr(ExprParser.MultExprContext ctx);
	/**
	 * Visit a parse tree produced by {@link ExprParser#atom}.
	 * @param ctx the parse tree
	 * @return the visitor result
	 */
	T visitAtom(ExprParser.AtomContext ctx);
}

--[ 2023.02.26.13.42.39.734.8 ]--
InitFile: /gen/ExprListener.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.tree.ParseTreeListener;

/**
 * This interface defines a complete listener for a parse tree produced by
 * {@link ExprParser}.
 */
public interface ExprListener extends ParseTreeListener {
	/**
	 * Enter a parse tree produced by {@link ExprParser#prog}.
	 * @param ctx the parse tree
	 */
	void enterProg(ExprParser.ProgContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#prog}.
	 * @param ctx the parse tree
	 */
	void exitProg(ExprParser.ProgContext ctx);
	/**
	 * Enter a parse tree produced by {@link ExprParser#stat}.
	 * @param ctx the parse tree
	 */
	void enterStat(ExprParser.StatContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#stat}.
	 * @param ctx the parse tree
	 */
	void exitStat(ExprParser.StatContext ctx);
	/**
	 * Enter a parse tree produced by {@link ExprParser#expr}.
	 * @param ctx the parse tree
	 */
	void enterExpr(ExprParser.ExprContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#expr}.
	 * @param ctx the parse tree
	 */
	void exitExpr(ExprParser.ExprContext ctx);
	/**
	 * Enter a parse tree produced by {@link ExprParser#multExpr}.
	 * @param ctx the parse tree
	 */
	void enterMultExpr(ExprParser.MultExprContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#multExpr}.
	 * @param ctx the parse tree
	 */
	void exitMultExpr(ExprParser.MultExprContext ctx);
	/**
	 * Enter a parse tree produced by {@link ExprParser#atom}.
	 * @param ctx the parse tree
	 */
	void enterAtom(ExprParser.AtomContext ctx);
	/**
	 * Exit a parse tree produced by {@link ExprParser#atom}.
	 * @param ctx the parse tree
	 */
	void exitAtom(ExprParser.AtomContext ctx);
}

--[ 2023.02.26.13.42.39.734.9 ]--
InitFile: /gen/ExprBaseVisitor.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1
import org.antlr.v4.runtime.tree.AbstractParseTreeVisitor;

/**
 * This class provides an empty implementation of {@link ExprVisitor},
 * which can be extended to create a visitor which only needs to handle a subset
 * of the available methods.
 *
 * @param <T> The return type of the visit operation. Use {@link Void} for
 * operations with no return type.
 */
public class ExprBaseVisitor<T> extends AbstractParseTreeVisitor<T> implements ExprVisitor<T> {
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitProg(ExprParser.ProgContext ctx) { return visitChildren(ctx); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitStat(ExprParser.StatContext ctx) { return visitChildren(ctx); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitExpr(ExprParser.ExprContext ctx) { return visitChildren(ctx); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitMultExpr(ExprParser.MultExprContext ctx) { return visitChildren(ctx); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation returns the result of calling
	 * {@link #visitChildren} on {@code ctx}.</p>
	 */
	@Override public T visitAtom(ExprParser.AtomContext ctx) { return visitChildren(ctx); }
}

--[ 2023.02.26.13.42.39.734.10 ]--
InitFile: /gen/ExprBaseListener.java
// Generated from /home/jon/IdeaProjects/Expr/Expr.g4 by ANTLR 4.9.1

import org.antlr.v4.runtime.ParserRuleContext;
import org.antlr.v4.runtime.tree.ErrorNode;
import org.antlr.v4.runtime.tree.TerminalNode;

/**
 * This class provides an empty implementation of {@link ExprListener},
 * which can be extended to create a listener which only needs to handle a subset
 * of the available methods.
 */
public class ExprBaseListener implements ExprListener {
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterProg(ExprParser.ProgContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitProg(ExprParser.ProgContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterStat(ExprParser.StatContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitStat(ExprParser.StatContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterExpr(ExprParser.ExprContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitExpr(ExprParser.ExprContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterMultExpr(ExprParser.MultExprContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitMultExpr(ExprParser.MultExprContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterAtom(ExprParser.AtomContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitAtom(ExprParser.AtomContext ctx) { }

	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterEveryRule(ParserRuleContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitEveryRule(ParserRuleContext ctx) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void visitTerminal(TerminalNode node) { }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void visitErrorNode(ErrorNode node) { }
}

--[ 2023.02.26.13.42.39.734.11 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.43.02.992.0 ]--
r 3 prog        : ()stat+ EOF;
--[ 2023.02.26.13.43.03.815.0 ]--
r 3 prog        : (stat+ EOF;
--[ 2023.02.26.13.43.05.705.0 ]--
r 3 prog        : (stat + EOF;
--[ 2023.02.26.13.43.12.035.0 ]--
r 3 prog        : (stat+ EOF;
--[ 2023.02.26.13.43.13.225.0 ]--
r 3 prog        : stat+ EOF;
--[ 2023.02.26.13.43.23.601.0 ]--
r 3 prog        : ()stat+ EOF;
--[ 2023.02.26.13.43.24.529.0 ]--
r 3 prog        : (stat+ EOF;
--[ 2023.02.26.13.43.25.654.0 ]--
r 3 prog        : (stat + EOF;
--[ 2023.02.26.13.43.26.422.0 ]--
r 3 prog        : (stat ()+ EOF;
--[ 2023.02.26.13.43.26.746.0 ]--
r 3 prog        : (stat (N)+ EOF;
--[ 2023.02.26.13.43.26.867.0 ]--
r 3 prog        : (stat (NE)+ EOF;
--[ 2023.02.26.13.43.26.951.0 ]--
r 3 prog        : (stat (NEW)+ EOF;
--[ 2023.02.26.13.43.27.114.0 ]--
r 3 prog        : (stat (NEWL)+ EOF;
--[ 2023.02.26.13.43.27.170.0 ]--
r 3 prog        : (stat (NEWLI)+ EOF;
--[ 2023.02.26.13.43.27.291.0 ]--
r 3 prog        : (stat (NEWLIN)+ EOF;
--[ 2023.02.26.13.43.27.369.0 ]--
r 3 prog        : (stat (NEWLINE)+ EOF;
--[ 2023.02.26.13.43.27.568.0 ]--
r 3 prog        : (stat (NEWLINE )+ EOF;
--[ 2023.02.26.13.43.27.751.0 ]--
r 3 prog        : (stat (NEWLINE |)+ EOF;
--[ 2023.02.26.13.43.29.501.0 ]--
r 3 prog        : (stat (NEWLINE )+ EOF;
--[ 2023.02.26.13.43.29.653.0 ]--
r 3 prog        : (stat (NEWLINE)+ EOF;
--[ 2023.02.26.13.43.31.658.0 ]--
r 3 prog        : (stat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.43.627.0 ]--
r 3 prog        : s(stat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.43.754.0 ]--
r 3 prog        : st(stat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.43.772.0 ]--
r 3 prog        : sta(stat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.44.181.0 ]--
r 3 prog        : stat(stat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.44.339.0 ]--
r 3 prog        : stat (stat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.45.941.0 ]--
r 3 prog        : stat (Nstat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.46.085.0 ]--
r 3 prog        : stat (NEstat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.46.132.0 ]--
r 3 prog        : stat (NEWstat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.46.310.0 ]--
r 3 prog        : stat (NEWLstat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.46.355.0 ]--
r 3 prog        : stat (NEWLIstat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.46.479.0 ]--
r 3 prog        : stat (NEWLINstat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.46.777.0 ]--
r 3 prog        : stat (NEWLINEstat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.46.930.0 ]--
r 3 prog        : stat (NEWLINE stat NEWLINE)+ EOF;
--[ 2023.02.26.13.43.48.336.0 ]--
r 3 prog        : stat (NEWLINE stat)+ EOF;
--[ 2023.02.26.13.43.49.688.0 ]--
r 3 prog        : stat (NEWLINE stat)* EOF;
--[ 2023.02.26.13.43.51.202.0 ]--
r 5 stat        : expr 
--[ 2023.02.26.13.43.51.342.0 ]--
r 5 stat        : expr
--[ 2023.02.26.13.43.52.732.0 ]--
r 6             | ID '=' expr 
--[ 2023.02.26.13.43.52.873.0 ]--
r 6             | ID '=' expr
--[ 2023.02.26.13.43.53.769.0 ]--
r 7             | 
--[ 2023.02.26.13.43.54.464.0 ]--
r 7             |
--[ 2023.02.26.13.44.07.226.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.44.12.117.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.44.12.949.0 ]--
:/gen/ExprParser.java
- 93
+ 98 		}
+ 99 		public TerminalNode EOF() { return getToken(ExprParser.EOF, 0); }
+ 100 		public List<TerminalNode> NEWLINE() { return getTokens(ExprParser.NEWLINE); }
+ 101 		public TerminalNode NEWLINE(int i) {
+ 102 			return getToken(ExprParser.NEWLINE, i);
+ 130 			setState(10);
+ 131 			stat();
r 132 			setState(15);
r 135 			while (_la==NEWLINE) {
+ 138 				setState(11);
+ 139 				match(NEWLINE);
r 140 				setState(12);
r 144 				setState(17);
r 147 			}
r 148 			setState(18);
- 167
r 191 			setState(25);
r 197 				setState(20);
- 199
- 199
- 204
- 204
r 205 				match(ID);
r 207 				match(T__0);
r 209 				expr();
- 215
- 215
r 263 			setState(27);
r 265 			setState(32);
r 271 				setState(28);
r 281 				setState(29);
r 285 				setState(34);
r 335 			setState(35);
r 337 			setState(40);
r 343 				setState(36);
r 345 				setState(37);
r 349 				setState(42);
r 395 			setState(49);
r 401 				setState(43);
r 408 				setState(44);
r 415 				setState(45);
r 417 				setState(46);
r 419 				setState(47);
r 439 		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\3\f\66\4\2\t\2\4\3"+
r 440 		"\t\3\4\4\t\4\4\5\t\5\4\6\t\6\3\2\3\2\3\2\7\2\20\n\2\f\2\16\2\23\13\2\3"+
r 441 		"\2\3\2\3\3\3\3\3\3\3\3\3\3\5\3\34\n\3\3\4\3\4\3\4\7\4!\n\4\f\4\16\4$\13"+
r 442 		"\4\3\5\3\5\3\5\7\5)\n\5\f\5\16\5,\13\5\3\6\3\6\3\6\3\6\3\6\3\6\5\6\64"+
r 443 		"\n\6\3\6\2\2\7\2\4\6\b\n\2\3\3\2\4\5\2\67\2\f\3\2\2\2\4\33\3\2\2\2\6\35"+
r 444 		"\3\2\2\2\b%\3\2\2\2\n\63\3\2\2\2\f\21\5\4\3\2\r\16\7\13\2\2\16\20\5\4"+
r 445 		"\3\2\17\r\3\2\2\2\20\23\3\2\2\2\21\17\3\2\2\2\21\22\3\2\2\2\22\24\3\2"+
r 446 		"\2\2\23\21\3\2\2\2\24\25\7\2\2\3\25\3\3\2\2\2\26\34\5\6\4\2\27\30\7\t"+
r 447 		"\2\2\30\31\7\3\2\2\31\34\5\6\4\2\32\34\3\2\2\2\33\26\3\2\2\2\33\27\3\2"+
r 448 		"\2\2\33\32\3\2\2\2\34\5\3\2\2\2\35\"\5\b\5\2\36\37\t\2\2\2\37!\5\b\5\2"+
r 449 		" \36\3\2\2\2!$\3\2\2\2\" \3\2\2\2\"#\3\2\2\2#\7\3\2\2\2$\"\3\2\2\2%*\5"+
r 450 		"\n\6\2&\'\7\6\2\2\')\5\n\6\2(&\3\2\2\2),\3\2\2\2*(\3\2\2\2*+\3\2\2\2+"+
r 451 		"\t\3\2\2\2,*\3\2\2\2-\64\7\n\2\2.\64\7\t\2\2/\60\7\7\2\2\60\61\5\6\4\2"+
r 452 		"\61\62\7\b\2\2\62\64\3\2\2\2\63-\3\2\2\2\63.\3\2\2\2\63/\3\2\2\2\64\13"+
r 453 		"\3\2\2\2\7\21\33\"*\63";
--[ 2023.02.26.13.44.51.326.0 ]--
:/Expr.g4
- 7
--[ 2023.02.26.13.45.03.978.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.45.09.202.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.45.21.955.0 ]--
:/src/Main.java
r 3 public class  {
--[ 2023.02.26.13.45.21.965.0 ]--
r 3 public class Main {
--[ 2023.02.26.13.45.23.619.0 ]--
r 3 public class E {
--[ 2023.02.26.13.45.23.871.0 ]--
r 3 public class En {
--[ 2023.02.26.13.45.23.948.0 ]--
r 3 public class Ent {
--[ 2023.02.26.13.45.24.211.0 ]--
r 3 public class Enti {
--[ 2023.02.26.13.45.24.371.0 ]--
r 3 public class Entir {
--[ 2023.02.26.13.45.24.498.0 ]--
r 3 public class Entire {
--[ 2023.02.26.13.45.24.775.0 ]--
r 3 public class EntireF {
--[ 2023.02.26.13.45.24.875.0 ]--
r 3 public class EntireFi {
--[ 2023.02.26.13.45.24.978.0 ]--
r 3 public class EntireFil {
--[ 2023.02.26.13.45.25.078.0 ]--
r 3 public class EntireFile {
--[ 2023.02.26.13.45.29.204.0 ]--
r 3 public class Main {
--[ 2023.02.26.13.45.29.555.0 ]--
r 3 public class EntireFile {
--[ 2023.02.26.13.45.31.958.0 ]--
UpdateTree (AD): 1 1
- /src/Main.java
+ /src/EntireFile.java

--[ 2023.02.26.13.45.31.958.1 ]--
InitFile: /src/EntireFile.java
import org.antlr.v4.runtime.*;

public class Main {
    public static void main(String[] args) throws Exception {
        CharStream input = CharStreams.fromFileName("inputs/test.txt");
        ExprLexer lexer = new ExprLexer(input);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        ExprParser parser = new ExprParser(tokens);
        parser.prog();
    }
}

--[ 2023.02.26.13.45.35.782.0 ]--
UpdateTree (AD): 1 0
+ /.idea/uiDesigner.xml

--[ 2023.02.26.13.45.55.096.0 ]--
UpdateTree (AD): 0 1
- /out/production/Expr/Main.class

--[ 2023.02.26.13.45.55.096.1 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.46.30.747.0 ]--
UpdateTree (AD): 3 0
+ /out/production/Expr/META-INF/Expr.kotlin_module
+ /out/production/Expr/EntireFile.class
+ /src/ErrorHandler.java

--[ 2023.02.26.13.46.30.747.1 ]--
InitFile: /out/production/Expr/META-INF/Expr.kotlin_module
            

--[ 2023.02.26.13.46.30.747.2 ]--
InitFile: /src/ErrorHandler.java


--[ 2023.02.26.13.46.30.785.0 ]--
:/src/ErrorHandler.java
+ 1 package PACKAGE_NAME;
+ 3 public class ErrorHandler {
+ 4 }
--[ 2023.02.26.13.46.30.791.0 ]--
r 1 
--[ 2023.02.26.13.46.30.799.0 ]--
- 1
- 1
--[ 2023.02.26.13.46.32.730.0 ]--
- 1
r 1 
--[ 2023.02.26.13.46.42.544.0 ]--
+ 1 import org.antlr.v4.runtime.*;
+ 3 public class EntireFile {
+ 4     public static void main(String[] args) throws Exception {
+ 5         CharStream input = CharStreams.fromFileName("inputs/test.txt");
+ 6         ExprLexer lexer = new ExprLexer(input);
+ 7         CommonTokenStream tokens = new CommonTokenStream(lexer);
+ 8         ExprParser parser = new ExprParser(tokens);
+ 9         parser.prog();
+ 10     }
+ 11 }
--[ 2023.02.26.13.46.44.381.0 ]--
r 3 public class E {
--[ 2023.02.26.13.46.44.540.0 ]--
r 3 public class Er {
--[ 2023.02.26.13.46.44.704.0 ]--
r 3 public class Err {
--[ 2023.02.26.13.46.44.811.0 ]--
r 3 public class Erro {
--[ 2023.02.26.13.46.45.003.0 ]--
r 3 public class Error {
--[ 2023.02.26.13.46.45.233.0 ]--
r 3 public class ErrorH {
--[ 2023.02.26.13.46.45.415.0 ]--
r 3 public class ErrorHa {
--[ 2023.02.26.13.46.45.521.0 ]--
r 3 public class ErrorHan {
--[ 2023.02.26.13.46.45.608.0 ]--
r 3 public class ErrorHand {
--[ 2023.02.26.13.46.45.692.0 ]--
r 3 public class ErrorHandl {
--[ 2023.02.26.13.46.45.849.0 ]--
r 3 public class ErrorHandle {
--[ 2023.02.26.13.46.45.920.0 ]--
r 3 public class ErrorHandler {
--[ 2023.02.26.13.46.49.485.0 ]--
+ 9         
--[ 2023.02.26.13.46.49.599.0 ]--
r 9         p
--[ 2023.02.26.13.46.49.718.0 ]--
r 9         pa
--[ 2023.02.26.13.46.49.834.0 ]--
r 9         par
--[ 2023.02.26.13.46.50.012.0 ]--
r 9         pars
--[ 2023.02.26.13.46.50.085.0 ]--
r 9         parse
--[ 2023.02.26.13.46.50.250.0 ]--
r 9         parser
--[ 2023.02.26.13.46.50.364.0 ]--
r 9         parser.
--[ 2023.02.26.13.46.50.847.0 ]--
r 9         parser.r
--[ 2023.02.26.13.46.50.960.0 ]--
r 9         parser.re
--[ 2023.02.26.13.46.51.418.0 ]--
r 9         parser.rem
--[ 2023.02.26.13.46.51.558.0 ]--
r 9         parser.remo
--[ 2023.02.26.13.46.53.346.0 ]--
r 9         parser.removeErrorListeners
--[ 2023.02.26.13.46.53.355.0 ]--
r 9         parser.removeErrorListeners()
--[ 2023.02.26.13.46.53.360.0 ]--
r 9         parser.removeErrorListeners();
--[ 2023.02.26.13.46.56.379.0 ]--
+ 9 
--[ 2023.02.26.13.46.56.976.0 ]--
+ 11 
--[ 2023.02.26.13.46.57.885.0 ]--
+ 10         
--[ 2023.02.26.13.46.58.127.0 ]--
r 10             
--[ 2023.02.26.13.46.58.562.0 ]--
r 10         
--[ 2023.02.26.13.46.58.821.0 ]--
r 10         /
--[ 2023.02.26.13.46.58.913.0 ]--
r 10         //
--[ 2023.02.26.13.46.59.195.0 ]--
r 10         // 
--[ 2023.02.26.13.46.59.275.0 ]--
r 10         //  
--[ 2023.02.26.13.46.59.771.0 ]--
r 10         // 
--[ 2023.02.26.13.46.59.971.0 ]--
r 10         // r
--[ 2023.02.26.13.47.00.161.0 ]--
r 10         // re
--[ 2023.02.26.13.47.00.288.0 ]--
r 10         // rem
--[ 2023.02.26.13.47.00.376.0 ]--
r 10         // remo
--[ 2023.02.26.13.47.00.452.0 ]--
r 10         // remov
--[ 2023.02.26.13.47.00.526.0 ]--
r 10         // remove
--[ 2023.02.26.13.47.00.626.0 ]--
r 10         // remove 
--[ 2023.02.26.13.47.00.832.0 ]--
r 10         // remove a
--[ 2023.02.26.13.47.00.999.0 ]--
r 10         // remove al
--[ 2023.02.26.13.47.01.102.0 ]--
r 10         // remove all
--[ 2023.02.26.13.47.01.463.0 ]--
r 10         // remove al
--[ 2023.02.26.13.47.01.584.0 ]--
r 10         // remove a
--[ 2023.02.26.13.47.01.696.0 ]--
r 10         // remove 
--[ 2023.02.26.13.47.02.049.0 ]--
r 10         // remove A
--[ 2023.02.26.13.47.02.176.0 ]--
r 10         // remove AL
--[ 2023.02.26.13.47.02.311.0 ]--
r 10         // remove ALL
--[ 2023.02.26.13.47.02.429.0 ]--
r 10         // remove ALL 
--[ 2023.02.26.13.47.02.739.0 ]--
r 10         // remove ALL e
--[ 2023.02.26.13.47.02.873.0 ]--
r 10         // remove ALL er
--[ 2023.02.26.13.47.02.995.0 ]--
r 10         // remove ALL err
--[ 2023.02.26.13.47.03.049.0 ]--
r 10         // remove ALL erro
--[ 2023.02.26.13.47.03.195.0 ]--
r 10         // remove ALL error
--[ 2023.02.26.13.47.03.317.0 ]--
r 10         // remove ALL error 
--[ 2023.02.26.13.47.03.465.0 ]--
r 10         // remove ALL error l
--[ 2023.02.26.13.47.03.608.0 ]--
r 10         // remove ALL error li
--[ 2023.02.26.13.47.03.688.0 ]--
r 10         // remove ALL error lis
--[ 2023.02.26.13.47.03.760.0 ]--
r 10         // remove ALL error list
--[ 2023.02.26.13.47.03.882.0 ]--
r 10         // remove ALL error liste
--[ 2023.02.26.13.47.04.128.0 ]--
r 10         // remove ALL error listen
--[ 2023.02.26.13.47.04.215.0 ]--
r 10         // remove ALL error listene
--[ 2023.02.26.13.47.04.344.0 ]--
r 10         // remove ALL error listener
--[ 2023.02.26.13.47.04.507.0 ]--
r 10         // remove ALL error listeners
--[ 2023.02.26.13.47.04.841.0 ]--
r 10         // remove ALL error listeners 
--[ 2023.02.26.13.47.05.215.0 ]--
r 10         // remove ALL error listeners s
--[ 2023.02.26.13.47.05.278.0 ]--
r 10         // remove ALL error listeners so
--[ 2023.02.26.13.47.05.412.0 ]--
r 10         // remove ALL error listeners so 
--[ 2023.02.26.13.47.05.575.0 ]--
r 10         // remove ALL error listeners so w
--[ 2023.02.26.13.47.05.665.0 ]--
r 10         // remove ALL error listeners so we
--[ 2023.02.26.13.47.05.756.0 ]--
r 10         // remove ALL error listeners so we 
--[ 2023.02.26.13.47.06.781.0 ]--
r 10         // remove ALL error listeners so we g
--[ 2023.02.26.13.47.06.902.0 ]--
r 10         // remove ALL error listeners so we ge
--[ 2023.02.26.13.47.06.983.0 ]--
r 10         // remove ALL error listeners so we get
--[ 2023.02.26.13.47.07.044.0 ]--
r 10         // remove ALL error listeners so we get 
--[ 2023.02.26.13.47.07.387.0 ]--
r 10         // remove ALL error listeners so we get i
--[ 2023.02.26.13.47.07.466.0 ]--
r 10         // remove ALL error listeners so we get in
--[ 2023.02.26.13.47.07.628.0 ]--
r 10         // remove ALL error listeners so we get inf
--[ 2023.02.26.13.47.07.726.0 ]--
r 10         // remove ALL error listeners so we get info
--[ 2023.02.26.13.47.07.801.0 ]--
r 10         // remove ALL error listeners so we get infor
--[ 2023.02.26.13.47.07.890.0 ]--
r 10         // remove ALL error listeners so we get inform
--[ 2023.02.26.13.47.08.213.0 ]--
r 10         // remove ALL error listeners so we get informe
--[ 2023.02.26.13.47.08.313.0 ]--
r 10         // remove ALL error listeners so we get informed
--[ 2023.02.26.13.47.36.714.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.48.07.463.0 ]--
r 3 public class ErrorHandler  {
--[ 2023.02.26.13.48.07.464.0 ]--
UpdateTree (AD): 1 0
+ /out/production/Expr/ErrorHandler.class

--[ 2023.02.26.13.48.07.621.0 ]--
r 3 public class ErrorHandler e {
--[ 2023.02.26.13.48.07.793.0 ]--
r 3 public class ErrorHandler ex {
--[ 2023.02.26.13.48.07.893.0 ]--
r 3 public class ErrorHandler ext {
--[ 2023.02.26.13.48.08.050.0 ]--
r 3 public class ErrorHandler exte {
--[ 2023.02.26.13.48.08.168.0 ]--
r 3 public class ErrorHandler exten {
--[ 2023.02.26.13.48.08.313.0 ]--
r 3 public class ErrorHandler extens {
--[ 2023.02.26.13.48.09.036.0 ]--
r 3 public class ErrorHandler exten {
--[ 2023.02.26.13.48.09.214.0 ]--
r 3 public class ErrorHandler extend {
--[ 2023.02.26.13.48.09.317.0 ]--
r 3 public class ErrorHandler extends {
--[ 2023.02.26.13.48.09.423.0 ]--
r 3 public class ErrorHandler extends  {
--[ 2023.02.26.13.48.10.142.0 ]--
r 3 public class ErrorHandler extends A {
--[ 2023.02.26.13.48.10.314.0 ]--
r 3 public class ErrorHandler extends AN {
--[ 2023.02.26.13.48.10.413.0 ]--
r 3 public class ErrorHandler extends ANT {
--[ 2023.02.26.13.48.14.761.0 ]--
r 3 public class ErrorHandler extends ANTLRErrorListener {
--[ 2023.02.26.13.48.22.385.0 ]--
r 3 public class ErrorHandler extends ANTLRErrorListenerorg.antlr.v4.runtime.ANTLRErrorListener {
--[ 2023.02.26.13.48.22.391.0 ]--
r 3 public class ErrorHandler extends ANTLRErrorListener org.antlr.v4.runtime.ANTLRErrorListener {
--[ 2023.02.26.13.48.22.398.0 ]--
r 3 public class ErrorHandler extends ANTLRErrorListener implementsorg.antlr.v4.runtime.ANTLRErrorListener {
--[ 2023.02.26.13.48.22.402.0 ]--
r 3 public class ErrorHandler extends ANTLRErrorListener implements org.antlr.v4.runtime.ANTLRErrorListener {
--[ 2023.02.26.13.48.22.416.0 ]--
r 3 public class ErrorHandler extends ANTLRErrorListener implements ANTLRErrorListener {
--[ 2023.02.26.13.48.22.422.0 ]--
r 3 public class ErrorHandler  ANTLRErrorListener implements ANTLRErrorListener {
--[ 2023.02.26.13.48.22.424.0 ]--
r 3 public class ErrorHandler ANTLRErrorListener implements ANTLRErrorListener {
--[ 2023.02.26.13.48.22.425.0 ]--
r 3 public class ErrorHandler  implements ANTLRErrorListener {
--[ 2023.02.26.13.48.22.427.0 ]--
r 3 public class ErrorHandler   implements ANTLRErrorListener {
--[ 2023.02.26.13.48.22.428.0 ]--
r 3 public class ErrorHandler  implements ANTLRErrorListener {
--[ 2023.02.26.13.48.22.430.0 ]--
r 3 public class ErrorHandler implements ANTLRErrorListener {
--[ 2023.02.26.13.48.29.091.0 ]--
+ 15 @Override
+ 16     public void syntaxError(Recognizer<?, ?> recognizer, Object o, int i, int i1, String s, RecognitionException e) {
+ 17 
r 18     }}
--[ 2023.02.26.13.48.29.139.0 ]--
+ 17 
+ 18     }@Override
+ 19     public void reportAmbiguity(Parser parser, DFA dfa, int i, int i1, boolean b, BitSet bitSet, ATNConfigSet atnConfigSet) {
--[ 2023.02.26.13.48.29.145.0 ]--
r 19     public void reportAmbiguity(Parser parser, org.antlr.v4.runtime.dfa.DFA dfa, int i, int i1, boolean b, BitSet bitSet, ATNConfigSet atnConfigSet) {
--[ 2023.02.26.13.48.29.150.0 ]--
r 1 import org.antlr.v4.runtime.*;import org.antlr.v4.runtime.dfa.DFA;
--[ 2023.02.26.13.48.29.154.0 ]--
r 19     public void reportAmbiguity(Parser parser, DFA dfa, int i, int i1, boolean b, BitSet bitSet, ATNConfigSet atnConfigSet) {
--[ 2023.02.26.13.48.29.157.0 ]--
r 19     public void reportAmbiguity(Parser parser, DFA dfa, int i, int i1, boolean b, java.util.BitSet bitSet, ATNConfigSet atnConfigSet) {
--[ 2023.02.26.13.48.29.162.0 ]--
r 1 import org.antlr.v4.runtime.*;import org.antlr.v4.runtime.dfa.DFA;import java.util.BitSet;
--[ 2023.02.26.13.48.29.166.0 ]--
r 19     public void reportAmbiguity(Parser parser, DFA dfa, int i, int i1, boolean b, BitSet bitSet, ATNConfigSet atnConfigSet) {
--[ 2023.02.26.13.48.29.170.0 ]--
r 19     public void reportAmbiguity(Parser parser, DFA dfa, int i, int i1, boolean b, BitSet bitSet, org.antlr.v4.runtime.atn.ATNConfigSet atnConfigSet) {
--[ 2023.02.26.13.48.29.175.0 ]--
r 1 import org.antlr.v4.runtime.*;import org.antlr.v4.runtime.atn.ATNConfigSet;import org.antlr.v4.runtime.dfa.DFA;import java.util.BitSet;
--[ 2023.02.26.13.48.29.178.0 ]--
r 19     public void reportAmbiguity(Parser parser, DFA dfa, int i, int i1, boolean b, BitSet bitSet, ATNConfigSet atnConfigSet) {
--[ 2023.02.26.13.48.29.208.0 ]--
+ 20 
+ 21     }@Override
+ 22     public void reportAttemptingFullContext(Parser parser, DFA dfa, int i, int i1, BitSet bitSet, ATNConfigSet atnConfigSet) {
--[ 2023.02.26.13.48.29.240.0 ]--
+ 23 
+ 24     }@Override
+ 25     public void reportContextSensitivity(Parser parser, DFA dfa, int i, int i1, int i2, ATNConfigSet atnConfigSet) {
--[ 2023.02.26.13.48.29.257.0 ]--
+ 1 import org.antlr.v4.runtime.*;
+ 2 import org.antlr.v4.runtime.atn.ATNConfigSet;
+ 3 import org.antlr.v4.runtime.dfa.DFA;
+ 4 
r 5 import java.util.BitSet;
+ 19 
r 20     @Override
+ 22 
+ 23     }
r 25     @Override
+ 27 
+ 28     }
r 30     @Override
+ 32 
+ 33     }
r 35     @Override
+ 38     }
r 39 }
--[ 2023.02.26.13.48.29.261.0 ]--
r 22         
--[ 2023.02.26.13.48.29.322.0 ]--
r 22 
--[ 2023.02.26.13.49.05.120.0 ]--
r 7 public class ErrorHandler implements B {
--[ 2023.02.26.13.49.05.355.0 ]--
r 7 public class ErrorHandler implements Ba {
--[ 2023.02.26.13.49.05.697.0 ]--
r 7 public class ErrorHandler implements Bas {
--[ 2023.02.26.13.49.05.817.0 ]--
r 7 public class ErrorHandler implements Base {
--[ 2023.02.26.13.49.07.022.0 ]--
r 7 public class ErrorHandler implements BaseE {
--[ 2023.02.26.13.49.07.260.0 ]--
r 7 public class ErrorHandler implements BaseEr {
--[ 2023.02.26.13.49.07.366.0 ]--
r 7 public class ErrorHandler implements BaseErr {
--[ 2023.02.26.13.49.08.331.0 ]--
r 7 public class ErrorHandler implements BaseErrorListener {
--[ 2023.02.26.13.49.11.837.0 ]--
r 7 public class ErrorHandler e BaseErrorListener {
--[ 2023.02.26.13.49.12.004.0 ]--
r 7 public class ErrorHandler ex BaseErrorListener {
--[ 2023.02.26.13.49.12.156.0 ]--
r 7 public class ErrorHandler ext BaseErrorListener {
--[ 2023.02.26.13.49.12.299.0 ]--
r 7 public class ErrorHandler exte BaseErrorListener {
--[ 2023.02.26.13.49.12.362.0 ]--
r 7 public class ErrorHandler exten BaseErrorListener {
--[ 2023.02.26.13.49.12.464.0 ]--
r 7 public class ErrorHandler extend BaseErrorListener {
--[ 2023.02.26.13.49.12.583.0 ]--
r 7 public class ErrorHandler extends BaseErrorListener {
--[ 2023.02.26.13.49.15.925.0 ]--
- 18
- 18
- 18
- 18
- 18
- 18
- 18
- 18
- 18
- 18
- 18
- 18
- 18
- 18
- 18
- 19
- 19
- 19
- 20
--[ 2023.02.26.13.49.16.804.0 ]--
r 19     
--[ 2023.02.26.13.49.17.568.0 ]--
- 19
--[ 2023.02.26.13.49.18.553.0 ]--
+ 19     
--[ 2023.02.26.13.49.20.352.0 ]--
r 19     @
--[ 2023.02.26.13.49.20.852.0 ]--
r 19     @O
--[ 2023.02.26.13.49.21.019.0 ]--
r 19     @Ov
--[ 2023.02.26.13.49.21.153.0 ]--
r 19     @Ove
--[ 2023.02.26.13.49.21.325.0 ]--
r 19     @Override
--[ 2023.02.26.13.49.21.800.0 ]--
+ 20     
--[ 2023.02.26.13.49.22.726.0 ]--
r 20     p
--[ 2023.02.26.13.49.22.942.0 ]--
r 20     pu
--[ 2023.02.26.13.49.23.021.0 ]--
r 20     pub
--[ 2023.02.26.13.49.23.096.0 ]--
r 20     publ
--[ 2023.02.26.13.49.23.150.0 ]--
r 20     publi
--[ 2023.02.26.13.49.23.297.0 ]--
r 20     public
--[ 2023.02.26.13.49.23.362.0 ]--
r 20     public 
--[ 2023.02.26.13.49.23.532.0 ]--
r 20     public v
--[ 2023.02.26.13.49.23.587.0 ]--
r 20     public vo
--[ 2023.02.26.13.49.23.652.0 ]--
r 20     public voi
--[ 2023.02.26.13.49.23.744.0 ]--
r 20     public void
--[ 2023.02.26.13.49.23.874.0 ]--
r 20     public void 
--[ 2023.02.26.13.49.24.560.0 ]--
r 20     public void s
--[ 2023.02.26.13.49.24.680.0 ]--
r 20     public void sy
--[ 2023.02.26.13.49.25.585.0 ]--
r 20     public void syn
--[ 2023.02.26.13.49.25.648.0 ]--
r 20     public void synt
--[ 2023.02.26.13.49.25.748.0 ]--
r 20     public void synta
--[ 2023.02.26.13.49.26.464.0 ]--
r 20     public void syntax
--[ 2023.02.26.13.49.26.824.0 ]--
r 20     public void syntaxE
--[ 2023.02.26.13.49.27.048.0 ]--
r 20     public void syntaxEr
--[ 2023.02.26.13.49.27.188.0 ]--
r 20     public void syntaxErr
--[ 2023.02.26.13.49.27.289.0 ]--
r 20     public void syntaxErro
--[ 2023.02.26.13.49.27.419.0 ]--
r 20     public void syntaxError
--[ 2023.02.26.13.49.27.743.0 ]--
r 20     public void syntaxError()
--[ 2023.02.26.13.49.38.981.0 ]--
r 20     public void syntaxError(
--[ 2023.02.26.13.49.39.616.0 ]--
+ 20     public void syntaxError(Recognizer<?, ?> recognizer, Object offendingSymbol, int line, int charPositionInLine, String msg, RecognitionException e)
+ 21       throws ParseCancellationException {
+ 22          throw new ParseCancellationException("line " + line + ":" + charPositionInLine + " " + msg);
r 23       }
--[ 2023.02.26.13.49.39.623.0 ]--
r 21             throws ParseCancellationException {
r 22         throw new ParseCancellationException("line " + line + ":" + charPositionInLine + " " + msg);
r 23     }
--[ 2023.02.26.13.49.47.130.0 ]--
- 2
- 2
- 2
- 2
--[ 2023.02.26.13.49.55.050.0 ]--
r 17             throws P {
--[ 2023.02.26.13.49.55.346.0 ]--
r 17             throws Pa {
--[ 2023.02.26.13.49.55.689.0 ]--
r 17             throws Par {
--[ 2023.02.26.13.49.55.904.0 ]--
r 17             throws Pars {
--[ 2023.02.26.13.49.56.062.0 ]--
r 17             throws Parse {
--[ 2023.02.26.13.49.57.834.0 ]--
r 17             throws ParseException {
--[ 2023.02.26.13.49.57.850.0 ]--
r 17             throws java.text.ParseException {
--[ 2023.02.26.13.49.57.861.0 ]--
r 1 import org.antlr.v4.runtime.*;import java.text.ParseException;
--[ 2023.02.26.13.49.57.866.0 ]--
r 17             throws ParseException {
--[ 2023.02.26.13.49.57.874.0 ]--
+ 1 import org.antlr.v4.runtime.*;
+ 2 
r 3 import java.text.ParseException;
--[ 2023.02.26.13.50.05.890.0 ]--
r 19             throws  {
--[ 2023.02.26.13.50.06.056.0 ]--
r 19             throws {
--[ 2023.02.26.13.50.06.225.0 ]--
r 19             throw {
--[ 2023.02.26.13.50.06.328.0 ]--
r 19             thro {
--[ 2023.02.26.13.50.06.443.0 ]--
r 19             thr {
--[ 2023.02.26.13.50.06.589.0 ]--
r 19             th {
--[ 2023.02.26.13.50.06.686.0 ]--
r 19             t {
--[ 2023.02.26.13.50.06.976.0 ]--
r 19              {
--[ 2023.02.26.13.50.11.012.0 ]--
- 18
r 18     public void syntaxError(Recognizer<?, ?> recognizer, Object offendingSymbol, int line, int charPositionInLine, String msg, RecognitionException e){
--[ 2023.02.26.13.50.11.337.0 ]--
r 18     public void syntaxError(Recognizer<?, ?> recognizer, Object offendingSymbol, int line, int charPositionInLine, String msg, RecognitionException e) {
--[ 2023.02.26.13.50.15.203.0 ]--
+ 19         
--[ 2023.02.26.13.50.16.960.0 ]--
r 19         S
--[ 2023.02.26.13.50.17.092.0 ]--
r 19         Sy
--[ 2023.02.26.13.50.17.193.0 ]--
r 19         Sys
--[ 2023.02.26.13.50.17.277.0 ]--
r 19         Syst
--[ 2023.02.26.13.50.17.376.0 ]--
r 19         Syste
--[ 2023.02.26.13.50.17.483.0 ]--
r 19         System
--[ 2023.02.26.13.50.17.574.0 ]--
r 19         System.
--[ 2023.02.26.13.50.17.835.0 ]--
r 19         System.o
--[ 2023.02.26.13.50.17.888.0 ]--
r 19         System.ou
--[ 2023.02.26.13.50.17.977.0 ]--
r 19         System.out
--[ 2023.02.26.13.50.18.098.0 ]--
r 19         System.out.
--[ 2023.02.26.13.50.18.339.0 ]--
r 19         System.out.p
--[ 2023.02.26.13.50.18.444.0 ]--
r 19         System.out.pr
--[ 2023.02.26.13.50.18.523.0 ]--
r 19         System.out.pri
--[ 2023.02.26.13.50.18.628.0 ]--
r 19         System.out.prin
--[ 2023.02.26.13.50.18.666.0 ]--
r 19         System.out.print
--[ 2023.02.26.13.50.18.932.0 ]--
r 19         System.out.printl
--[ 2023.02.26.13.50.19.110.0 ]--
r 19         System.out.println
--[ 2023.02.26.13.50.19.283.0 ]--
r 19         System.out.println()
--[ 2023.02.26.13.50.19.827.0 ]--
r 19         System.out.println('')
--[ 2023.02.26.13.50.20.364.0 ]--
r 19         System.out.println()
--[ 2023.02.26.13.50.20.526.0 ]--
r 19         System.out.println("")
--[ 2023.02.26.13.50.21.561.0 ]--
r 19         System.out.println("S")
--[ 2023.02.26.13.50.21.741.0 ]--
r 19         System.out.println("Sy")
--[ 2023.02.26.13.50.21.922.0 ]--
r 19         System.out.println("Syn")
--[ 2023.02.26.13.50.21.983.0 ]--
r 19         System.out.println("Synt")
--[ 2023.02.26.13.50.22.209.0 ]--
r 19         System.out.println("Synta")
--[ 2023.02.26.13.50.22.265.0 ]--
r 19         System.out.println("Syntax")
--[ 2023.02.26.13.50.22.427.0 ]--
r 19         System.out.println("Syntax ")
--[ 2023.02.26.13.50.23.625.0 ]--
r 19         System.out.println("Syntax E")
--[ 2023.02.26.13.50.23.943.0 ]--
r 19         System.out.println("Syntax ")
--[ 2023.02.26.13.50.24.092.0 ]--
r 19         System.out.println("Syntax e")
--[ 2023.02.26.13.50.24.201.0 ]--
r 19         System.out.println("Syntax er")
--[ 2023.02.26.13.50.24.321.0 ]--
r 19         System.out.println("Syntax err")
--[ 2023.02.26.13.50.24.403.0 ]--
r 19         System.out.println("Syntax erro")
--[ 2023.02.26.13.50.24.514.0 ]--
r 19         System.out.println("Syntax error")
--[ 2023.02.26.13.50.24.748.0 ]--
r 19         System.out.println("Syntax error ")
--[ 2023.02.26.13.50.24.917.0 ]--
r 19         System.out.println("Syntax error d")
--[ 2023.02.26.13.50.25.006.0 ]--
r 19         System.out.println("Syntax error de")
--[ 2023.02.26.13.50.25.106.0 ]--
r 19         System.out.println("Syntax error det")
--[ 2023.02.26.13.50.25.248.0 ]--
r 19         System.out.println("Syntax error detc")
--[ 2023.02.26.13.50.25.862.0 ]--
r 19         System.out.println("Syntax error det")
--[ 2023.02.26.13.50.25.972.0 ]--
r 19         System.out.println("Syntax error dete")
--[ 2023.02.26.13.50.26.074.0 ]--
r 19         System.out.println("Syntax error detec")
--[ 2023.02.26.13.50.26.222.0 ]--
r 19         System.out.println("Syntax error detect")
--[ 2023.02.26.13.50.26.316.0 ]--
r 19         System.out.println("Syntax error detecte")
--[ 2023.02.26.13.50.26.418.0 ]--
r 19         System.out.println("Syntax error detected")
--[ 2023.02.26.13.50.26.506.0 ]--
r 19         System.out.println("Syntax error detected ")
--[ 2023.02.26.13.50.26.732.0 ]--
r 19         System.out.println("Syntax error detected o")
--[ 2023.02.26.13.50.26.850.0 ]--
r 19         System.out.println("Syntax error detected on")
--[ 2023.02.26.13.50.26.891.0 ]--
r 19         System.out.println("Syntax error detected on ")
--[ 2023.02.26.13.50.27.065.0 ]--
r 19         System.out.println("Syntax error detected on l")
--[ 2023.02.26.13.50.27.123.0 ]--
r 19         System.out.println("Syntax error detected on li")
--[ 2023.02.26.13.50.27.235.0 ]--
r 19         System.out.println("Syntax error detected on lin")
--[ 2023.02.26.13.50.27.314.0 ]--
r 19         System.out.println("Syntax error detected on line")
--[ 2023.02.26.13.50.27.897.0 ]--
r 19         System.out.println("Syntax error detected on line ")
--[ 2023.02.26.13.50.28.462.0 ]--
r 19         System.out.println("Syntax error detected on line " )
--[ 2023.02.26.13.50.28.632.0 ]--
r 19         System.out.println("Syntax error detected on line " +)
--[ 2023.02.26.13.50.28.752.0 ]--
r 19         System.out.println("Syntax error detected on line " + )
--[ 2023.02.26.13.50.28.888.0 ]--
r 19         System.out.println("Syntax error detected on line " + l)
--[ 2023.02.26.13.50.29.047.0 ]--
r 19         System.out.println("Syntax error detected on line " + li)
--[ 2023.02.26.13.50.29.146.0 ]--
r 19         System.out.println("Syntax error detected on line " + lin)
--[ 2023.02.26.13.50.29.218.0 ]--
r 19         System.out.println("Syntax error detected on line " + line)
--[ 2023.02.26.13.50.30.597.0 ]--
r 19         System.out.println("Syntax error detected on line " + line )
--[ 2023.02.26.13.50.31.143.0 ]--
r 19         System.out.println("Syntax error detected on line " + line +)
--[ 2023.02.26.13.50.31.283.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + )
--[ 2023.02.26.13.50.31.787.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + "")
--[ 2023.02.26.13.50.32.330.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " ")
--[ 2023.02.26.13.50.32.533.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " a")
--[ 2023.02.26.13.50.32.827.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at")
--[ 2023.02.26.13.50.33.034.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at ")
--[ 2023.02.26.13.50.33.599.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at p")
--[ 2023.02.26.13.50.33.720.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at po")
--[ 2023.02.26.13.50.33.794.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at pos")
--[ 2023.02.26.13.50.33.891.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at posi")
--[ 2023.02.26.13.50.33.991.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at posit")
--[ 2023.02.26.13.50.34.059.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at positi")
--[ 2023.02.26.13.50.34.110.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at positio")
--[ 2023.02.26.13.50.34.178.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position")
--[ 2023.02.26.13.50.34.253.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position ")
--[ 2023.02.26.13.50.35.090.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position +")
--[ 2023.02.26.13.50.35.513.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position +)
--[ 2023.02.26.13.50.35.675.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position )
--[ 2023.02.26.13.50.35.886.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position ")
--[ 2023.02.26.13.50.36.127.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position " )
--[ 2023.02.26.13.50.37.183.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position " +)
--[ 2023.02.26.13.50.37.347.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position " + )
--[ 2023.02.26.13.50.38.612.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position " + c)
--[ 2023.02.26.13.50.38.687.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position " + ch)
--[ 2023.02.26.13.50.38.747.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position " + cha)
--[ 2023.02.26.13.50.39.008.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position " + char)
--[ 2023.02.26.13.50.40.051.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position " + charPositionInLine)
--[ 2023.02.26.13.50.41.937.0 ]--
+ 20         
--[ 2023.02.26.13.50.41.940.0 ]--
r 20                 
--[ 2023.02.26.13.50.43.290.0 ]--
r 19         System.out.println("Syntax error detected on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.50.44.177.0 ]--
r 20         
--[ 2023.02.26.13.50.44.446.0 ]--
- 20
--[ 2023.02.26.13.50.45.065.0 ]--
+ 20         
--[ 2023.02.26.13.50.45.326.0 ]--
r 20         s
--[ 2023.02.26.13.50.45.655.0 ]--
r 20         
--[ 2023.02.26.13.50.45.817.0 ]--
r 20         S
--[ 2023.02.26.13.50.45.917.0 ]--
r 20         Sp
--[ 2023.02.26.13.50.46.072.0 ]--
r 20         Sps
--[ 2023.02.26.13.50.46.141.0 ]--
r 20         Spst
--[ 2023.02.26.13.50.46.462.0 ]--
r 20         Sps
--[ 2023.02.26.13.50.46.616.0 ]--
r 20         Sp
--[ 2023.02.26.13.50.46.733.0 ]--
r 20         S
--[ 2023.02.26.13.50.46.825.0 ]--
r 20         Sy
--[ 2023.02.26.13.50.46.928.0 ]--
r 20         Sys
--[ 2023.02.26.13.50.47.008.0 ]--
r 20         Syst
--[ 2023.02.26.13.50.47.164.0 ]--
r 20         Syste
--[ 2023.02.26.13.50.47.250.0 ]--
r 20         System
--[ 2023.02.26.13.50.47.670.0 ]--
r 20         System.
--[ 2023.02.26.13.50.47.931.0 ]--
r 20         System.o
--[ 2023.02.26.13.50.47.957.0 ]--
r 20         System.ou
--[ 2023.02.26.13.50.48.075.0 ]--
r 20         System.out
--[ 2023.02.26.13.50.48.228.0 ]--
r 20         System.out.
--[ 2023.02.26.13.50.48.789.0 ]--
r 20         System.out.p
--[ 2023.02.26.13.50.48.876.0 ]--
r 20         System.out.pr
--[ 2023.02.26.13.50.48.943.0 ]--
r 20         System.out.pri
--[ 2023.02.26.13.50.49.044.0 ]--
r 20         System.out.prin
--[ 2023.02.26.13.50.49.104.0 ]--
r 20         System.out.print
--[ 2023.02.26.13.50.49.806.0 ]--
r 20         System.out.printl
--[ 2023.02.26.13.50.49.974.0 ]--
r 20         System.out.println
--[ 2023.02.26.13.50.50.124.0 ]--
r 20         System.out.println()
--[ 2023.02.26.13.50.50.511.0 ]--
r 20         System.out.println("")
--[ 2023.02.26.13.50.51.268.0 ]--
r 20         System.out.println()
--[ 2023.02.26.13.50.51.491.0 ]--
r 20         System.out.println(m)
--[ 2023.02.26.13.50.51.625.0 ]--
r 20         System.out.println(ms)
--[ 2023.02.26.13.50.51.738.0 ]--
r 20         System.out.println(msg)
--[ 2023.02.26.13.50.53.141.0 ]--
r 20         System.out.println(msg);
--[ 2023.02.26.13.50.54.236.0 ]--
- 21
--[ 2023.02.26.13.51.00.104.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.51.00.484.0 ]--
- 3
--[ 2023.02.26.13.51.01.370.0 ]--
- 2
--[ 2023.02.26.13.51.03.789.0 ]--
+ 12         
--[ 2023.02.26.13.51.03.923.0 ]--
r 12         p
--[ 2023.02.26.13.51.04.053.0 ]--
r 12         pa
--[ 2023.02.26.13.51.04.160.0 ]--
r 12         pai
--[ 2023.02.26.13.51.04.673.0 ]--
r 12         pa
--[ 2023.02.26.13.51.04.935.0 ]--
r 12         par
--[ 2023.02.26.13.51.05.158.0 ]--
r 12         pars
--[ 2023.02.26.13.51.05.316.0 ]--
r 12         parse
--[ 2023.02.26.13.51.05.441.0 ]--
r 12         parser
--[ 2023.02.26.13.51.05.647.0 ]--
r 12         parser.
--[ 2023.02.26.13.51.06.034.0 ]--
r 12         parser.a
--[ 2023.02.26.13.51.06.174.0 ]--
r 12         parser.ad
--[ 2023.02.26.13.51.06.290.0 ]--
r 12         parser.add
--[ 2023.02.26.13.51.11.888.0 ]--
r 12         parser.addErrorListener
--[ 2023.02.26.13.51.11.890.0 ]--
r 12         parser.addErrorListener()
--[ 2023.02.26.13.51.11.892.0 ]--
r 12         parser.addErrorListener();
--[ 2023.02.26.13.51.12.721.0 ]--
r 12         parser.addErrorListener(n);
--[ 2023.02.26.13.51.12.862.0 ]--
r 12         parser.addErrorListener(no);
--[ 2023.02.26.13.51.13.174.0 ]--
r 12         parser.addErrorListener(n);
--[ 2023.02.26.13.51.13.316.0 ]--
r 12         parser.addErrorListener(ne);
--[ 2023.02.26.13.51.13.418.0 ]--
r 12         parser.addErrorListener(new);
--[ 2023.02.26.13.51.13.538.0 ]--
r 12         parser.addErrorListener(new );
--[ 2023.02.26.13.51.14.134.0 ]--
r 12         parser.addErrorListener(new E);
--[ 2023.02.26.13.51.14.286.0 ]--
r 12         parser.addErrorListener(new Er);
--[ 2023.02.26.13.51.14.411.0 ]--
r 12         parser.addErrorListener(new Err);
--[ 2023.02.26.13.51.14.488.0 ]--
r 12         parser.addErrorListener(new Erro);
--[ 2023.02.26.13.51.14.672.0 ]--
r 12         parser.addErrorListener(new Error);
--[ 2023.02.26.13.51.15.258.0 ]--
r 12         parser.addErrorListener(new ErrorH);
--[ 2023.02.26.13.51.15.491.0 ]--
r 12         parser.addErrorListener(new ErrorHa);
--[ 2023.02.26.13.51.15.773.0 ]--
r 12         parser.addErrorListener(new ErrorHandler);
--[ 2023.02.26.13.51.15.792.0 ]--
r 12         parser.addErrorListener(new ErrorHandler());
--[ 2023.02.26.13.51.16.157.0 ]--
r 12         parser.addErrorListener(new ErrorHandler()());
--[ 2023.02.26.13.51.16.600.0 ]--
r 12         parser.addErrorListener(new ErrorHandler()();
--[ 2023.02.26.13.51.16.761.0 ]--
r 12         parser.addErrorListener(new ErrorHandler());
--[ 2023.02.26.13.51.19.524.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.51.22.479.0 ]--
+ 16 
--[ 2023.02.26.13.51.25.549.0 ]--
r 20         System.out.println("msg);
--[ 2023.02.26.13.51.25.734.0 ]--
r 20         System.out.println(" msg);
--[ 2023.02.26.13.51.25.865.0 ]--
r 20         System.out.println("  msg);
--[ 2023.02.26.13.51.26.704.0 ]--
r 20         System.out.println("  Mmsg);
--[ 2023.02.26.13.51.27.021.0 ]--
r 20         System.out.println("  Memsg);
--[ 2023.02.26.13.51.27.147.0 ]--
r 20         System.out.println("  Mesmsg);
--[ 2023.02.26.13.51.27.236.0 ]--
r 20         System.out.println("  Messmsg);
--[ 2023.02.26.13.51.27.381.0 ]--
r 20         System.out.println("  Messamsg);
--[ 2023.02.26.13.51.27.510.0 ]--
r 20         System.out.println("  Messagmsg);
--[ 2023.02.26.13.51.27.572.0 ]--
r 20         System.out.println("  Messagemsg);
--[ 2023.02.26.13.51.27.839.0 ]--
r 20         System.out.println("  Message:msg);
--[ 2023.02.26.13.51.28.022.0 ]--
r 20         System.out.println("  Message: msg);
--[ 2023.02.26.13.51.29.228.0 ]--
r 20         System.out.println("  Message: "msg);
--[ 2023.02.26.13.51.29.363.0 ]--
r 20         System.out.println("  Message: " msg);
--[ 2023.02.26.13.51.29.518.0 ]--
r 20         System.out.println("  Message: " +msg);
--[ 2023.02.26.13.51.29.634.0 ]--
r 20         System.out.println("  Message: " + msg);
--[ 2023.02.26.13.51.32.225.0 ]--
r 19         System.out.println("Syntax error detected" on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.32.579.0 ]--
r 19         System.out.println("Syntax error detected") on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.32.787.0 ]--
r 19         System.out.println("Syntax error detected"); on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.33.038.0 ]--
+ 19         System.out.println("Syntax error detected");
r 20         on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.33.361.0 ]--
r 20         Son line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.33.485.0 ]--
r 20         Syon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.33.586.0 ]--
r 20         Syson line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.33.666.0 ]--
r 20         Syston line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.33.770.0 ]--
r 20         Systeon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.33.867.0 ]--
r 20         Systemon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.34.164.0 ]--
r 20         System.on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.34.356.0 ]--
r 20         System.oon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.34.432.0 ]--
r 20         System.ouon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.34.549.0 ]--
r 20         System.outon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.34.910.0 ]--
r 20         System.out.on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.35.099.0 ]--
r 20         System.out.pon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.35.140.0 ]--
r 20         System.out.pron line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.35.279.0 ]--
r 20         System.out.prion line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.35.366.0 ]--
r 20         System.out.prinon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.35.408.0 ]--
r 20         System.out.printon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.35.612.0 ]--
r 20         System.out.printlon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.35.765.0 ]--
r 20         System.out.printlnon line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.35.974.0 ]--
r 20         System.out.println(on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.36.327.0 ]--
r 20         System.out.println("on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.36.670.0 ]--
r 20         System.out.println(" on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.36.765.0 ]--
r 20         System.out.println("  on line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.37.521.0 ]--
r 20         System.out.println("  n line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.37.639.0 ]--
r 20         System.out.println("   line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.37.783.0 ]--
r 20         System.out.println("  line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.38.095.0 ]--
r 20         System.out.println("  ine " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.38.404.0 ]--
r 20         System.out.println("  Line " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.42.679.0 ]--
r 20         System.out.println("  L " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.42.781.0 ]--
r 20         System.out.println("  Lo " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.42.901.0 ]--
r 20         System.out.println("  Loc " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.42.921.0 ]--
r 20         System.out.println("  Loca " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.43.072.0 ]--
r 20         System.out.println("  Locat " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.43.112.0 ]--
r 20         System.out.println("  Locati " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.43.172.0 ]--
r 20         System.out.println("  Locatio " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.43.231.0 ]--
r 20         System.out.println("  Location " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.44.189.0 ]--
r 20         System.out.println("  Location: " + line + " at position " + charPositionInLine);
--[ 2023.02.26.13.51.46.807.0 ]--
r 20         System.out.println("  Location: " + line + ":" + charPositionInLine);
--[ 2023.02.26.13.51.51.915.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.52.07.343.0 ]--
r 10         // remove ALL error listeners t
--[ 2023.02.26.13.52.07.365.0 ]--
r 10         // remove ALL error listeners to
--[ 2023.02.26.13.52.07.479.0 ]--
r 10         // remove ALL error listeners to 
--[ 2023.02.26.13.52.07.662.0 ]--
r 10         // remove ALL error listeners to p
--[ 2023.02.26.13.52.07.729.0 ]--
r 10         // remove ALL error listeners to pr
--[ 2023.02.26.13.52.07.864.0 ]--
r 10         // remove ALL error listeners to pre
--[ 2023.02.26.13.52.07.989.0 ]--
r 10         // remove ALL error listeners to prev
--[ 2023.02.26.13.52.08.054.0 ]--
r 10         // remove ALL error listeners to preve
--[ 2023.02.26.13.52.08.165.0 ]--
r 10         // remove ALL error listeners to preven
--[ 2023.02.26.13.52.08.187.0 ]--
r 10         // remove ALL error listeners to prevent
--[ 2023.02.26.13.52.08.324.0 ]--
r 10         // remove ALL error listeners to prevent 
--[ 2023.02.26.13.52.08.778.0 ]--
r 10         // remove ALL error listeners to prevent c
--[ 2023.02.26.13.52.08.857.0 ]--
r 10         // remove ALL error listeners to prevent cl
--[ 2023.02.26.13.52.09.121.0 ]--
r 10         // remove ALL error listeners to prevent clu
--[ 2023.02.26.13.52.09.460.0 ]--
r 10         // remove ALL error listeners to prevent clut
--[ 2023.02.26.13.52.09.563.0 ]--
r 10         // remove ALL error listeners to prevent clutt
--[ 2023.02.26.13.52.09.655.0 ]--
r 10         // remove ALL error listeners to prevent clutte
--[ 2023.02.26.13.52.09.727.0 ]--
r 10         // remove ALL error listeners to prevent clutter
--[ 2023.02.26.13.52.09.845.0 ]--
r 10         // remove ALL error listeners to prevent clutteri
--[ 2023.02.26.13.52.09.905.0 ]--
r 10         // remove ALL error listeners to prevent clutterin
--[ 2023.02.26.13.52.09.954.0 ]--
r 10         // remove ALL error listeners to prevent cluttering
--[ 2023.02.26.13.52.11.052.0 ]--
r 10         // remove ALL error listeners to prevent cluttering 
--[ 2023.02.26.13.52.11.833.0 ]--
r 10         // remove ALL error listeners to prevent cluttering s
--[ 2023.02.26.13.52.11.888.0 ]--
r 10         // remove ALL error listeners to prevent cluttering st
--[ 2023.02.26.13.52.12.074.0 ]--
r 10         // remove ALL error listeners to prevent cluttering std
--[ 2023.02.26.13.52.12.409.0 ]--
r 10         // remove ALL error listeners to prevent cluttering stde
--[ 2023.02.26.13.52.12.509.0 ]--
r 10         // remove ALL error listeners to prevent cluttering stder
--[ 2023.02.26.13.52.12.657.0 ]--
r 10         // remove ALL error listeners to prevent cluttering stderr
--[ 2023.02.26.13.52.16.922.0 ]--
r 10         // remove ALL error listeners to prevent cluttering sstderr
--[ 2023.02.26.13.52.17.001.0 ]--
r 10         // remove ALL error listeners to prevent cluttering ststderr
--[ 2023.02.26.13.52.17.170.0 ]--
r 10         // remove ALL error listeners to prevent cluttering stdstderr
--[ 2023.02.26.13.52.17.418.0 ]--
r 10         // remove ALL error listeners to prevent cluttering stdostderr
--[ 2023.02.26.13.52.17.461.0 ]--
r 10         // remove ALL error listeners to prevent cluttering stdoustderr
--[ 2023.02.26.13.52.17.543.0 ]--
r 10         // remove ALL error listeners to prevent cluttering stdoutstderr
--[ 2023.02.26.13.52.17.714.0 ]--
r 10         // remove ALL error listeners to prevent cluttering stdout/stderr
--[ 2023.02.26.13.52.19.825.0 ]--
+ 12         
--[ 2023.02.26.13.52.20.152.0 ]--
r 12         /
--[ 2023.02.26.13.52.20.293.0 ]--
r 12         //
--[ 2023.02.26.13.52.20.401.0 ]--
r 12         // 
--[ 2023.02.26.13.52.21.022.0 ]--
r 12         // a
--[ 2023.02.26.13.52.21.291.0 ]--
r 12         // ad
--[ 2023.02.26.13.52.21.433.0 ]--
r 12         // add
--[ 2023.02.26.13.52.21.541.0 ]--
r 12         // add 
--[ 2023.02.26.13.52.21.873.0 ]--
r 12         // add o
--[ 2023.02.26.13.52.21.954.0 ]--
r 12         // add ou
--[ 2023.02.26.13.52.22.348.0 ]--
r 12         // add our
--[ 2023.02.26.13.52.22.528.0 ]--
r 12         // add ours
--[ 2023.02.26.13.52.22.609.0 ]--
r 12         // add ourse
--[ 2023.02.26.13.52.22.704.0 ]--
r 12         // add oursel
--[ 2023.02.26.13.52.22.811.0 ]--
r 12         // add ourself
--[ 2023.02.26.13.52.23.149.0 ]--
r 12         // add ourself 
--[ 2023.02.26.13.52.24.692.0 ]--
r 12         // add ourself a
--[ 2023.02.26.13.52.24.816.0 ]--
r 12         // add ourself as
--[ 2023.02.26.13.52.24.926.0 ]--
r 12         // add ourself as 
--[ 2023.02.26.13.52.24.993.0 ]--
r 12         // add ourself as a
--[ 2023.02.26.13.52.25.090.0 ]--
r 12         // add ourself as a 
--[ 2023.02.26.13.52.26.225.0 ]--
r 12         // add ourself as a l
--[ 2023.02.26.13.52.26.526.0 ]--
r 12         // add ourself as a 
--[ 2023.02.26.13.52.26.761.0 ]--
r 12         // add ourself as a e
--[ 2023.02.26.13.52.26.849.0 ]--
r 12         // add ourself as a er
--[ 2023.02.26.13.52.26.962.0 ]--
r 12         // add ourself as a err
--[ 2023.02.26.13.52.27.022.0 ]--
r 12         // add ourself as a erro
--[ 2023.02.26.13.52.27.143.0 ]--
r 12         // add ourself as a error
--[ 2023.02.26.13.52.27.332.0 ]--
r 12         // add ourself as a error 
--[ 2023.02.26.13.52.27.871.0 ]--
r 12         // add ourself as a error l
--[ 2023.02.26.13.52.27.924.0 ]--
r 12         // add ourself as a error li
--[ 2023.02.26.13.52.28.091.0 ]--
r 12         // add ourself as a error lis
--[ 2023.02.26.13.52.28.164.0 ]--
r 12         // add ourself as a error list
--[ 2023.02.26.13.52.28.304.0 ]--
r 12         // add ourself as a error liste
--[ 2023.02.26.13.52.28.554.0 ]--
r 12         // add ourself as a error listen
--[ 2023.02.26.13.52.28.715.0 ]--
r 12         // add ourself as a error listene
--[ 2023.02.26.13.52.28.854.0 ]--
r 12         // add ourself as a error listener
--[ 2023.02.26.13.52.38.890.0 ]--
r 12         // add u as a error listener
--[ 2023.02.26.13.52.39.006.0 ]--
r 12         // add us as a error listener
--[ 2023.02.26.13.52.39.933.0 ]--
r 12         // add u as a error listener
--[ 2023.02.26.13.52.40.072.0 ]--
r 12         // add  as a error listener
--[ 2023.02.26.13.52.40.272.0 ]--
r 12         // add t as a error listener
--[ 2023.02.26.13.52.40.312.0 ]--
r 12         // add th as a error listener
--[ 2023.02.26.13.52.40.377.0 ]--
r 12         // add thi as a error listener
--[ 2023.02.26.13.52.40.449.0 ]--
r 12         // add this as a error listener
--[ 2023.02.26.13.52.40.539.0 ]--
r 12         // add this  as a error listener
--[ 2023.02.26.13.52.41.147.0 ]--
r 12         // add this as a error listener
--[ 2023.02.26.13.52.41.285.0 ]--
r 12         // add thi as a error listener
--[ 2023.02.26.13.52.41.424.0 ]--
r 12         // add th as a error listener
--[ 2023.02.26.13.52.41.535.0 ]--
r 12         // add t as a error listener
--[ 2023.02.26.13.52.41.938.0 ]--
r 12         // add  as a error listener
--[ 2023.02.26.13.52.42.069.0 ]--
r 12         // add a as a error listener
--[ 2023.02.26.13.52.42.171.0 ]--
r 12         // add an as a error listener
--[ 2023.02.26.13.52.42.264.0 ]--
r 12         // add an  as a error listener
--[ 2023.02.26.13.52.42.613.0 ]--
r 12         // add an i as a error listener
--[ 2023.02.26.13.52.42.698.0 ]--
r 12         // add an in as a error listener
--[ 2023.02.26.13.52.42.875.0 ]--
r 12         // add an ins as a error listener
--[ 2023.02.26.13.52.42.923.0 ]--
r 12         // add an inst as a error listener
--[ 2023.02.26.13.52.43.008.0 ]--
r 12         // add an insta as a error listener
--[ 2023.02.26.13.52.43.117.0 ]--
r 12         // add an instan as a error listener
--[ 2023.02.26.13.52.43.171.0 ]--
r 12         // add an instanc as a error listener
--[ 2023.02.26.13.52.43.253.0 ]--
r 12         // add an instance as a error listener
--[ 2023.02.26.13.52.43.368.0 ]--
r 12         // add an instance  as a error listener
--[ 2023.02.26.13.52.43.530.0 ]--
r 12         // add an instance o as a error listener
--[ 2023.02.26.13.52.43.661.0 ]--
r 12         // add an instance of as a error listener
--[ 2023.02.26.13.52.43.725.0 ]--
r 12         // add an instance of  as a error listener
--[ 2023.02.26.13.52.43.971.0 ]--
r 12         // add an instance of t as a error listener
--[ 2023.02.26.13.52.44.024.0 ]--
r 12         // add an instance of th as a error listener
--[ 2023.02.26.13.52.44.081.0 ]--
r 12         // add an instance of thi as a error listener
--[ 2023.02.26.13.52.44.141.0 ]--
r 12         // add an instance of this as a error listener
--[ 2023.02.26.13.52.44.234.0 ]--
r 12         // add an instance of this  as a error listener
--[ 2023.02.26.13.52.44.590.0 ]--
r 12         // add an instance of this c as a error listener
--[ 2023.02.26.13.52.44.682.0 ]--
r 12         // add an instance of this cl as a error listener
--[ 2023.02.26.13.52.44.715.0 ]--
r 12         // add an instance of this cla as a error listener
--[ 2023.02.26.13.52.44.931.0 ]--
r 12         // add an instance of this clas as a error listener
--[ 2023.02.26.13.52.45.015.0 ]--
r 12         // add an instance of this class as a error listener
--[ 2023.02.26.13.52.52.485.0 ]--
+ 4     
--[ 2023.02.26.13.53.11.340.0 ]--
+ 14         
--[ 2023.02.26.13.53.12.734.0 ]--
r 14         h
--[ 2023.02.26.13.53.12.823.0 ]--
r 14         ha
--[ 2023.02.26.13.53.12.904.0 ]--
r 14         han
--[ 2023.02.26.13.53.12.962.0 ]--
r 14         hand
--[ 2023.02.26.13.53.13.022.0 ]--
r 14         handl
--[ 2023.02.26.13.53.13.124.0 ]--
r 14         handle
--[ 2023.02.26.13.53.13.264.0 ]--
r 14         handler
--[ 2023.02.26.13.53.13.440.0 ]--
r 14         handler 
--[ 2023.02.26.13.53.13.639.0 ]--
r 14         handler =
--[ 2023.02.26.13.53.14.948.0 ]--
r 14         Ehandler =
--[ 2023.02.26.13.53.15.120.0 ]--
r 14         Erhandler =
--[ 2023.02.26.13.53.15.244.0 ]--
r 14         Errhandler =
--[ 2023.02.26.13.53.15.287.0 ]--
r 14         Errohandler =
--[ 2023.02.26.13.53.15.446.0 ]--
r 14         Errorhandler =
--[ 2023.02.26.13.53.15.610.0 ]--
r 14         ErrorHhandler =
--[ 2023.02.26.13.53.15.723.0 ]--
r 14         ErrorHahandler =
--[ 2023.02.26.13.53.15.763.0 ]--
r 14         ErrorHanhandler =
--[ 2023.02.26.13.53.15.845.0 ]--
r 14         ErrorHandhandler =
--[ 2023.02.26.13.53.15.955.0 ]--
r 14         ErrorHandlhandler =
--[ 2023.02.26.13.53.16.015.0 ]--
r 14         ErrorHandlehandler =
--[ 2023.02.26.13.53.16.166.0 ]--
r 14         ErrorHandlerhandler =
--[ 2023.02.26.13.53.16.257.0 ]--
r 14         ErrorHandler handler =
--[ 2023.02.26.13.53.16.943.0 ]--
r 14         ErrorHandler handler = 
--[ 2023.02.26.13.53.17.112.0 ]--
r 14         ErrorHandler handler = n
--[ 2023.02.26.13.53.17.233.0 ]--
r 14         ErrorHandler handler = ne
--[ 2023.02.26.13.53.17.327.0 ]--
r 14         ErrorHandler handler = new
--[ 2023.02.26.13.53.17.388.0 ]--
r 14         ErrorHandler handler = new 
--[ 2023.02.26.13.53.17.607.0 ]--
r 14         ErrorHandler handler = new E
--[ 2023.02.26.13.53.17.717.0 ]--
r 14         ErrorHandler handler = new Er
--[ 2023.02.26.13.53.17.840.0 ]--
r 14         ErrorHandler handler = new Err
--[ 2023.02.26.13.53.18.457.0 ]--
r 14         ErrorHandler handler = new ErrorHandler
--[ 2023.02.26.13.53.18.466.0 ]--
r 14         ErrorHandler handler = new ErrorHandler()
--[ 2023.02.26.13.53.19.219.0 ]--
r 14         ErrorHandler handler = new ErrorHandler();
--[ 2023.02.26.13.53.21.839.0 ]--
r 15         parser.addErrorListener(h);
--[ 2023.02.26.13.53.21.928.0 ]--
r 15         parser.addErrorListener(ha);
--[ 2023.02.26.13.53.21.988.0 ]--
r 15         parser.addErrorListener(han);
--[ 2023.02.26.13.53.22.068.0 ]--
r 15         parser.addErrorListener(hand);
--[ 2023.02.26.13.53.22.185.0 ]--
r 15         parser.addErrorListener(handl);
--[ 2023.02.26.13.53.22.348.0 ]--
r 15         parser.addErrorListener(handle);
--[ 2023.02.26.13.53.22.472.0 ]--
r 15         parser.addErrorListener(handler);
--[ 2023.02.26.13.53.31.849.0 ]--
r 4     p
--[ 2023.02.26.13.53.32.058.0 ]--
r 4     pu
--[ 2023.02.26.13.53.32.124.0 ]--
r 4     pub
--[ 2023.02.26.13.53.32.144.0 ]--
r 4     publ
--[ 2023.02.26.13.53.32.266.0 ]--
r 4     publi
--[ 2023.02.26.13.53.32.363.0 ]--
r 4     public
--[ 2023.02.26.13.53.32.428.0 ]--
r 4     public 
--[ 2023.02.26.13.53.34.812.0 ]--
r 4     public l
--[ 2023.02.26.13.53.34.950.0 ]--
r 4     public li
--[ 2023.02.26.13.53.35.023.0 ]--
r 4     public lis
--[ 2023.02.26.13.53.35.083.0 ]--
r 4     public list
--[ 2023.02.26.13.53.35.804.0 ]--
r 4     public lis
--[ 2023.02.26.13.53.35.951.0 ]--
r 4     public li
--[ 2023.02.26.13.53.36.107.0 ]--
r 4     public l
--[ 2023.02.26.13.53.36.242.0 ]--
r 4     public 
--[ 2023.02.26.13.53.36.473.0 ]--
r 4     public L
--[ 2023.02.26.13.53.36.637.0 ]--
r 4     public Li
--[ 2023.02.26.13.53.36.738.0 ]--
r 4     public Lis
--[ 2023.02.26.13.53.36.758.0 ]--
r 4     public List
--[ 2023.02.26.13.53.42.692.0 ]--
r 4     public L
--[ 2023.02.26.13.53.42.928.0 ]--
r 4     public Li
--[ 2023.02.26.13.53.43.178.0 ]--
r 4     public Lin
--[ 2023.02.26.13.53.43.309.0 ]--
r 4     public Link
--[ 2023.02.26.13.53.43.863.0 ]--
r 4     public Linke
--[ 2023.02.26.13.53.44.045.0 ]--
r 4     public Linked
--[ 2023.02.26.13.53.45.856.0 ]--
r 4     public LinkedList
--[ 2023.02.26.13.53.45.873.0 ]--
r 4     public java.util.LinkedList
--[ 2023.02.26.13.53.45.885.0 ]--
r 1 import org.antlr.v4.runtime.*;import java.util.LinkedList;
--[ 2023.02.26.13.53.45.892.0 ]--
r 4     public LinkedList
--[ 2023.02.26.13.53.45.899.0 ]--
+ 1 import org.antlr.v4.runtime.*;
+ 2 
r 3 import java.util.LinkedList;
--[ 2023.02.26.13.53.46.529.0 ]--
r 6     public LinkedList<>
--[ 2023.02.26.13.53.47.444.0 ]--
r 6     public LinkedList<I>
--[ 2023.02.26.13.53.47.581.0 ]--
r 6     public LinkedList<In>
--[ 2023.02.26.13.53.47.637.0 ]--
r 6     public LinkedList<Int>
--[ 2023.02.26.13.53.47.738.0 ]--
r 6     public LinkedList<Inte>
--[ 2023.02.26.13.53.47.900.0 ]--
r 6     public LinkedList<Integ>
--[ 2023.02.26.13.53.47.959.0 ]--
r 6     public LinkedList<Intege>
--[ 2023.02.26.13.53.48.039.0 ]--
r 6     public LinkedList<Integer>
--[ 2023.02.26.13.53.48.837.0 ]--
r 6     public LinkedList<Integer> 
--[ 2023.02.26.13.53.50.529.0 ]--
r 6     public LinkedList<Integer> e
--[ 2023.02.26.13.53.50.646.0 ]--
r 6     public LinkedList<Integer> er
--[ 2023.02.26.13.53.50.787.0 ]--
r 6     public LinkedList<Integer> err
--[ 2023.02.26.13.53.50.868.0 ]--
r 6     public LinkedList<Integer> erro
--[ 2023.02.26.13.53.50.989.0 ]--
r 6     public LinkedList<Integer> error
--[ 2023.02.26.13.53.52.630.0 ]--
r 6     public LinkedList<Integer> errorl
--[ 2023.02.26.13.53.52.693.0 ]--
r 6     public LinkedList<Integer> errorli
--[ 2023.02.26.13.53.52.819.0 ]--
r 6     public LinkedList<Integer> errorlin
--[ 2023.02.26.13.53.52.903.0 ]--
r 6     public LinkedList<Integer> errorline
--[ 2023.02.26.13.53.53.003.0 ]--
r 6     public LinkedList<Integer> errorlines
--[ 2023.02.26.13.53.55.927.0 ]--
r 6     public LinkedList<Integer> errorlines;
--[ 2023.02.26.13.53.57.129.0 ]--
+ 7 
--[ 2023.02.26.13.54.00.179.0 ]--
r 6     public H<Integer> errorlines;
--[ 2023.02.26.13.54.00.435.0 ]--
r 6     public Ha<Integer> errorlines;
--[ 2023.02.26.13.54.00.761.0 ]--
r 6     public Has<Integer> errorlines;
--[ 2023.02.26.13.54.01.831.0 ]--
r 6     public HashSet<Integer> errorlines;
--[ 2023.02.26.13.54.01.853.0 ]--
r 6     public java.util.HashSet<Integer> errorlines;
--[ 2023.02.26.13.54.01.864.0 ]--
r 3 import java.util.HashSet;import java.util.LinkedList;
--[ 2023.02.26.13.54.01.869.0 ]--
r 6     public HashSet<Integer> errorlines;
--[ 2023.02.26.13.54.01.876.0 ]--
+ 3 import java.util.HashSet;
r 4 import java.util.LinkedList;
--[ 2023.02.26.13.54.03.451.0 ]--
r 7     public HashSet<Integer> errorlines ;
--[ 2023.02.26.13.54.03.608.0 ]--
r 7     public HashSet<Integer> errorlines =;
--[ 2023.02.26.13.54.03.694.0 ]--
r 7     public HashSet<Integer> errorlines = ;
--[ 2023.02.26.13.54.03.919.0 ]--
r 7     public HashSet<Integer> errorlines = n;
--[ 2023.02.26.13.54.04.026.0 ]--
r 7     public HashSet<Integer> errorlines = ne;
--[ 2023.02.26.13.54.04.159.0 ]--
r 7     public HashSet<Integer> errorlines = new;
--[ 2023.02.26.13.54.04.213.0 ]--
r 7     public HashSet<Integer> errorlines = new ;
--[ 2023.02.26.13.54.04.799.0 ]--
r 7     public HashSet<Integer> errorlines = new H;
--[ 2023.02.26.13.54.04.944.0 ]--
r 7     public HashSet<Integer> errorlines = new Ho;
--[ 2023.02.26.13.54.05.322.0 ]--
r 7     public HashSet<Integer> errorlines = new H;
--[ 2023.02.26.13.54.05.403.0 ]--
r 7     public HashSet<Integer> errorlines = new Ha;
--[ 2023.02.26.13.54.05.536.0 ]--
r 7     public HashSet<Integer> errorlines = new Has;
--[ 2023.02.26.13.54.05.576.0 ]--
r 7     public HashSet<Integer> errorlines = new Hash;
--[ 2023.02.26.13.54.06.266.0 ]--
r 7     public HashSet<Integer> errorlines = new HashSet;
--[ 2023.02.26.13.54.06.285.0 ]--
r 7     public HashSet<Integer> errorlines = new HashSet<>;
--[ 2023.02.26.13.54.06.290.0 ]--
r 7     public HashSet<Integer> errorlines = new HashSet<>();
--[ 2023.02.26.13.54.10.378.0 ]--
+ 26         
--[ 2023.02.26.13.54.11.934.0 ]--
r 26         e
--[ 2023.02.26.13.54.12.071.0 ]--
r 26         er
--[ 2023.02.26.13.54.12.163.0 ]--
r 26         err
--[ 2023.02.26.13.54.12.194.0 ]--
r 26         erro
--[ 2023.02.26.13.54.12.314.0 ]--
r 26         error
--[ 2023.02.26.13.54.12.548.0 ]--
r 26         errorl
--[ 2023.02.26.13.54.12.576.0 ]--
r 26         errorli
--[ 2023.02.26.13.54.12.695.0 ]--
r 26         errorlin
--[ 2023.02.26.13.54.12.746.0 ]--
r 26         errorline
--[ 2023.02.26.13.54.12.876.0 ]--
r 26         errorlines
--[ 2023.02.26.13.54.13.170.0 ]--
r 26         errorlines.
--[ 2023.02.26.13.54.14.366.0 ]--
r 26         errorlines.add
--[ 2023.02.26.13.54.14.377.0 ]--
r 26         errorlines.add()
--[ 2023.02.26.13.54.16.118.0 ]--
r 26         errorlines.add(l)
--[ 2023.02.26.13.54.16.182.0 ]--
r 26         errorlines.add(li)
--[ 2023.02.26.13.54.16.263.0 ]--
r 26         errorlines.add(lin)
--[ 2023.02.26.13.54.16.341.0 ]--
r 26         errorlines.add(line)
--[ 2023.02.26.13.54.17.060.0 ]--
r 26         errorlines.add(line);
--[ 2023.02.26.13.54.19.730.0 ]--
+ 27         
--[ 2023.02.26.13.54.46.948.0 ]--
+ 7     
--[ 2023.02.26.13.54.47.426.0 ]--
r 7     p
--[ 2023.02.26.13.54.47.727.0 ]--
r 7     
--[ 2023.02.26.13.54.48.692.0 ]--
r 8     p HashSet<Integer> errorlines = new HashSet<>();
--[ 2023.02.26.13.54.48.838.0 ]--
r 8     pr HashSet<Integer> errorlines = new HashSet<>();
--[ 2023.02.26.13.54.48.931.0 ]--
r 8     pri HashSet<Integer> errorlines = new HashSet<>();
--[ 2023.02.26.13.54.48.986.0 ]--
r 8     priv HashSet<Integer> errorlines = new HashSet<>();
--[ 2023.02.26.13.54.49.099.0 ]--
r 8     priva HashSet<Integer> errorlines = new HashSet<>();
--[ 2023.02.26.13.54.49.181.0 ]--
r 8     privat HashSet<Integer> errorlines = new HashSet<>();
--[ 2023.02.26.13.54.49.300.0 ]--
r 8     private HashSet<Integer> errorlines = new HashSet<>();
--[ 2023.02.26.13.54.56.714.0 ]--
r 7     p
--[ 2023.02.26.13.54.56.764.0 ]--
r 7     pr
--[ 2023.02.26.13.54.56.898.0 ]--
r 7     pri
--[ 2023.02.26.13.54.56.985.0 ]--
r 7     priv
--[ 2023.02.26.13.54.57.108.0 ]--
r 7     priva
--[ 2023.02.26.13.54.57.263.0 ]--
r 7     privat
--[ 2023.02.26.13.54.57.369.0 ]--
r 7     private
--[ 2023.02.26.13.54.57.471.0 ]--
r 7     private 
--[ 2023.02.26.13.54.57.630.0 ]--
r 7     private s
--[ 2023.02.26.13.54.57.700.0 ]--
r 7     private st
--[ 2023.02.26.13.54.57.733.0 ]--
r 7     private sta
--[ 2023.02.26.13.54.57.873.0 ]--
r 7     private stat
--[ 2023.02.26.13.54.57.974.0 ]--
r 7     private stati
--[ 2023.02.26.13.54.58.074.0 ]--
r 7     private static
--[ 2023.02.26.13.54.58.205.0 ]--
r 7     private static 
--[ 2023.02.26.13.54.59.561.0 ]--
r 7     private static b
--[ 2023.02.26.13.54.59.626.0 ]--
r 7     private static bo
--[ 2023.02.26.13.54.59.765.0 ]--
r 7     private static boo
--[ 2023.02.26.13.54.59.824.0 ]--
r 7     private static bool
--[ 2023.02.26.13.54.59.951.0 ]--
r 7     private static bool 
--[ 2023.02.26.13.55.00.504.0 ]--
r 7     private static bool
--[ 2023.02.26.13.55.00.620.0 ]--
r 7     private static boo
--[ 2023.02.26.13.55.00.715.0 ]--
r 7     private static booe
--[ 2023.02.26.13.55.00.805.0 ]--
r 7     private static booea
--[ 2023.02.26.13.55.00.854.0 ]--
r 7     private static booean
--[ 2023.02.26.13.55.00.978.0 ]--
r 7     private static booean 
--[ 2023.02.26.13.55.01.416.0 ]--
r 7     private static booean
--[ 2023.02.26.13.55.01.558.0 ]--
r 7     private static booea
--[ 2023.02.26.13.55.01.698.0 ]--
r 7     private static booe
--[ 2023.02.26.13.55.01.827.0 ]--
r 7     private static boo
--[ 2023.02.26.13.55.02.055.0 ]--
r 7     private static bool
--[ 2023.02.26.13.55.02.088.0 ]--
r 7     private static boole
--[ 2023.02.26.13.55.02.154.0 ]--
r 7     private static boolea
--[ 2023.02.26.13.55.02.244.0 ]--
r 7     private static boolean
--[ 2023.02.26.13.55.02.491.0 ]--
r 7     private static boolean 
--[ 2023.02.26.13.55.03.807.0 ]--
r 7     private static boolean r
--[ 2023.02.26.13.55.03.848.0 ]--
r 7     private static boolean re
--[ 2023.02.26.13.55.04.006.0 ]--
r 7     private static boolean rep
--[ 2023.02.26.13.55.04.109.0 ]--
r 7     private static boolean repo
--[ 2023.02.26.13.55.04.184.0 ]--
r 7     private static boolean repor
--[ 2023.02.26.13.55.04.224.0 ]--
r 7     private static boolean report
--[ 2023.02.26.13.55.04.330.0 ]--
r 7     private static boolean report 
--[ 2023.02.26.13.55.04.471.0 ]--
r 7     private static boolean report =
--[ 2023.02.26.13.55.04.538.0 ]--
r 7     private static boolean report = 
--[ 2023.02.26.13.55.04.661.0 ]--
r 7     private static boolean report = f
--[ 2023.02.26.13.55.04.848.0 ]--
r 7     private static boolean report = fa
--[ 2023.02.26.13.55.04.907.0 ]--
r 7     private static boolean report = fal
--[ 2023.02.26.13.55.05.058.0 ]--
r 7     private static boolean report = fals
--[ 2023.02.26.13.55.05.107.0 ]--
r 7     private static boolean report = false
--[ 2023.02.26.13.55.05.264.0 ]--
r 7     private static boolean report = false;
--[ 2023.02.26.13.55.07.160.0 ]--
r 28         i
--[ 2023.02.26.13.55.07.263.0 ]--
r 28         if
--[ 2023.02.26.13.55.07.381.0 ]--
r 28         if 
--[ 2023.02.26.13.55.07.718.0 ]--
r 28         if
--[ 2023.02.26.13.55.07.900.0 ]--
r 28         if()
--[ 2023.02.26.13.55.08.084.0 ]--
r 28         if(r)
--[ 2023.02.26.13.55.08.171.0 ]--
r 28         if(re)
--[ 2023.02.26.13.55.08.321.0 ]--
r 28         if(rep)
--[ 2023.02.26.13.55.08.447.0 ]--
r 28         if(repo)
--[ 2023.02.26.13.55.08.500.0 ]--
r 28         if(repor)
--[ 2023.02.26.13.55.08.534.0 ]--
r 28         if(report)
--[ 2023.02.26.13.55.08.883.0 ]--
r 28         if(report) 
--[ 2023.02.26.13.55.09.026.0 ]--
r 28         if(report) {
--[ 2023.02.26.13.55.10.382.0 ]--
+ 32         
--[ 2023.02.26.13.55.10.632.0 ]--
r 32         }
--[ 2023.02.26.13.55.10.650.0 ]--
r 29             System.out.println("Syntax error detected");
--[ 2023.02.26.13.55.10.653.0 ]--
r 30             System.out.println("  Location: " + line + ":" + charPositionInLine);
--[ 2023.02.26.13.55.10.655.0 ]--
r 31             System.out.println("  Message: " + msg);
--[ 2023.02.26.13.55.15.646.0 ]--
r 7     private f boolean report = false;
--[ 2023.02.26.13.55.15.701.0 ]--
r 7     private fi boolean report = false;
--[ 2023.02.26.13.55.15.782.0 ]--
r 7     private fin boolean report = false;
--[ 2023.02.26.13.55.15.883.0 ]--
r 7     private fina boolean report = false;
--[ 2023.02.26.13.55.15.964.0 ]--
r 7     private final boolean report = false;
--[ 2023.02.26.13.55.23.363.0 ]--
+ 23         
--[ 2023.02.26.13.55.26.852.0 ]--
+ 23         
--[ 2023.02.26.13.55.29.865.0 ]--
r 24         f
--[ 2023.02.26.13.55.29.947.0 ]--
r 24         fo
--[ 2023.02.26.13.55.30.043.0 ]--
r 24         for
--[ 2023.02.26.13.55.30.605.0 ]--
r 24         for()
--[ 2023.02.26.13.55.33.259.0 ]--
r 24         for(I)
--[ 2023.02.26.13.55.33.369.0 ]--
r 24         for(In)
--[ 2023.02.26.13.55.33.408.0 ]--
r 24         for(Int)
--[ 2023.02.26.13.55.33.525.0 ]--
r 24         for(Inte)
--[ 2023.02.26.13.55.33.718.0 ]--
r 24         for(Integ)
--[ 2023.02.26.13.55.33.813.0 ]--
r 24         for(Intege)
--[ 2023.02.26.13.55.33.895.0 ]--
r 24         for(Integer)
--[ 2023.02.26.13.55.34.053.0 ]--
r 24         for(Integer )
--[ 2023.02.26.13.55.35.302.0 ]--
r 24         for(Integer i)
--[ 2023.02.26.13.55.35.428.0 ]--
r 24         for(Integer i )
--[ 2023.02.26.13.55.36.541.0 ]--
r 24         for(Integer i)
--[ 2023.02.26.13.55.36.682.0 ]--
r 24         for(Integer )
--[ 2023.02.26.13.55.36.937.0 ]--
r 24         for(Integer li)
--[ 2023.02.26.13.55.37.059.0 ]--
r 24         for(Integer lin)
--[ 2023.02.26.13.55.37.115.0 ]--
r 24         for(Integer line)
--[ 2023.02.26.13.55.37.671.0 ]--
r 24         for(Integer line )
--[ 2023.02.26.13.55.38.473.0 ]--
r 24         for(Integer line i)
--[ 2023.02.26.13.55.38.549.0 ]--
r 24         for(Integer line in)
--[ 2023.02.26.13.55.39.510.0 ]--
r 24         for(Integer line i)
--[ 2023.02.26.13.55.39.652.0 ]--
r 24         for(Integer line )
--[ 2023.02.26.13.55.39.855.0 ]--
r 24         for(Integer line :)
--[ 2023.02.26.13.55.39.992.0 ]--
r 24         for(Integer line : )
--[ 2023.02.26.13.55.43.633.0 ]--
r 24         for(Integer line : h)
--[ 2023.02.26.13.55.43.739.0 ]--
r 24         for(Integer line : ha)
--[ 2023.02.26.13.55.43.787.0 ]--
r 24         for(Integer line : han)
--[ 2023.02.26.13.55.43.838.0 ]--
r 24         for(Integer line : hand)
--[ 2023.02.26.13.55.43.981.0 ]--
r 24         for(Integer line : handl)
--[ 2023.02.26.13.55.44.063.0 ]--
r 24         for(Integer line : handle)
--[ 2023.02.26.13.55.44.168.0 ]--
r 24         for(Integer line : handler)
--[ 2023.02.26.13.55.44.330.0 ]--
r 24         for(Integer line : handler.)
--[ 2023.02.26.13.55.45.390.0 ]--
r 24         for(Integer line : handler.e)
--[ 2023.02.26.13.55.45.543.0 ]--
r 24         for(Integer line : handler.er)
--[ 2023.02.26.13.55.45.656.0 ]--
r 24         for(Integer line : handler.err)
--[ 2023.02.26.13.55.45.758.0 ]--
r 24         for(Integer line : handler.erro)
--[ 2023.02.26.13.55.46.139.0 ]--
r 24         for(Integer line : handler.errorlines)
--[ 2023.02.26.13.55.46.835.0 ]--
r 24         for(Integer line : handler.errorlines) 
--[ 2023.02.26.13.55.46.998.0 ]--
r 24         for(Integer line : handler.errorlines) {
--[ 2023.02.26.13.55.47.148.0 ]--
+ 25 
+ 26 }
--[ 2023.02.26.13.55.47.153.0 ]--
r 26         }
--[ 2023.02.26.13.55.47.166.0 ]--
r 25             
--[ 2023.02.26.13.55.48.231.0 ]--
r 25             S
--[ 2023.02.26.13.55.48.387.0 ]--
r 25             Sy
--[ 2023.02.26.13.55.48.416.0 ]--
r 25             Sys
--[ 2023.02.26.13.55.48.523.0 ]--
r 25             Syst
--[ 2023.02.26.13.55.48.639.0 ]--
r 25             Syste
--[ 2023.02.26.13.55.48.740.0 ]--
r 25             System
--[ 2023.02.26.13.55.48.848.0 ]--
r 25             System.
--[ 2023.02.26.13.55.49.170.0 ]--
r 25             System.o
--[ 2023.02.26.13.55.49.240.0 ]--
r 25             System.ou
--[ 2023.02.26.13.55.49.310.0 ]--
r 25             System.out
--[ 2023.02.26.13.55.49.765.0 ]--
r 25             System.out.
--[ 2023.02.26.13.55.49.952.0 ]--
r 25             System.out.p
--[ 2023.02.26.13.55.50.056.0 ]--
r 25             System.out.pr
--[ 2023.02.26.13.55.50.113.0 ]--
r 25             System.out.pri
--[ 2023.02.26.13.55.50.252.0 ]--
r 25             System.out.prin
--[ 2023.02.26.13.55.50.294.0 ]--
r 25             System.out.print
--[ 2023.02.26.13.55.50.526.0 ]--
r 25             System.out.printl
--[ 2023.02.26.13.55.50.676.0 ]--
r 25             System.out.println
--[ 2023.02.26.13.55.50.850.0 ]--
r 25             System.out.println()
--[ 2023.02.26.13.55.53.764.0 ]--
r 25             System.out.println("")
--[ 2023.02.26.13.55.54.374.0 ]--
r 25             System.out.println()
--[ 2023.02.26.13.55.54.555.0 ]--
r 25             System.out.println(i)
--[ 2023.02.26.13.55.54.945.0 ]--
r 25             System.out.println()
--[ 2023.02.26.13.55.55.128.0 ]--
r 25             System.out.println(l)
--[ 2023.02.26.13.55.55.341.0 ]--
r 25             System.out.println(li)
--[ 2023.02.26.13.55.55.432.0 ]--
r 25             System.out.println(lin)
--[ 2023.02.26.13.55.55.595.0 ]--
r 25             System.out.println(line)
--[ 2023.02.26.13.55.56.071.0 ]--
r 25             System.out.println(line);
--[ 2023.02.26.13.55.56.940.0 ]--
+ 23         
--[ 2023.02.26.13.55.57.538.0 ]--
r 24         S
--[ 2023.02.26.13.55.57.624.0 ]--
r 24         Sy
--[ 2023.02.26.13.55.57.792.0 ]--
r 24         Sys
--[ 2023.02.26.13.55.58.049.0 ]--
r 24         Sy
--[ 2023.02.26.13.55.58.189.0 ]--
r 24         S
--[ 2023.02.26.13.55.58.374.0 ]--
r 24         
--[ 2023.02.26.13.56.00.143.0 ]--
r 24         i
--[ 2023.02.26.13.56.00.250.0 ]--
r 24         if
--[ 2023.02.26.13.56.00.907.0 ]--
r 24         if()
--[ 2023.02.26.13.56.01.081.0 ]--
r 24         if(h)
--[ 2023.02.26.13.56.01.122.0 ]--
r 24         if(ha)
--[ 2023.02.26.13.56.01.211.0 ]--
r 24         if(han)
--[ 2023.02.26.13.56.01.256.0 ]--
r 24         if(hand)
--[ 2023.02.26.13.56.01.369.0 ]--
r 24         if(handl)
--[ 2023.02.26.13.56.01.441.0 ]--
r 24         if(handle)
--[ 2023.02.26.13.56.01.572.0 ]--
r 24         if(handler)
--[ 2023.02.26.13.56.01.684.0 ]--
r 24         if(handler.)
--[ 2023.02.26.13.56.05.410.0 ]--
r 24         if(handler.i)
--[ 2023.02.26.13.56.05.482.0 ]--
r 24         if(handler.is)
--[ 2023.02.26.13.56.06.122.0 ]--
r 24         if(handler.i)
--[ 2023.02.26.13.56.06.258.0 ]--
r 24         if(handler.)
--[ 2023.02.26.13.56.06.399.0 ]--
r 24         if(handler.e)
--[ 2023.02.26.13.56.06.528.0 ]--
r 24         if(handler.em)
--[ 2023.02.26.13.56.07.271.0 ]--
r 24         if(handler.e)
--[ 2023.02.26.13.56.07.394.0 ]--
r 24         if(handler.)
--[ 2023.02.26.13.56.07.991.0 ]--
r 24         if(handler.l)
--[ 2023.02.26.13.56.08.401.0 ]--
r 24         if(handler.)
--[ 2023.02.26.13.56.08.575.0 ]--
r 24         if(handler.s)
--[ 2023.02.26.13.56.09.908.0 ]--
r 24         if(handler.)
--[ 2023.02.26.13.56.10.167.0 ]--
r 24         if(handler.l)
--[ 2023.02.26.13.56.10.407.0 ]--
r 24         if(handler.le)
--[ 2023.02.26.13.56.10.760.0 ]--
r 24         if(handler.l)
--[ 2023.02.26.13.56.10.879.0 ]--
r 24         if(handler.)
--[ 2023.02.26.13.56.11.101.0 ]--
r 24         if(handler.c)
--[ 2023.02.26.13.56.11.203.0 ]--
r 24         if(handler.co)
--[ 2023.02.26.13.56.11.873.0 ]--
r 24         if(handler.c)
--[ 2023.02.26.13.56.12.006.0 ]--
r 24         if(handler.)
--[ 2023.02.26.13.56.12.892.0 ]--
r 24         if(handler)
--[ 2023.02.26.13.56.13.007.0 ]--
r 24         if(handler.)
--[ 2023.02.26.13.56.14.039.0 ]--
r 24         if(handler.errorlines)
--[ 2023.02.26.13.56.14.380.0 ]--
r 24         if(handler.errorlines.)
--[ 2023.02.26.13.56.16.008.0 ]--
r 24         if(handler.errorlines.isEmpty)
--[ 2023.02.26.13.56.16.010.0 ]--
r 24         if(handler.errorlines.isEmpty())
--[ 2023.02.26.13.56.17.520.0 ]--
r 24         if(!handler.errorlines.isEmpty())
--[ 2023.02.26.13.56.18.086.0 ]--
r 24         if(!handler.errorlines.isEmpty()) 
--[ 2023.02.26.13.56.18.244.0 ]--
r 24         if(!handler.errorlines.isEmpty()) {
--[ 2023.02.26.13.56.18.487.0 ]--
+ 25 
+ 26 }
--[ 2023.02.26.13.56.18.491.0 ]--
r 26         }
--[ 2023.02.26.13.56.18.515.0 ]--
r 25             
--[ 2023.02.26.13.56.18.817.0 ]--
r 25             S
--[ 2023.02.26.13.56.18.967.0 ]--
r 25             Sy
--[ 2023.02.26.13.56.19.025.0 ]--
r 25             Sys
--[ 2023.02.26.13.56.19.102.0 ]--
r 25             Syst
--[ 2023.02.26.13.56.19.184.0 ]--
r 25             Syste
--[ 2023.02.26.13.56.19.684.0 ]--
r 25             System
--[ 2023.02.26.13.56.19.941.0 ]--
r 25             System.
--[ 2023.02.26.13.56.20.151.0 ]--
r 25             System.o
--[ 2023.02.26.13.56.20.285.0 ]--
r 25             System.ou
--[ 2023.02.26.13.56.20.357.0 ]--
r 25             System.out
--[ 2023.02.26.13.56.20.486.0 ]--
r 25             System.out.
--[ 2023.02.26.13.56.20.634.0 ]--
r 25             System.out.l
--[ 2023.02.26.13.56.20.729.0 ]--
r 25             System.out.lp
--[ 2023.02.26.13.56.20.959.0 ]--
r 25             System.out.l
--[ 2023.02.26.13.56.21.087.0 ]--
r 25             System.out.
--[ 2023.02.26.13.56.21.159.0 ]--
r 25             System.out.p
--[ 2023.02.26.13.56.21.257.0 ]--
r 25             System.out.pr
--[ 2023.02.26.13.56.21.354.0 ]--
r 25             System.out.pri
--[ 2023.02.26.13.56.21.445.0 ]--
r 25             System.out.prin
--[ 2023.02.26.13.56.21.469.0 ]--
r 25             System.out.print
--[ 2023.02.26.13.56.21.673.0 ]--
r 25             System.out.printl
--[ 2023.02.26.13.56.21.823.0 ]--
r 25             System.out.println
--[ 2023.02.26.13.56.21.964.0 ]--
r 25             System.out.println()
--[ 2023.02.26.13.56.22.483.0 ]--
r 25             System.out.println("")
--[ 2023.02.26.13.56.22.952.0 ]--
r 25             System.out.println("E")
--[ 2023.02.26.13.56.23.120.0 ]--
r 25             System.out.println("Er")
--[ 2023.02.26.13.56.23.240.0 ]--
r 25             System.out.println("Err")
--[ 2023.02.26.13.56.23.308.0 ]--
r 25             System.out.println("Erro")
--[ 2023.02.26.13.56.23.450.0 ]--
r 25             System.out.println("Error")
--[ 2023.02.26.13.56.23.947.0 ]--
r 25             System.out.println("Errors")
--[ 2023.02.26.13.56.24.025.0 ]--
r 25             System.out.println("Errors ")
--[ 2023.02.26.13.56.25.304.0 ]--
r 25             System.out.println("Errors d")
--[ 2023.02.26.13.56.25.396.0 ]--
r 25             System.out.println("Errors de")
--[ 2023.02.26.13.56.25.557.0 ]--
r 25             System.out.println("Errors det")
--[ 2023.02.26.13.56.25.666.0 ]--
r 25             System.out.println("Errors dete")
--[ 2023.02.26.13.56.25.753.0 ]--
r 25             System.out.println("Errors detec")
--[ 2023.02.26.13.56.25.899.0 ]--
r 25             System.out.println("Errors detect")
--[ 2023.02.26.13.56.26.000.0 ]--
r 25             System.out.println("Errors detecte")
--[ 2023.02.26.13.56.26.068.0 ]--
r 25             System.out.println("Errors detected")
--[ 2023.02.26.13.56.26.835.0 ]--
r 25             System.out.println("Errors detected");
--[ 2023.02.26.13.56.28.949.0 ]--
- 26
+ 28         }
--[ 2023.02.26.13.56.28.958.0 ]--
r 26             for(Integer line : handler.errorlines) {
r 27                 System.out.println(line);
r 28             }
--[ 2023.02.26.13.56.32.539.0 ]--
r 24         if(handler.errorlines.isEmpty()) {
--[ 2023.02.26.13.56.33.333.0 ]--
+ 25             
--[ 2023.02.26.13.56.33.684.0 ]--
r 25             }
--[ 2023.02.26.13.56.33.687.0 ]--
r 25         }
--[ 2023.02.26.13.56.34.035.0 ]--
r 25         } 
--[ 2023.02.26.13.56.34.108.0 ]--
r 25         } e
--[ 2023.02.26.13.56.34.212.0 ]--
r 25         } el
--[ 2023.02.26.13.56.34.422.0 ]--
r 25         } ele
--[ 2023.02.26.13.56.34.755.0 ]--
r 25         } el
--[ 2023.02.26.13.56.34.896.0 ]--
r 25         } els
--[ 2023.02.26.13.56.34.999.0 ]--
r 25         } else
--[ 2023.02.26.13.56.35.074.0 ]--
r 25         } else 
--[ 2023.02.26.13.56.35.196.0 ]--
r 25         } else {
--[ 2023.02.26.13.56.35.863.0 ]--
+ 25             
--[ 2023.02.26.13.56.36.120.0 ]--
r 25             S
--[ 2023.02.26.13.56.36.274.0 ]--
r 25             Sy
--[ 2023.02.26.13.56.36.328.0 ]--
r 25             Sys
--[ 2023.02.26.13.56.36.456.0 ]--
r 25             Syst
--[ 2023.02.26.13.56.36.547.0 ]--
r 25             Syste
--[ 2023.02.26.13.56.36.669.0 ]--
r 25             System
--[ 2023.02.26.13.56.36.747.0 ]--
r 25             System.
--[ 2023.02.26.13.56.36.915.0 ]--
r 25             System.o
--[ 2023.02.26.13.56.36.960.0 ]--
r 25             System.ou
--[ 2023.02.26.13.56.37.050.0 ]--
r 25             System.out
--[ 2023.02.26.13.56.37.322.0 ]--
r 25             System.outp
--[ 2023.02.26.13.56.37.613.0 ]--
r 25             System.out
--[ 2023.02.26.13.56.37.680.0 ]--
r 25             System.out.
--[ 2023.02.26.13.56.37.819.0 ]--
r 25             System.out.p
--[ 2023.02.26.13.56.37.922.0 ]--
r 25             System.out.pr
--[ 2023.02.26.13.56.38.002.0 ]--
r 25             System.out.pri
--[ 2023.02.26.13.56.38.122.0 ]--
r 25             System.out.prin
--[ 2023.02.26.13.56.38.152.0 ]--
r 25             System.out.print
--[ 2023.02.26.13.56.38.391.0 ]--
r 25             System.out.printL
--[ 2023.02.26.13.56.38.706.0 ]--
r 25             System.out.print
--[ 2023.02.26.13.56.38.896.0 ]--
r 25             System.out.printl
--[ 2023.02.26.13.56.39.048.0 ]--
r 25             System.out.println
--[ 2023.02.26.13.56.39.201.0 ]--
r 25             System.out.println()
--[ 2023.02.26.13.56.39.596.0 ]--
r 25             System.out.println("")
--[ 2023.02.26.13.56.39.971.0 ]--
r 25             System.out.println("n")
--[ 2023.02.26.13.56.40.053.0 ]--
r 25             System.out.println("no")
--[ 2023.02.26.13.56.40.373.0 ]--
r 25             System.out.println("n")
--[ 2023.02.26.13.56.40.506.0 ]--
r 25             System.out.println("")
--[ 2023.02.26.13.56.40.734.0 ]--
r 25             System.out.println("N")
--[ 2023.02.26.13.56.40.988.0 ]--
r 25             System.out.println("No")
--[ 2023.02.26.13.56.41.201.0 ]--
r 25             System.out.println("No ")
--[ 2023.02.26.13.56.41.547.0 ]--
r 25             System.out.println("No E")
--[ 2023.02.26.13.56.41.707.0 ]--
r 25             System.out.println("No Er")
--[ 2023.02.26.13.56.41.860.0 ]--
r 25             System.out.println("No Err")
--[ 2023.02.26.13.56.41.945.0 ]--
r 25             System.out.println("No Erro")
--[ 2023.02.26.13.56.42.056.0 ]--
r 25             System.out.println("No Error")
--[ 2023.02.26.13.56.42.203.0 ]--
r 25             System.out.println("No Errors")
--[ 2023.02.26.13.56.42.307.0 ]--
r 25             System.out.println("No Errors ")
--[ 2023.02.26.13.56.42.687.0 ]--
r 25             System.out.println("No Errors d")
--[ 2023.02.26.13.56.42.783.0 ]--
r 25             System.out.println("No Errors de")
--[ 2023.02.26.13.56.42.873.0 ]--
r 25             System.out.println("No Errors det")
--[ 2023.02.26.13.56.42.981.0 ]--
r 25             System.out.println("No Errors dete")
--[ 2023.02.26.13.56.43.059.0 ]--
r 25             System.out.println("No Errors detec")
--[ 2023.02.26.13.56.43.205.0 ]--
r 25             System.out.println("No Errors detect")
--[ 2023.02.26.13.56.43.314.0 ]--
r 25             System.out.println("No Errors detecte")
--[ 2023.02.26.13.56.43.426.0 ]--
r 25             System.out.println("No Errors detected")
--[ 2023.02.26.13.56.43.951.0 ]--
r 25             System.out.println("No Errors detected");
--[ 2023.02.26.13.56.49.075.0 ]--
r 23 
--[ 2023.02.26.13.56.50.185.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.56.54.889.0 ]--
r 29                 System.out.println("line);
--[ 2023.02.26.13.56.55.350.0 ]--
r 29                 System.out.println(" line);
--[ 2023.02.26.13.56.55.494.0 ]--
r 29                 System.out.println("  line);
--[ 2023.02.26.13.56.56.750.0 ]--
r 29                 System.out.println("  "line);
--[ 2023.02.26.13.56.56.885.0 ]--
r 29                 System.out.println("  " line);
--[ 2023.02.26.13.56.57.085.0 ]--
r 29                 System.out.println("  " +line);
--[ 2023.02.26.13.56.57.155.0 ]--
r 29                 System.out.println("  " + line);
--[ 2023.02.26.13.56.59.082.0 ]--
r 27             System.out.println("Errors detected ");
--[ 2023.02.26.13.56.59.247.0 ]--
r 27             System.out.println("Errors detected o");
--[ 2023.02.26.13.56.59.323.0 ]--
r 27             System.out.println("Errors detected on");
--[ 2023.02.26.13.56.59.422.0 ]--
r 27             System.out.println("Errors detected on ");
--[ 2023.02.26.13.56.59.633.0 ]--
r 27             System.out.println("Errors detected on l");
--[ 2023.02.26.13.56.59.693.0 ]--
r 27             System.out.println("Errors detected on li");
--[ 2023.02.26.13.56.59.796.0 ]--
r 27             System.out.println("Errors detected on lin");
--[ 2023.02.26.13.56.59.887.0 ]--
r 27             System.out.println("Errors detected on line");
--[ 2023.02.26.13.56.59.958.0 ]--
r 27             System.out.println("Errors detected on lines");
--[ 2023.02.26.13.57.01.083.0 ]--
r 27             System.out.println("Errors detected on lines ");
--[ 2023.02.26.13.57.01.719.0 ]--
r 27             System.out.println("Errors detected on lines " );
--[ 2023.02.26.13.57.02.041.0 ]--
r 27             System.out.println("Errors detected on lines " +);
--[ 2023.02.26.13.57.02.453.0 ]--
r 27             System.out.println("Errors detected on lines " + );
--[ 2023.02.26.13.57.02.707.0 ]--
r 27             System.out.println("Errors detected on lines " + h);
--[ 2023.02.26.13.57.02.836.0 ]--
r 27             System.out.println("Errors detected on lines " + ha);
--[ 2023.02.26.13.57.02.908.0 ]--
r 27             System.out.println("Errors detected on lines " + han);
--[ 2023.02.26.13.57.02.954.0 ]--
r 27             System.out.println("Errors detected on lines " + hand);
--[ 2023.02.26.13.57.03.076.0 ]--
r 27             System.out.println("Errors detected on lines " + handl);
--[ 2023.02.26.13.57.03.139.0 ]--
r 27             System.out.println("Errors detected on lines " + handle);
--[ 2023.02.26.13.57.03.280.0 ]--
r 27             System.out.println("Errors detected on lines " + handler);
--[ 2023.02.26.13.57.03.321.0 ]--
r 27             System.out.println("Errors detected on lines " + handler.);
--[ 2023.02.26.13.57.03.806.0 ]--
r 27             System.out.println("Errors detected on lines " + handler.e);
--[ 2023.02.26.13.57.04.123.0 ]--
r 27             System.out.println("Errors detected on lines " + handler.errorlines);
--[ 2023.02.26.13.57.08.205.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.57.11.561.0 ]--
- 28
- 28
- 28
--[ 2023.02.26.13.57.19.896.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.57.23.505.0 ]--
r 27             System.out.println("Errors detected on lines: " + handler.errorlines);
--[ 2023.02.26.13.57.26.313.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.58.00.997.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.58.14.112.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.58.21.425.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.58.25.439.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2023.02.26.13.58.50.186.0 ]--
DisposeComponent
